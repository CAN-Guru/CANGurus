
hall2can.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003e  00800100  000022b6  0000234a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000022b6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000019b  0080013e  0080013e  00002388  2**0
                  ALLOC
  3 .comment      00000041  00000000  00000000  00002388  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000023cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00002410  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001489  00000000  00000000  00002568  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a9a  00000000  00000000  000039f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000959  00000000  00000000  0000448b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002b8  00000000  00000000  00004de4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000781  00000000  00000000  0000509c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a79  00000000  00000000  0000581d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00006296  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__ctors_end>
       4:	0c 94 38 0f 	jmp	0x1e70	; 0x1e70 <__vector_1>
       8:	0c 94 5f 0f 	jmp	0x1ebe	; 0x1ebe <__vector_2>
       c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      10:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      14:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      18:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      1c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      20:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      24:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      28:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      2c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      30:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      34:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      38:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      3c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      40:	0c 94 86 0f 	jmp	0x1f0c	; 0x1f0c <__vector_16>
      44:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      48:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      4c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      50:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      54:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      58:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      5c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      60:	0c 94 a8 0c 	jmp	0x1950	; 0x1950 <__vector_24>
      64:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 08       	sbc	r0, r0
      6c:	00 02       	muls	r16, r16
      6e:	01 00       	.word	0x0001	; ????
      70:	00 03       	mulsu	r16, r16
      72:	04 07       	cpc	r16, r20
	...

0000007c <digital_pin_to_bit_mask_PGM>:
      7c:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
      8c:	04 08 10 20                                         ... 

00000090 <digital_pin_to_port_PGM>:
      90:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
      a0:	03 03 03 03                                         ....

000000a4 <port_to_output_PGM>:
      a4:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

000000ae <port_to_mode_PGM>:
      ae:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

000000b8 <__ctors_start>:
      b8:	47 04       	cpc	r4, r7
      ba:	01 0f       	add	r16, r17

000000bc <__ctors_end>:
      bc:	11 24       	eor	r1, r1
      be:	1f be       	out	0x3f, r1	; 63
      c0:	cf ef       	ldi	r28, 0xFF	; 255
      c2:	d8 e0       	ldi	r29, 0x08	; 8
      c4:	de bf       	out	0x3e, r29	; 62
      c6:	cd bf       	out	0x3d, r28	; 61

000000c8 <__do_copy_data>:
      c8:	11 e0       	ldi	r17, 0x01	; 1
      ca:	a0 e0       	ldi	r26, 0x00	; 0
      cc:	b1 e0       	ldi	r27, 0x01	; 1
      ce:	e6 eb       	ldi	r30, 0xB6	; 182
      d0:	f2 e2       	ldi	r31, 0x22	; 34
      d2:	02 c0       	rjmp	.+4      	; 0xd8 <__do_copy_data+0x10>
      d4:	05 90       	lpm	r0, Z+
      d6:	0d 92       	st	X+, r0
      d8:	ae 33       	cpi	r26, 0x3E	; 62
      da:	b1 07       	cpc	r27, r17
      dc:	d9 f7       	brne	.-10     	; 0xd4 <__do_copy_data+0xc>

000000de <__do_clear_bss>:
      de:	22 e0       	ldi	r18, 0x02	; 2
      e0:	ae e3       	ldi	r26, 0x3E	; 62
      e2:	b1 e0       	ldi	r27, 0x01	; 1
      e4:	01 c0       	rjmp	.+2      	; 0xe8 <.do_clear_bss_start>

000000e6 <.do_clear_bss_loop>:
      e6:	1d 92       	st	X+, r1

000000e8 <.do_clear_bss_start>:
      e8:	a9 3d       	cpi	r26, 0xD9	; 217
      ea:	b2 07       	cpc	r27, r18
      ec:	e1 f7       	brne	.-8      	; 0xe6 <.do_clear_bss_loop>

000000ee <__do_global_ctors>:
      ee:	10 e0       	ldi	r17, 0x00	; 0
      f0:	ce e5       	ldi	r28, 0x5E	; 94
      f2:	d0 e0       	ldi	r29, 0x00	; 0
      f4:	04 c0       	rjmp	.+8      	; 0xfe <__do_global_ctors+0x10>
      f6:	21 97       	sbiw	r28, 0x01	; 1
      f8:	fe 01       	movw	r30, r28
      fa:	0e 94 39 11 	call	0x2272	; 0x2272 <__tablejump2__>
      fe:	cc 35       	cpi	r28, 0x5C	; 92
     100:	d1 07       	cpc	r29, r17
     102:	c9 f7       	brne	.-14     	; 0xf6 <__do_global_ctors+0x8>
     104:	0e 94 01 11 	call	0x2202	; 0x2202 <main>
     108:	0c 94 59 11 	jmp	0x22b2	; 0x22b2 <_exit>

0000010c <__bad_interrupt>:
     10c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000110 <_ZN11CAN_MCP25153endEv>:
     110:	0c 94 56 05 	jmp	0xaac	; 0xaac <_ZN8SPIClass3endEv>

00000114 <_ZN8SPIClass8transferEh>:
     114:	8e bd       	out	0x2e, r24	; 46
     116:	00 00       	nop
     118:	0d b4       	in	r0, 0x2d	; 45
     11a:	07 fe       	sbrs	r0, 7
     11c:	fd cf       	rjmp	.-6      	; 0x118 <_ZN8SPIClass8transferEh+0x4>
     11e:	8e b5       	in	r24, 0x2e	; 46
     120:	08 95       	ret

00000122 <_ZN11CAN_MCP25155_initEv>:
     122:	cf 93       	push	r28
     124:	df 93       	push	r29
     126:	ec 01       	movw	r28, r24
     128:	61 e0       	ldi	r22, 0x01	; 1
     12a:	8a 81       	ldd	r24, Y+2	; 0x02
     12c:	0e 94 91 10 	call	0x2122	; 0x2122 <pinMode>
     130:	61 e0       	ldi	r22, 0x01	; 1
     132:	8a 81       	ldd	r24, Y+2	; 0x02
     134:	df 91       	pop	r29
     136:	cf 91       	pop	r28
     138:	0c 94 ca 10 	jmp	0x2194	; 0x2194 <digitalWrite>

0000013c <_ZN11CAN_MCP2515C1Ev>:
     13c:	2e e1       	ldi	r18, 0x1E	; 30
     13e:	31 e0       	ldi	r19, 0x01	; 1
     140:	fc 01       	movw	r30, r24
     142:	31 83       	std	Z+1, r19	; 0x01
     144:	20 83       	st	Z, r18
     146:	2a e0       	ldi	r18, 0x0A	; 10
     148:	22 83       	std	Z+2, r18	; 0x02
     14a:	0c 94 91 00 	jmp	0x122	; 0x122 <_ZN11CAN_MCP25155_initEv>

0000014e <_ZN11CAN_MCP2515C1Eh>:
     14e:	2e e1       	ldi	r18, 0x1E	; 30
     150:	31 e0       	ldi	r19, 0x01	; 1
     152:	fc 01       	movw	r30, r24
     154:	31 83       	std	Z+1, r19	; 0x01
     156:	20 83       	st	Z, r18
     158:	62 83       	std	Z+2, r22	; 0x02
     15a:	0c 94 91 00 	jmp	0x122	; 0x122 <_ZN11CAN_MCP25155_initEv>

0000015e <_ZN11CAN_MCP25155resetEv>:
     15e:	cf 93       	push	r28
     160:	df 93       	push	r29
     162:	ec 01       	movw	r28, r24
     164:	60 e0       	ldi	r22, 0x00	; 0
     166:	8a 81       	ldd	r24, Y+2	; 0x02
     168:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     16c:	80 ec       	ldi	r24, 0xC0	; 192
     16e:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     172:	61 e0       	ldi	r22, 0x01	; 1
     174:	8a 81       	ldd	r24, Y+2	; 0x02
     176:	df 91       	pop	r29
     178:	cf 91       	pop	r28
     17a:	0c 94 ca 10 	jmp	0x2194	; 0x2194 <digitalWrite>

0000017e <_ZN11CAN_MCP251512writeAddressEhh>:
     17e:	ef 92       	push	r14
     180:	ff 92       	push	r15
     182:	1f 93       	push	r17
     184:	cf 93       	push	r28
     186:	df 93       	push	r29
     188:	1f 92       	push	r1
     18a:	cd b7       	in	r28, 0x3d	; 61
     18c:	de b7       	in	r29, 0x3e	; 62
     18e:	7c 01       	movw	r14, r24
     190:	16 2f       	mov	r17, r22
     192:	60 e0       	ldi	r22, 0x00	; 0
     194:	fc 01       	movw	r30, r24
     196:	82 81       	ldd	r24, Z+2	; 0x02
     198:	49 83       	std	Y+1, r20	; 0x01
     19a:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     19e:	82 e0       	ldi	r24, 0x02	; 2
     1a0:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     1a4:	81 2f       	mov	r24, r17
     1a6:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     1aa:	49 81       	ldd	r20, Y+1	; 0x01
     1ac:	84 2f       	mov	r24, r20
     1ae:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     1b2:	61 e0       	ldi	r22, 0x01	; 1
     1b4:	f7 01       	movw	r30, r14
     1b6:	82 81       	ldd	r24, Z+2	; 0x02
     1b8:	0f 90       	pop	r0
     1ba:	df 91       	pop	r29
     1bc:	cf 91       	pop	r28
     1be:	1f 91       	pop	r17
     1c0:	ff 90       	pop	r15
     1c2:	ef 90       	pop	r14
     1c4:	0c 94 ca 10 	jmp	0x2194	; 0x2194 <digitalWrite>

000001c8 <_ZN11CAN_MCP251513modifyAddressEhhh>:
     1c8:	ef 92       	push	r14
     1ca:	ff 92       	push	r15
     1cc:	1f 93       	push	r17
     1ce:	cf 93       	push	r28
     1d0:	df 93       	push	r29
     1d2:	00 d0       	rcall	.+0      	; 0x1d4 <_ZN11CAN_MCP251513modifyAddressEhhh+0xc>
     1d4:	cd b7       	in	r28, 0x3d	; 61
     1d6:	de b7       	in	r29, 0x3e	; 62
     1d8:	7c 01       	movw	r14, r24
     1da:	16 2f       	mov	r17, r22
     1dc:	60 e0       	ldi	r22, 0x00	; 0
     1de:	fc 01       	movw	r30, r24
     1e0:	82 81       	ldd	r24, Z+2	; 0x02
     1e2:	2a 83       	std	Y+2, r18	; 0x02
     1e4:	49 83       	std	Y+1, r20	; 0x01
     1e6:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     1ea:	85 e0       	ldi	r24, 0x05	; 5
     1ec:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     1f0:	81 2f       	mov	r24, r17
     1f2:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     1f6:	49 81       	ldd	r20, Y+1	; 0x01
     1f8:	84 2f       	mov	r24, r20
     1fa:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     1fe:	2a 81       	ldd	r18, Y+2	; 0x02
     200:	82 2f       	mov	r24, r18
     202:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     206:	61 e0       	ldi	r22, 0x01	; 1
     208:	f7 01       	movw	r30, r14
     20a:	82 81       	ldd	r24, Z+2	; 0x02
     20c:	0f 90       	pop	r0
     20e:	0f 90       	pop	r0
     210:	df 91       	pop	r29
     212:	cf 91       	pop	r28
     214:	1f 91       	pop	r17
     216:	ff 90       	pop	r15
     218:	ef 90       	pop	r14
     21a:	0c 94 ca 10 	jmp	0x2194	; 0x2194 <digitalWrite>

0000021e <_ZN11CAN_MCP251510readStatusEv>:
     21e:	1f 93       	push	r17
     220:	cf 93       	push	r28
     222:	df 93       	push	r29
     224:	ec 01       	movw	r28, r24
     226:	60 e0       	ldi	r22, 0x00	; 0
     228:	8a 81       	ldd	r24, Y+2	; 0x02
     22a:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     22e:	80 ea       	ldi	r24, 0xA0	; 160
     230:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     234:	8f ef       	ldi	r24, 0xFF	; 255
     236:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     23a:	18 2f       	mov	r17, r24
     23c:	61 e0       	ldi	r22, 0x01	; 1
     23e:	8a 81       	ldd	r24, Y+2	; 0x02
     240:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     244:	81 2f       	mov	r24, r17
     246:	df 91       	pop	r29
     248:	cf 91       	pop	r28
     24a:	1f 91       	pop	r17
     24c:	08 95       	ret

0000024e <_ZN11CAN_MCP25159availableEv>:
     24e:	0e 94 0f 01 	call	0x21e	; 0x21e <_ZN11CAN_MCP251510readStatusEv>
     252:	83 70       	andi	r24, 0x03	; 3
     254:	08 95       	ret

00000256 <_ZN11CAN_MCP25154readEv>:
     256:	4f 92       	push	r4
     258:	5f 92       	push	r5
     25a:	6f 92       	push	r6
     25c:	7f 92       	push	r7
     25e:	8f 92       	push	r8
     260:	9f 92       	push	r9
     262:	af 92       	push	r10
     264:	bf 92       	push	r11
     266:	df 92       	push	r13
     268:	ef 92       	push	r14
     26a:	ff 92       	push	r15
     26c:	0f 93       	push	r16
     26e:	1f 93       	push	r17
     270:	cf 93       	push	r28
     272:	df 93       	push	r29
     274:	ec 01       	movw	r28, r24
     276:	4b 01       	movw	r8, r22
     278:	cb 01       	movw	r24, r22
     27a:	0e 94 0f 01 	call	0x21e	; 0x21e <_ZN11CAN_MCP251510readStatusEv>
     27e:	80 fd       	sbrc	r24, 0
     280:	05 c0       	rjmp	.+10     	; 0x28c <_ZN11CAN_MCP25154readEv+0x36>
     282:	81 fd       	sbrc	r24, 1
     284:	05 c0       	rjmp	.+10     	; 0x290 <_ZN11CAN_MCP25154readEv+0x3a>
     286:	88 85       	ldd	r24, Y+8	; 0x08
     288:	8e 7f       	andi	r24, 0xFE	; 254
     28a:	a2 c0       	rjmp	.+324    	; 0x3d0 <_ZN11CAN_MCP25154readEv+0x17a>
     28c:	10 e9       	ldi	r17, 0x90	; 144
     28e:	01 c0       	rjmp	.+2      	; 0x292 <_ZN11CAN_MCP25154readEv+0x3c>
     290:	14 e9       	ldi	r17, 0x94	; 148
     292:	60 e0       	ldi	r22, 0x00	; 0
     294:	f4 01       	movw	r30, r8
     296:	82 81       	ldd	r24, Z+2	; 0x02
     298:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     29c:	81 2f       	mov	r24, r17
     29e:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     2a2:	8f ef       	ldi	r24, 0xFF	; 255
     2a4:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     2a8:	d8 2e       	mov	r13, r24
     2aa:	8f ef       	ldi	r24, 0xFF	; 255
     2ac:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     2b0:	e8 2e       	mov	r14, r24
     2b2:	8f ef       	ldi	r24, 0xFF	; 255
     2b4:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     2b8:	08 2f       	mov	r16, r24
     2ba:	8f ef       	ldi	r24, 0xFF	; 255
     2bc:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     2c0:	18 2f       	mov	r17, r24
     2c2:	8f ef       	ldi	r24, 0xFF	; 255
     2c4:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     2c8:	f8 2e       	mov	r15, r24
     2ca:	28 2f       	mov	r18, r24
     2cc:	2f 70       	andi	r18, 0x0F	; 15
     2ce:	92 2f       	mov	r25, r18
     2d0:	92 95       	swap	r25
     2d2:	90 7f       	andi	r25, 0xF0	; 240
     2d4:	8d 85       	ldd	r24, Y+13	; 0x0d
     2d6:	8f 70       	andi	r24, 0x0F	; 15
     2d8:	89 2b       	or	r24, r25
     2da:	8d 87       	std	Y+13, r24	; 0x0d
     2dc:	3e 01       	movw	r6, r28
     2de:	f0 e1       	ldi	r31, 0x10	; 16
     2e0:	6f 0e       	add	r6, r31
     2e2:	71 1c       	adc	r7, r1
     2e4:	41 2c       	mov	r4, r1
     2e6:	51 2c       	mov	r5, r1
     2e8:	a2 2e       	mov	r10, r18
     2ea:	b1 2c       	mov	r11, r1
     2ec:	4a 14       	cp	r4, r10
     2ee:	5b 04       	cpc	r5, r11
     2f0:	54 f4       	brge	.+20     	; 0x306 <_ZN11CAN_MCP25154readEv+0xb0>
     2f2:	8f ef       	ldi	r24, 0xFF	; 255
     2f4:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     2f8:	f3 01       	movw	r30, r6
     2fa:	81 93       	st	Z+, r24
     2fc:	3f 01       	movw	r6, r30
     2fe:	ff ef       	ldi	r31, 0xFF	; 255
     300:	4f 1a       	sub	r4, r31
     302:	5f 0a       	sbc	r5, r31
     304:	f3 cf       	rjmp	.-26     	; 0x2ec <_ZN11CAN_MCP25154readEv+0x96>
     306:	61 e0       	ldi	r22, 0x01	; 1
     308:	f4 01       	movw	r30, r8
     30a:	82 81       	ldd	r24, Z+2	; 0x02
     30c:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     310:	2e 2d       	mov	r18, r14
     312:	30 e0       	ldi	r19, 0x00	; 0
     314:	c9 01       	movw	r24, r18
     316:	43 e0       	ldi	r20, 0x03	; 3
     318:	95 95       	asr	r25
     31a:	87 95       	ror	r24
     31c:	4a 95       	dec	r20
     31e:	e1 f7       	brne	.-8      	; 0x318 <_ZN11CAN_MCP25154readEv+0xc2>
     320:	e8 85       	ldd	r30, Y+8	; 0x08
     322:	80 fb       	bst	r24, 0
     324:	e2 f9       	bld	r30, 2
     326:	e8 87       	std	Y+8, r30	; 0x08
     328:	fb 81       	ldd	r31, Y+3	; 0x03
     32a:	e2 ff       	sbrs	r30, 2
     32c:	32 c0       	rjmp	.+100    	; 0x392 <_ZN11CAN_MCP25154readEv+0x13c>
     32e:	4d 2d       	mov	r20, r13
     330:	50 e0       	ldi	r21, 0x00	; 0
     332:	60 e0       	ldi	r22, 0x00	; 0
     334:	70 e0       	ldi	r23, 0x00	; 0
     336:	a5 e1       	ldi	r26, 0x15	; 21
     338:	44 0f       	add	r20, r20
     33a:	55 1f       	adc	r21, r21
     33c:	66 1f       	adc	r22, r22
     33e:	77 1f       	adc	r23, r23
     340:	aa 95       	dec	r26
     342:	d1 f7       	brne	.-12     	; 0x338 <_ZN11CAN_MCP25154readEv+0xe2>
     344:	50 2b       	or	r21, r16
     346:	41 2b       	or	r20, r17
     348:	0e 2d       	mov	r16, r14
     34a:	00 7e       	andi	r16, 0xE0	; 224
     34c:	10 e0       	ldi	r17, 0x00	; 0
     34e:	20 e0       	ldi	r18, 0x00	; 0
     350:	30 e0       	ldi	r19, 0x00	; 0
     352:	bd e0       	ldi	r27, 0x0D	; 13
     354:	00 0f       	add	r16, r16
     356:	11 1f       	adc	r17, r17
     358:	22 1f       	adc	r18, r18
     35a:	33 1f       	adc	r19, r19
     35c:	ba 95       	dec	r27
     35e:	d1 f7       	brne	.-12     	; 0x354 <_ZN11CAN_MCP25154readEv+0xfe>
     360:	40 2b       	or	r20, r16
     362:	51 2b       	or	r21, r17
     364:	62 2b       	or	r22, r18
     366:	73 2b       	or	r23, r19
     368:	8e 2d       	mov	r24, r14
     36a:	83 70       	andi	r24, 0x03	; 3
     36c:	68 2b       	or	r22, r24
     36e:	48 83       	st	Y, r20
     370:	59 83       	std	Y+1, r21	; 0x01
     372:	6a 83       	std	Y+2, r22	; 0x02
     374:	87 2f       	mov	r24, r23
     376:	8f 71       	andi	r24, 0x1F	; 31
     378:	f0 7e       	andi	r31, 0xE0	; 224
     37a:	f8 2b       	or	r31, r24
     37c:	fb 83       	std	Y+3, r31	; 0x03
     37e:	8f 2d       	mov	r24, r15
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	16 e0       	ldi	r17, 0x06	; 6
     384:	95 95       	asr	r25
     386:	87 95       	ror	r24
     388:	1a 95       	dec	r17
     38a:	e1 f7       	brne	.-8      	; 0x384 <_ZN11CAN_MCP25154readEv+0x12e>
     38c:	80 fb       	bst	r24, 0
     38e:	e1 f9       	bld	r30, 1
     390:	1c c0       	rjmp	.+56     	; 0x3ca <_ZN11CAN_MCP25154readEv+0x174>
     392:	48 e0       	ldi	r20, 0x08	; 8
     394:	d4 9e       	mul	r13, r20
     396:	c0 01       	movw	r24, r0
     398:	11 24       	eor	r1, r1
     39a:	09 2e       	mov	r0, r25
     39c:	00 0c       	add	r0, r0
     39e:	aa 0b       	sbc	r26, r26
     3a0:	bb 0b       	sbc	r27, r27
     3a2:	e2 94       	swap	r14
     3a4:	e6 94       	lsr	r14
     3a6:	47 e0       	ldi	r20, 0x07	; 7
     3a8:	e4 22       	and	r14, r20
     3aa:	8e 29       	or	r24, r14
     3ac:	88 83       	st	Y, r24
     3ae:	99 83       	std	Y+1, r25	; 0x01
     3b0:	aa 83       	std	Y+2, r26	; 0x02
     3b2:	8b 2f       	mov	r24, r27
     3b4:	8f 71       	andi	r24, 0x1F	; 31
     3b6:	f0 7e       	andi	r31, 0xE0	; 224
     3b8:	f8 2b       	or	r31, r24
     3ba:	fb 83       	std	Y+3, r31	; 0x03
     3bc:	54 e0       	ldi	r21, 0x04	; 4
     3be:	35 95       	asr	r19
     3c0:	27 95       	ror	r18
     3c2:	5a 95       	dec	r21
     3c4:	e1 f7       	brne	.-8      	; 0x3be <_ZN11CAN_MCP25154readEv+0x168>
     3c6:	20 fb       	bst	r18, 0
     3c8:	e1 f9       	bld	r30, 1
     3ca:	e8 87       	std	Y+8, r30	; 0x08
     3cc:	88 85       	ldd	r24, Y+8	; 0x08
     3ce:	81 60       	ori	r24, 0x01	; 1
     3d0:	88 87       	std	Y+8, r24	; 0x08
     3d2:	ce 01       	movw	r24, r28
     3d4:	df 91       	pop	r29
     3d6:	cf 91       	pop	r28
     3d8:	1f 91       	pop	r17
     3da:	0f 91       	pop	r16
     3dc:	ff 90       	pop	r15
     3de:	ef 90       	pop	r14
     3e0:	df 90       	pop	r13
     3e2:	bf 90       	pop	r11
     3e4:	af 90       	pop	r10
     3e6:	9f 90       	pop	r9
     3e8:	8f 90       	pop	r8
     3ea:	7f 90       	pop	r7
     3ec:	6f 90       	pop	r6
     3ee:	5f 90       	pop	r5
     3f0:	4f 90       	pop	r4
     3f2:	08 95       	ret

000003f4 <_ZN11CAN_MCP25155writeERK9CAN_Frame>:
     3f4:	6f 92       	push	r6
     3f6:	7f 92       	push	r7
     3f8:	9f 92       	push	r9
     3fa:	af 92       	push	r10
     3fc:	bf 92       	push	r11
     3fe:	cf 92       	push	r12
     400:	df 92       	push	r13
     402:	ef 92       	push	r14
     404:	ff 92       	push	r15
     406:	0f 93       	push	r16
     408:	1f 93       	push	r17
     40a:	cf 93       	push	r28
     40c:	df 93       	push	r29
     40e:	00 d0       	rcall	.+0      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     410:	cd b7       	in	r28, 0x3d	; 61
     412:	de b7       	in	r29, 0x3e	; 62
     414:	3c 01       	movw	r6, r24
     416:	8b 01       	movw	r16, r22
     418:	0e 94 0f 01 	call	0x21e	; 0x21e <_ZN11CAN_MCP251510readStatusEv>
     41c:	82 ff       	sbrs	r24, 2
     41e:	09 c0       	rjmp	.+18     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
     420:	84 ff       	sbrs	r24, 4
     422:	0c c0       	rjmp	.+24     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     424:	86 fd       	sbrc	r24, 6
     426:	9c c0       	rjmp	.+312    	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
     428:	24 e8       	ldi	r18, 0x84	; 132
     42a:	b2 2e       	mov	r11, r18
     42c:	34 e4       	ldi	r19, 0x44	; 68
     42e:	93 2e       	mov	r9, r19
     430:	09 c0       	rjmp	.+18     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     432:	81 e8       	ldi	r24, 0x81	; 129
     434:	b8 2e       	mov	r11, r24
     436:	90 e4       	ldi	r25, 0x40	; 64
     438:	99 2e       	mov	r9, r25
     43a:	04 c0       	rjmp	.+8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     43c:	a2 e8       	ldi	r26, 0x82	; 130
     43e:	ba 2e       	mov	r11, r26
     440:	b2 e4       	ldi	r27, 0x42	; 66
     442:	9b 2e       	mov	r9, r27
     444:	f8 01       	movw	r30, r16
     446:	35 85       	ldd	r19, Z+13	; 0x0d
     448:	32 95       	swap	r19
     44a:	3f 70       	andi	r19, 0x0F	; 15
     44c:	20 85       	ldd	r18, Z+8	; 0x08
     44e:	93 81       	ldd	r25, Z+3	; 0x03
     450:	82 2f       	mov	r24, r18
     452:	82 70       	andi	r24, 0x02	; 2
     454:	22 ff       	sbrs	r18, 2
     456:	24 c0       	rjmp	.+72     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
     458:	20 81       	ld	r18, Z
     45a:	c2 2e       	mov	r12, r18
     45c:	d1 80       	ldd	r13, Z+1	; 0x01
     45e:	e2 80       	ldd	r14, Z+2	; 0x02
     460:	9f 71       	andi	r25, 0x1F	; 31
     462:	f9 2e       	mov	r15, r25
     464:	b7 01       	movw	r22, r14
     466:	a6 01       	movw	r20, r12
     468:	e5 e1       	ldi	r30, 0x15	; 21
     46a:	76 95       	lsr	r23
     46c:	67 95       	ror	r22
     46e:	57 95       	ror	r21
     470:	47 95       	ror	r20
     472:	ea 95       	dec	r30
     474:	d1 f7       	brne	.-12     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
     476:	a4 2e       	mov	r10, r20
     478:	b7 01       	movw	r22, r14
     47a:	a6 01       	movw	r20, r12
     47c:	fd e0       	ldi	r31, 0x0D	; 13
     47e:	76 95       	lsr	r23
     480:	67 95       	ror	r22
     482:	57 95       	ror	r21
     484:	47 95       	ror	r20
     486:	fa 95       	dec	r31
     488:	d1 f7       	brne	.-12     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
     48a:	40 7e       	andi	r20, 0xE0	; 224
     48c:	9e 2d       	mov	r25, r14
     48e:	93 70       	andi	r25, 0x03	; 3
     490:	49 2b       	or	r20, r25
     492:	48 60       	ori	r20, 0x08	; 8
     494:	ed 2c       	mov	r14, r13
     496:	f2 2e       	mov	r15, r18
     498:	88 23       	and	r24, r24
     49a:	c9 f0       	breq	.+50     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
     49c:	30 64       	ori	r19, 0x40	; 64
     49e:	17 c0       	rjmp	.+46     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
     4a0:	f8 01       	movw	r30, r16
     4a2:	40 81       	ld	r20, Z
     4a4:	51 81       	ldd	r21, Z+1	; 0x01
     4a6:	62 81       	ldd	r22, Z+2	; 0x02
     4a8:	79 2f       	mov	r23, r25
     4aa:	7f 71       	andi	r23, 0x1F	; 31
     4ac:	6a 01       	movw	r12, r20
     4ae:	7b 01       	movw	r14, r22
     4b0:	93 e0       	ldi	r25, 0x03	; 3
     4b2:	f6 94       	lsr	r15
     4b4:	e7 94       	ror	r14
     4b6:	d7 94       	ror	r13
     4b8:	c7 94       	ror	r12
     4ba:	9a 95       	dec	r25
     4bc:	d1 f7       	brne	.-12     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
     4be:	ac 2c       	mov	r10, r12
     4c0:	42 95       	swap	r20
     4c2:	44 0f       	add	r20, r20
     4c4:	40 7e       	andi	r20, 0xE0	; 224
     4c6:	81 11       	cpse	r24, r1
     4c8:	40 61       	ori	r20, 0x10	; 16
     4ca:	f1 2c       	mov	r15, r1
     4cc:	e1 2c       	mov	r14, r1
     4ce:	60 e0       	ldi	r22, 0x00	; 0
     4d0:	f3 01       	movw	r30, r6
     4d2:	82 81       	ldd	r24, Z+2	; 0x02
     4d4:	3a 83       	std	Y+2, r19	; 0x02
     4d6:	49 83       	std	Y+1, r20	; 0x01
     4d8:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     4dc:	89 2d       	mov	r24, r9
     4de:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     4e2:	8a 2d       	mov	r24, r10
     4e4:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     4e8:	49 81       	ldd	r20, Y+1	; 0x01
     4ea:	84 2f       	mov	r24, r20
     4ec:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     4f0:	8e 2d       	mov	r24, r14
     4f2:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     4f6:	8f 2d       	mov	r24, r15
     4f8:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     4fc:	3a 81       	ldd	r19, Y+2	; 0x02
     4fe:	83 2f       	mov	r24, r19
     500:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     504:	68 01       	movw	r12, r16
     506:	f0 e1       	ldi	r31, 0x10	; 16
     508:	cf 0e       	add	r12, r31
     50a:	d1 1c       	adc	r13, r1
     50c:	e1 2c       	mov	r14, r1
     50e:	f1 2c       	mov	r15, r1
     510:	f8 01       	movw	r30, r16
     512:	85 85       	ldd	r24, Z+13	; 0x0d
     514:	82 95       	swap	r24
     516:	8f 70       	andi	r24, 0x0F	; 15
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	e8 16       	cp	r14, r24
     51c:	f9 06       	cpc	r15, r25
     51e:	4c f4       	brge	.+18     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
     520:	f6 01       	movw	r30, r12
     522:	81 91       	ld	r24, Z+
     524:	6f 01       	movw	r12, r30
     526:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     52a:	ff ef       	ldi	r31, 0xFF	; 255
     52c:	ef 1a       	sub	r14, r31
     52e:	ff 0a       	sbc	r15, r31
     530:	ef cf       	rjmp	.-34     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
     532:	61 e0       	ldi	r22, 0x01	; 1
     534:	f3 01       	movw	r30, r6
     536:	82 81       	ldd	r24, Z+2	; 0x02
     538:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     53c:	60 e0       	ldi	r22, 0x00	; 0
     53e:	f3 01       	movw	r30, r6
     540:	82 81       	ldd	r24, Z+2	; 0x02
     542:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     546:	8b 2d       	mov	r24, r11
     548:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     54c:	61 e0       	ldi	r22, 0x01	; 1
     54e:	f3 01       	movw	r30, r6
     550:	82 81       	ldd	r24, Z+2	; 0x02
     552:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     556:	f8 01       	movw	r30, r16
     558:	85 85       	ldd	r24, Z+13	; 0x0d
     55a:	82 95       	swap	r24
     55c:	8f 70       	andi	r24, 0x0F	; 15
     55e:	01 c0       	rjmp	.+2      	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
     560:	80 e0       	ldi	r24, 0x00	; 0
     562:	0f 90       	pop	r0
     564:	0f 90       	pop	r0
     566:	df 91       	pop	r29
     568:	cf 91       	pop	r28
     56a:	1f 91       	pop	r17
     56c:	0f 91       	pop	r16
     56e:	ff 90       	pop	r15
     570:	ef 90       	pop	r14
     572:	df 90       	pop	r13
     574:	cf 90       	pop	r12
     576:	bf 90       	pop	r11
     578:	af 90       	pop	r10
     57a:	9f 90       	pop	r9
     57c:	7f 90       	pop	r7
     57e:	6f 90       	pop	r6
     580:	08 95       	ret

00000582 <_ZN11CAN_MCP25157setModeEh>:
     582:	26 2f       	mov	r18, r22
     584:	40 ee       	ldi	r20, 0xE0	; 224
     586:	6f e0       	ldi	r22, 0x0F	; 15
     588:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <_ZN11CAN_MCP251513modifyAddressEhhh>

0000058c <_ZN11CAN_MCP251510setBitrateEm>:
     58c:	cf 93       	push	r28
     58e:	df 93       	push	r29
     590:	ec 01       	movw	r28, r24
     592:	41 e0       	ldi	r20, 0x01	; 1
     594:	6a e2       	ldi	r22, 0x2A	; 42
     596:	0e 94 bf 00 	call	0x17e	; 0x17e <_ZN11CAN_MCP251512writeAddressEhh>
     59a:	48 eb       	ldi	r20, 0xB8	; 184
     59c:	69 e2       	ldi	r22, 0x29	; 41
     59e:	ce 01       	movw	r24, r28
     5a0:	0e 94 bf 00 	call	0x17e	; 0x17e <_ZN11CAN_MCP251512writeAddressEhh>
     5a4:	45 e0       	ldi	r20, 0x05	; 5
     5a6:	68 e2       	ldi	r22, 0x28	; 40
     5a8:	ce 01       	movw	r24, r28
     5aa:	df 91       	pop	r29
     5ac:	cf 91       	pop	r28
     5ae:	0c 94 bf 00 	jmp	0x17e	; 0x17e <_ZN11CAN_MCP251512writeAddressEhh>

000005b2 <_ZN11CAN_MCP251512clearFiltersEv>:
     5b2:	cf 93       	push	r28
     5b4:	df 93       	push	r29
     5b6:	ec 01       	movw	r28, r24
     5b8:	20 e6       	ldi	r18, 0x60	; 96
     5ba:	40 e6       	ldi	r20, 0x60	; 96
     5bc:	60 e6       	ldi	r22, 0x60	; 96
     5be:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <_ZN11CAN_MCP251513modifyAddressEhhh>
     5c2:	20 e6       	ldi	r18, 0x60	; 96
     5c4:	40 e6       	ldi	r20, 0x60	; 96
     5c6:	60 e7       	ldi	r22, 0x70	; 112
     5c8:	ce 01       	movw	r24, r28
     5ca:	df 91       	pop	r29
     5cc:	cf 91       	pop	r28
     5ce:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <_ZN11CAN_MCP251513modifyAddressEhhh>

000005d2 <_ZN11CAN_MCP251514clearRxBuffersEv>:
     5d2:	1f 93       	push	r17
     5d4:	cf 93       	push	r28
     5d6:	df 93       	push	r29
     5d8:	ec 01       	movw	r28, r24
     5da:	60 e0       	ldi	r22, 0x00	; 0
     5dc:	8a 81       	ldd	r24, Y+2	; 0x02
     5de:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     5e2:	82 e0       	ldi	r24, 0x02	; 2
     5e4:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     5e8:	81 e6       	ldi	r24, 0x61	; 97
     5ea:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     5ee:	1d e0       	ldi	r17, 0x0D	; 13
     5f0:	80 e0       	ldi	r24, 0x00	; 0
     5f2:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     5f6:	11 50       	subi	r17, 0x01	; 1
     5f8:	d9 f7       	brne	.-10     	; 0x5f0 <_ZN11CAN_MCP251514clearRxBuffersEv+0x1e>
     5fa:	61 e0       	ldi	r22, 0x01	; 1
     5fc:	8a 81       	ldd	r24, Y+2	; 0x02
     5fe:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     602:	60 e0       	ldi	r22, 0x00	; 0
     604:	8a 81       	ldd	r24, Y+2	; 0x02
     606:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     60a:	82 e0       	ldi	r24, 0x02	; 2
     60c:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     610:	81 e7       	ldi	r24, 0x71	; 113
     612:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     616:	1d e0       	ldi	r17, 0x0D	; 13
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     61e:	11 50       	subi	r17, 0x01	; 1
     620:	d9 f7       	brne	.-10     	; 0x618 <_ZN11CAN_MCP251514clearRxBuffersEv+0x46>
     622:	61 e0       	ldi	r22, 0x01	; 1
     624:	8a 81       	ldd	r24, Y+2	; 0x02
     626:	df 91       	pop	r29
     628:	cf 91       	pop	r28
     62a:	1f 91       	pop	r17
     62c:	0c 94 ca 10 	jmp	0x2194	; 0x2194 <digitalWrite>

00000630 <_ZN11CAN_MCP251514clearTxBuffersEv>:
     630:	1f 93       	push	r17
     632:	cf 93       	push	r28
     634:	df 93       	push	r29
     636:	ec 01       	movw	r28, r24
     638:	60 e0       	ldi	r22, 0x00	; 0
     63a:	8a 81       	ldd	r24, Y+2	; 0x02
     63c:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     640:	82 e0       	ldi	r24, 0x02	; 2
     642:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     646:	81 e3       	ldi	r24, 0x31	; 49
     648:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     64c:	1d e0       	ldi	r17, 0x0D	; 13
     64e:	80 e0       	ldi	r24, 0x00	; 0
     650:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     654:	11 50       	subi	r17, 0x01	; 1
     656:	d9 f7       	brne	.-10     	; 0x64e <_ZN11CAN_MCP251514clearTxBuffersEv+0x1e>
     658:	61 e0       	ldi	r22, 0x01	; 1
     65a:	8a 81       	ldd	r24, Y+2	; 0x02
     65c:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     660:	60 e0       	ldi	r22, 0x00	; 0
     662:	8a 81       	ldd	r24, Y+2	; 0x02
     664:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     668:	82 e0       	ldi	r24, 0x02	; 2
     66a:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     66e:	81 e4       	ldi	r24, 0x41	; 65
     670:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     674:	1d e0       	ldi	r17, 0x0D	; 13
     676:	80 e0       	ldi	r24, 0x00	; 0
     678:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     67c:	11 50       	subi	r17, 0x01	; 1
     67e:	d9 f7       	brne	.-10     	; 0x676 <_ZN11CAN_MCP251514clearTxBuffersEv+0x46>
     680:	61 e0       	ldi	r22, 0x01	; 1
     682:	8a 81       	ldd	r24, Y+2	; 0x02
     684:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     688:	60 e0       	ldi	r22, 0x00	; 0
     68a:	8a 81       	ldd	r24, Y+2	; 0x02
     68c:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     690:	82 e0       	ldi	r24, 0x02	; 2
     692:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     696:	81 e5       	ldi	r24, 0x51	; 81
     698:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     69c:	1d e0       	ldi	r17, 0x0D	; 13
     69e:	80 e0       	ldi	r24, 0x00	; 0
     6a0:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     6a4:	11 50       	subi	r17, 0x01	; 1
     6a6:	d9 f7       	brne	.-10     	; 0x69e <_ZN11CAN_MCP251514clearTxBuffersEv+0x6e>
     6a8:	61 e0       	ldi	r22, 0x01	; 1
     6aa:	8a 81       	ldd	r24, Y+2	; 0x02
     6ac:	df 91       	pop	r29
     6ae:	cf 91       	pop	r28
     6b0:	1f 91       	pop	r17
     6b2:	0c 94 ca 10 	jmp	0x2194	; 0x2194 <digitalWrite>

000006b6 <_ZN11CAN_MCP25155flushEv>:
     6b6:	cf 93       	push	r28
     6b8:	df 93       	push	r29
     6ba:	ec 01       	movw	r28, r24
     6bc:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <_ZN11CAN_MCP251514clearRxBuffersEv>
     6c0:	ce 01       	movw	r24, r28
     6c2:	df 91       	pop	r29
     6c4:	cf 91       	pop	r28
     6c6:	0c 94 18 03 	jmp	0x630	; 0x630 <_ZN11CAN_MCP251514clearTxBuffersEv>

000006ca <_ZN11CAN_MCP251516enableInterruptsEh>:
     6ca:	1f 93       	push	r17
     6cc:	cf 93       	push	r28
     6ce:	df 93       	push	r29
     6d0:	ec 01       	movw	r28, r24
     6d2:	16 2f       	mov	r17, r22
     6d4:	60 e0       	ldi	r22, 0x00	; 0
     6d6:	8a 81       	ldd	r24, Y+2	; 0x02
     6d8:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     6dc:	82 e0       	ldi	r24, 0x02	; 2
     6de:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     6e2:	8b e2       	ldi	r24, 0x2B	; 43
     6e4:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     6e8:	81 2f       	mov	r24, r17
     6ea:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN8SPIClass8transferEh>
     6ee:	61 e0       	ldi	r22, 0x01	; 1
     6f0:	8a 81       	ldd	r24, Y+2	; 0x02
     6f2:	df 91       	pop	r29
     6f4:	cf 91       	pop	r28
     6f6:	1f 91       	pop	r17
     6f8:	0c 94 ca 10 	jmp	0x2194	; 0x2194 <digitalWrite>

000006fc <_ZN11CAN_MCP25155beginEmh>:
     6fc:	cf 92       	push	r12
     6fe:	df 92       	push	r13
     700:	ef 92       	push	r14
     702:	ff 92       	push	r15
     704:	0f 93       	push	r16
     706:	1f 93       	push	r17
     708:	cf 93       	push	r28
     70a:	df 93       	push	r29
     70c:	1f 92       	push	r1
     70e:	cd b7       	in	r28, 0x3d	; 61
     710:	de b7       	in	r29, 0x3e	; 62
     712:	8c 01       	movw	r16, r24
     714:	6a 01       	movw	r12, r20
     716:	7b 01       	movw	r14, r22
     718:	29 83       	std	Y+1, r18	; 0x01
     71a:	0e 94 20 05 	call	0xa40	; 0xa40 <_ZN8SPIClass5beginEv>
     71e:	c8 01       	movw	r24, r16
     720:	0e 94 af 00 	call	0x15e	; 0x15e <_ZN11CAN_MCP25155resetEv>
     724:	c8 01       	movw	r24, r16
     726:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <_ZN11CAN_MCP251514clearRxBuffersEv>
     72a:	c8 01       	movw	r24, r16
     72c:	0e 94 18 03 	call	0x630	; 0x630 <_ZN11CAN_MCP251514clearTxBuffersEv>
     730:	c8 01       	movw	r24, r16
     732:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <_ZN11CAN_MCP251512clearFiltersEv>
     736:	61 e0       	ldi	r22, 0x01	; 1
     738:	c8 01       	movw	r24, r16
     73a:	0e 94 65 03 	call	0x6ca	; 0x6ca <_ZN11CAN_MCP251516enableInterruptsEh>
     73e:	b7 01       	movw	r22, r14
     740:	a6 01       	movw	r20, r12
     742:	c8 01       	movw	r24, r16
     744:	0e 94 c6 02 	call	0x58c	; 0x58c <_ZN11CAN_MCP251510setBitrateEm>
     748:	29 81       	ldd	r18, Y+1	; 0x01
     74a:	62 2f       	mov	r22, r18
     74c:	c8 01       	movw	r24, r16
     74e:	0f 90       	pop	r0
     750:	df 91       	pop	r29
     752:	cf 91       	pop	r28
     754:	1f 91       	pop	r17
     756:	0f 91       	pop	r16
     758:	ff 90       	pop	r15
     75a:	ef 90       	pop	r14
     75c:	df 90       	pop	r13
     75e:	cf 90       	pop	r12
     760:	0c 94 c1 02 	jmp	0x582	; 0x582 <_ZN11CAN_MCP25157setModeEh>

00000764 <_ZN11CAN_MCP25155beginEm>:
     764:	20 e0       	ldi	r18, 0x00	; 0
     766:	0c 94 7e 03 	jmp	0x6fc	; 0x6fc <_ZN11CAN_MCP25155beginEmh>

0000076a <_ZN15CAN_MCP2515plusC1Eh>:
     76a:	0f 93       	push	r16
     76c:	1f 93       	push	r17
     76e:	cf 93       	push	r28
     770:	df 93       	push	r29
     772:	1f 92       	push	r1
     774:	cd b7       	in	r28, 0x3d	; 61
     776:	de b7       	in	r29, 0x3e	; 62
     778:	8c 01       	movw	r16, r24
     77a:	69 83       	std	Y+1, r22	; 0x01
     77c:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN11CAN_MCP2515C1Ev>
     780:	8e e0       	ldi	r24, 0x0E	; 14
     782:	91 e0       	ldi	r25, 0x01	; 1
     784:	f8 01       	movw	r30, r16
     786:	91 83       	std	Z+1, r25	; 0x01
     788:	80 83       	st	Z, r24
     78a:	69 81       	ldd	r22, Y+1	; 0x01
     78c:	62 83       	std	Z+2, r22	; 0x02
     78e:	c8 01       	movw	r24, r16
     790:	0f 90       	pop	r0
     792:	df 91       	pop	r29
     794:	cf 91       	pop	r28
     796:	1f 91       	pop	r17
     798:	0f 91       	pop	r16
     79a:	0c 94 91 00 	jmp	0x122	; 0x122 <_ZN11CAN_MCP25155_initEv>

0000079e <_ZN15CAN_MCP2515plus11can_answer2Ehb>:
     79e:	fc 01       	movw	r30, r24
     7a0:	83 81       	ldd	r24, Z+3	; 0x03
     7a2:	94 81       	ldd	r25, Z+4	; 0x04
     7a4:	92 8b       	std	Z+18, r25	; 0x12
     7a6:	81 8b       	std	Z+17, r24	; 0x11
     7a8:	43 8b       	std	Z+19, r20	; 0x13
     7aa:	62 95       	swap	r22
     7ac:	60 7f       	andi	r22, 0xF0	; 240
     7ae:	81 8d       	ldd	r24, Z+25	; 0x19
     7b0:	8f 70       	andi	r24, 0x0F	; 15
     7b2:	68 2b       	or	r22, r24
     7b4:	61 8f       	std	Z+25, r22	; 0x19
     7b6:	8d b7       	in	r24, 0x3d	; 61
     7b8:	9e b7       	in	r25, 0x3e	; 62
     7ba:	48 97       	sbiw	r24, 0x18	; 24
     7bc:	0f b6       	in	r0, 0x3f	; 63
     7be:	f8 94       	cli
     7c0:	9e bf       	out	0x3e, r25	; 62
     7c2:	0f be       	out	0x3f, r0	; 63
     7c4:	8d bf       	out	0x3d, r24	; 61
     7c6:	ad b7       	in	r26, 0x3d	; 61
     7c8:	be b7       	in	r27, 0x3e	; 62
     7ca:	11 96       	adiw	r26, 0x01	; 1
     7cc:	88 e1       	ldi	r24, 0x18	; 24
     7ce:	3c 96       	adiw	r30, 0x0c	; 12
     7d0:	01 90       	ld	r0, Z+
     7d2:	0d 92       	st	X+, r0
     7d4:	8a 95       	dec	r24
     7d6:	e1 f7       	brne	.-8      	; 0x7d0 <_ZN15CAN_MCP2515plus11can_answer2Ehb+0x32>
     7d8:	0e 94 ce 04 	call	0x99c	; 0x99c <_Z12sendCanFrame9CAN_Frame>
     7dc:	8d b7       	in	r24, 0x3d	; 61
     7de:	9e b7       	in	r25, 0x3e	; 62
     7e0:	48 96       	adiw	r24, 0x18	; 24
     7e2:	0f b6       	in	r0, 0x3f	; 63
     7e4:	f8 94       	cli
     7e6:	9e bf       	out	0x3e, r25	; 62
     7e8:	0f be       	out	0x3f, r0	; 63
     7ea:	8d bf       	out	0x3d, r24	; 61
     7ec:	08 95       	ret

000007ee <_ZN15CAN_MCP2515plus10can_answerEh>:
     7ee:	41 e0       	ldi	r20, 0x01	; 1
     7f0:	0c 94 cf 03 	jmp	0x79e	; 0x79e <_ZN15CAN_MCP2515plus11can_answer2Ehb>

000007f4 <_ZN15CAN_MCP2515plus16configTerminatorEii>:
     7f4:	fc 01       	movw	r30, r24
     7f6:	8d e1       	ldi	r24, 0x1D	; 29
     7f8:	80 8b       	std	Z+16, r24	; 0x10
     7fa:	80 85       	ldd	r24, Z+8	; 0x08
     7fc:	84 8f       	std	Z+28, r24	; 0x1c
     7fe:	81 85       	ldd	r24, Z+9	; 0x09
     800:	85 8f       	std	Z+29, r24	; 0x1d
     802:	82 85       	ldd	r24, Z+10	; 0x0a
     804:	86 8f       	std	Z+30, r24	; 0x1e
     806:	83 85       	ldd	r24, Z+11	; 0x0b
     808:	87 8f       	std	Z+31, r24	; 0x1f
     80a:	60 a3       	std	Z+32, r22	; 0x20
     80c:	41 a3       	std	Z+33, r20	; 0x21
     80e:	66 e0       	ldi	r22, 0x06	; 6
     810:	cf 01       	movw	r24, r30
     812:	0c 94 f7 03 	jmp	0x7ee	; 0x7ee <_ZN15CAN_MCP2515plus10can_answerEh>

00000816 <_ZN15CAN_MCP2515plus15configDataFrameEPhi>:
     816:	cf 93       	push	r28
     818:	df 93       	push	r29
     81a:	fc 01       	movw	r30, r24
     81c:	8d e1       	ldi	r24, 0x1D	; 29
     81e:	80 8b       	std	Z+16, r24	; 0x10
     820:	4f 5f       	subi	r20, 0xFF	; 255
     822:	5f 4f       	sbci	r21, 0xFF	; 255
     824:	52 8b       	std	Z+18, r21	; 0x12
     826:	41 8b       	std	Z+17, r20	; 0x11
     828:	81 e0       	ldi	r24, 0x01	; 1
     82a:	83 8b       	std	Z+19, r24	; 0x13
     82c:	81 8d       	ldd	r24, Z+25	; 0x19
     82e:	8f 70       	andi	r24, 0x0F	; 15
     830:	80 68       	ori	r24, 0x80	; 128
     832:	81 8f       	std	Z+25, r24	; 0x19
     834:	db 01       	movw	r26, r22
     836:	ef 01       	movw	r28, r30
     838:	6c 96       	adiw	r28, 0x1c	; 28
     83a:	cf 01       	movw	r24, r30
     83c:	84 96       	adiw	r24, 0x24	; 36
     83e:	2d 91       	ld	r18, X+
     840:	29 93       	st	Y+, r18
     842:	c8 17       	cp	r28, r24
     844:	d9 07       	cpc	r29, r25
     846:	d9 f7       	brne	.-10     	; 0x83e <_ZN15CAN_MCP2515plus15configDataFrameEPhi+0x28>
     848:	8d b7       	in	r24, 0x3d	; 61
     84a:	9e b7       	in	r25, 0x3e	; 62
     84c:	48 97       	sbiw	r24, 0x18	; 24
     84e:	0f b6       	in	r0, 0x3f	; 63
     850:	f8 94       	cli
     852:	9e bf       	out	0x3e, r25	; 62
     854:	0f be       	out	0x3f, r0	; 63
     856:	8d bf       	out	0x3d, r24	; 61
     858:	ad b7       	in	r26, 0x3d	; 61
     85a:	be b7       	in	r27, 0x3e	; 62
     85c:	11 96       	adiw	r26, 0x01	; 1
     85e:	88 e1       	ldi	r24, 0x18	; 24
     860:	3c 96       	adiw	r30, 0x0c	; 12
     862:	01 90       	ld	r0, Z+
     864:	0d 92       	st	X+, r0
     866:	8a 95       	dec	r24
     868:	e1 f7       	brne	.-8      	; 0x862 <_ZN15CAN_MCP2515plus15configDataFrameEPhi+0x4c>
     86a:	0e 94 ce 04 	call	0x99c	; 0x99c <_Z12sendCanFrame9CAN_Frame>
     86e:	8d b7       	in	r24, 0x3d	; 61
     870:	9e b7       	in	r25, 0x3e	; 62
     872:	48 96       	adiw	r24, 0x18	; 24
     874:	0f b6       	in	r0, 0x3f	; 63
     876:	f8 94       	cli
     878:	9e bf       	out	0x3e, r25	; 62
     87a:	0f be       	out	0x3f, r0	; 63
     87c:	8d bf       	out	0x3d, r24	; 61
     87e:	61 e0       	ldi	r22, 0x01	; 1
     880:	70 e0       	ldi	r23, 0x00	; 0
     882:	80 e0       	ldi	r24, 0x00	; 0
     884:	90 e0       	ldi	r25, 0x00	; 0
     886:	df 91       	pop	r29
     888:	cf 91       	pop	r28
     88a:	0c 94 f3 0f 	jmp	0x1fe6	; 0x1fe6 <delay>

0000088e <_GLOBAL__sub_I__ZN11CAN_MCP2515C2Ev>:
     88e:	6a e0       	ldi	r22, 0x0A	; 10
     890:	8a e7       	ldi	r24, 0x7A	; 122
     892:	91 e0       	ldi	r25, 0x01	; 1
     894:	0e 94 a7 00 	call	0x14e	; 0x14e <_ZN11CAN_MCP2515C1Eh>
     898:	6a e0       	ldi	r22, 0x0A	; 10
     89a:	8e e3       	ldi	r24, 0x3E	; 62
     89c:	91 e0       	ldi	r25, 0x01	; 1
     89e:	0c 94 b5 03 	jmp	0x76a	; 0x76a <_ZN15CAN_MCP2515plusC1Eh>

000008a2 <_Z13highbyte2chari>:
     8a2:	6a e0       	ldi	r22, 0x0A	; 10
     8a4:	70 e0       	ldi	r23, 0x00	; 0
     8a6:	0e 94 11 11 	call	0x2222	; 0x2222 <__divmodhi4>
     8aa:	80 e3       	ldi	r24, 0x30	; 48
     8ac:	86 0f       	add	r24, r22
     8ae:	08 95       	ret

000008b0 <_Z12lowbyte2chari>:
     8b0:	6a e0       	ldi	r22, 0x0A	; 10
     8b2:	70 e0       	ldi	r23, 0x00	; 0
     8b4:	0e 94 11 11 	call	0x2222	; 0x2222 <__divmodhi4>
     8b8:	80 5d       	subi	r24, 0xD0	; 208
     8ba:	08 95       	ret

000008bc <_Z17what_is_your_namePKhhP9CAN_Frame>:
     8bc:	70 e0       	ldi	r23, 0x00	; 0
     8be:	60 5f       	subi	r22, 0xF0	; 240
     8c0:	7f 4f       	sbci	r23, 0xFF	; 255
     8c2:	fa 01       	movw	r30, r20
     8c4:	e6 0f       	add	r30, r22
     8c6:	f7 1f       	adc	r31, r23
     8c8:	9c 01       	movw	r18, r24
     8ca:	2d 5f       	subi	r18, 0xFD	; 253
     8cc:	3f 4f       	sbci	r19, 0xFF	; 255
     8ce:	dc 01       	movw	r26, r24
     8d0:	4d 91       	ld	r20, X+
     8d2:	cd 01       	movw	r24, r26
     8d4:	41 93       	st	Z+, r20
     8d6:	a2 17       	cp	r26, r18
     8d8:	b3 07       	cpc	r27, r19
     8da:	c9 f7       	brne	.-14     	; 0x8ce <_Z17what_is_your_namePKhhP9CAN_Frame+0x12>
     8dc:	08 95       	ret

000008de <_Z7hex2dech>:
     8de:	98 2f       	mov	r25, r24
     8e0:	92 95       	swap	r25
     8e2:	9f 70       	andi	r25, 0x0F	; 15
     8e4:	8f 70       	andi	r24, 0x0F	; 15
     8e6:	2a e0       	ldi	r18, 0x0A	; 10
     8e8:	92 9f       	mul	r25, r18
     8ea:	80 0d       	add	r24, r0
     8ec:	11 24       	eor	r1, r1
     8ee:	08 95       	ret

000008f0 <_Z11generateUIDmP12deviceparams>:
     8f0:	cf 92       	push	r12
     8f2:	df 92       	push	r13
     8f4:	ef 92       	push	r14
     8f6:	ff 92       	push	r15
     8f8:	fa 01       	movw	r30, r20
     8fa:	20 81       	ld	r18, Z
     8fc:	30 e0       	ldi	r19, 0x00	; 0
     8fe:	a9 01       	movw	r20, r18
     900:	40 53       	subi	r20, 0x30	; 48
     902:	51 09       	sbc	r21, r1
     904:	21 81       	ldd	r18, Z+1	; 0x01
     906:	30 e0       	ldi	r19, 0x00	; 0
     908:	20 53       	subi	r18, 0x30	; 48
     90a:	31 09       	sbc	r19, r1
     90c:	d9 01       	movw	r26, r18
     90e:	aa 0f       	add	r26, r26
     910:	bb 1f       	adc	r27, r27
     912:	2a 0f       	add	r18, r26
     914:	3b 1f       	adc	r19, r27
     916:	24 0f       	add	r18, r20
     918:	35 1f       	adc	r19, r21
     91a:	69 01       	movw	r12, r18
     91c:	33 0f       	add	r19, r19
     91e:	ee 08       	sbc	r14, r14
     920:	ff 08       	sbc	r15, r15
     922:	6c 0d       	add	r22, r12
     924:	7d 1d       	adc	r23, r13
     926:	8e 1d       	adc	r24, r14
     928:	9f 1d       	adc	r25, r15
     92a:	93 83       	std	Z+3, r25	; 0x03
     92c:	84 83       	std	Z+4, r24	; 0x04
     92e:	75 83       	std	Z+5, r23	; 0x05
     930:	66 83       	std	Z+6, r22	; 0x06
     932:	ff 90       	pop	r15
     934:	ef 90       	pop	r14
     936:	df 90       	pop	r13
     938:	cf 90       	pop	r12
     93a:	08 95       	ret

0000093c <_Z12generateHashm>:
     93c:	0f 93       	push	r16
     93e:	1f 93       	push	r17
     940:	8c 01       	movw	r16, r24
     942:	22 27       	eor	r18, r18
     944:	33 27       	eor	r19, r19
     946:	60 27       	eor	r22, r16
     948:	71 27       	eor	r23, r17
     94a:	cb 01       	movw	r24, r22
     94c:	8f 77       	andi	r24, 0x7F	; 127
     94e:	93 60       	ori	r25, 0x03	; 3
     950:	1f 91       	pop	r17
     952:	0f 91       	pop	r16
     954:	08 95       	ret

00000956 <_Z16goIntoBootloaderv>:
     956:	ee e3       	ldi	r30, 0x3E	; 62
     958:	f1 e0       	ldi	r31, 0x01	; 1
     95a:	83 e0       	ldi	r24, 0x03	; 3
     95c:	84 8f       	std	Z+28, r24	; 0x1c
     95e:	85 81       	ldd	r24, Z+5	; 0x05
     960:	85 8f       	std	Z+29, r24	; 0x1d
     962:	86 81       	ldd	r24, Z+6	; 0x06
     964:	86 8f       	std	Z+30, r24	; 0x1e
     966:	63 e0       	ldi	r22, 0x03	; 3
     968:	cf 01       	movw	r24, r30
     96a:	0e 94 f7 03 	call	0x7ee	; 0x7ee <_ZN15CAN_MCP2515plus10can_answerEh>
     96e:	2f ef       	ldi	r18, 0xFF	; 255
     970:	84 e3       	ldi	r24, 0x34	; 52
     972:	9c e0       	ldi	r25, 0x0C	; 12
     974:	21 50       	subi	r18, 0x01	; 1
     976:	80 40       	sbci	r24, 0x00	; 0
     978:	90 40       	sbci	r25, 0x00	; 0
     97a:	e1 f7       	brne	.-8      	; 0x974 <_Z16goIntoBootloaderv+0x1e>
     97c:	00 c0       	rjmp	.+0      	; 0x97e <_Z16goIntoBootloaderv+0x28>
     97e:	00 00       	nop
     980:	80 e0       	ldi	r24, 0x00	; 0
     982:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <detachInterrupt>
     986:	2f e7       	ldi	r18, 0x7F	; 127
     988:	8f e4       	ldi	r24, 0x4F	; 79
     98a:	92 e1       	ldi	r25, 0x12	; 18
     98c:	21 50       	subi	r18, 0x01	; 1
     98e:	80 40       	sbci	r24, 0x00	; 0
     990:	90 40       	sbci	r25, 0x00	; 0
     992:	e1 f7       	brne	.-8      	; 0x98c <_Z16goIntoBootloaderv+0x36>
     994:	00 c0       	rjmp	.+0      	; 0x996 <_Z16goIntoBootloaderv+0x40>
     996:	00 00       	nop
     998:	0c 94 00 1c 	jmp	0x3800	; 0x3800 <__data_load_end+0x150c>

0000099c <_Z12sendCanFrame9CAN_Frame>:
     99c:	cf 93       	push	r28
     99e:	df 93       	push	r29
     9a0:	cd b7       	in	r28, 0x3d	; 61
     9a2:	de b7       	in	r29, 0x3e	; 62
     9a4:	8d 85       	ldd	r24, Y+13	; 0x0d
     9a6:	84 60       	ori	r24, 0x04	; 4
     9a8:	8d 87       	std	Y+13, r24	; 0x0d
     9aa:	89 85       	ldd	r24, Y+9	; 0x09
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	a0 e0       	ldi	r26, 0x00	; 0
     9b0:	b0 e0       	ldi	r27, 0x00	; 0
     9b2:	21 e1       	ldi	r18, 0x11	; 17
     9b4:	88 0f       	add	r24, r24
     9b6:	99 1f       	adc	r25, r25
     9b8:	aa 1f       	adc	r26, r26
     9ba:	bb 1f       	adc	r27, r27
     9bc:	2a 95       	dec	r18
     9be:	d1 f7       	brne	.-12     	; 0x9b4 <_Z12sendCanFrame9CAN_Frame+0x18>
     9c0:	4a 85       	ldd	r20, Y+10	; 0x0a
     9c2:	5b 85       	ldd	r21, Y+11	; 0x0b
     9c4:	60 e0       	ldi	r22, 0x00	; 0
     9c6:	70 e0       	ldi	r23, 0x00	; 0
     9c8:	84 2b       	or	r24, r20
     9ca:	95 2b       	or	r25, r21
     9cc:	a6 2b       	or	r26, r22
     9ce:	b7 2b       	or	r27, r23
     9d0:	28 85       	ldd	r18, Y+8	; 0x08
     9d2:	3c 85       	ldd	r19, Y+12	; 0x0c
     9d4:	20 7e       	andi	r18, 0xE0	; 224
     9d6:	33 23       	and	r19, r19
     9d8:	11 f0       	breq	.+4      	; 0x9de <_Z12sendCanFrame9CAN_Frame+0x42>
     9da:	a1 60       	ori	r26, 0x01	; 1
     9dc:	02 c0       	rjmp	.+4      	; 0x9e2 <_Z12sendCanFrame9CAN_Frame+0x46>
     9de:	ae 7f       	andi	r26, 0xFE	; 254
     9e0:	bf 71       	andi	r27, 0x1F	; 31
     9e2:	8d 83       	std	Y+5, r24	; 0x05
     9e4:	9e 83       	std	Y+6, r25	; 0x06
     9e6:	af 83       	std	Y+7, r26	; 0x07
     9e8:	8b 2f       	mov	r24, r27
     9ea:	8f 71       	andi	r24, 0x1F	; 31
     9ec:	28 2b       	or	r18, r24
     9ee:	28 87       	std	Y+8, r18	; 0x08
     9f0:	be 01       	movw	r22, r28
     9f2:	6b 5f       	subi	r22, 0xFB	; 251
     9f4:	7f 4f       	sbci	r23, 0xFF	; 255
     9f6:	8a e7       	ldi	r24, 0x7A	; 122
     9f8:	91 e0       	ldi	r25, 0x01	; 1
     9fa:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <_ZN11CAN_MCP25155writeERK9CAN_Frame>
     9fe:	df 91       	pop	r29
     a00:	cf 91       	pop	r28
     a02:	08 95       	ret

00000a04 <_Z11getCanFramev>:
     a04:	cf 93       	push	r28
     a06:	df 93       	push	r29
     a08:	ec 01       	movw	r28, r24
     a0a:	6a e7       	ldi	r22, 0x7A	; 122
     a0c:	71 e0       	ldi	r23, 0x01	; 1
     a0e:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN11CAN_MCP25154readEv>
     a12:	88 81       	ld	r24, Y
     a14:	99 81       	ldd	r25, Y+1	; 0x01
     a16:	aa 81       	ldd	r26, Y+2	; 0x02
     a18:	2b 81       	ldd	r18, Y+3	; 0x03
     a1a:	b2 2f       	mov	r27, r18
     a1c:	bf 71       	andi	r27, 0x1F	; 31
     a1e:	ac 01       	movw	r20, r24
     a20:	bd 01       	movw	r22, r26
     a22:	81 e1       	ldi	r24, 0x11	; 17
     a24:	76 95       	lsr	r23
     a26:	67 95       	ror	r22
     a28:	57 95       	ror	r21
     a2a:	47 95       	ror	r20
     a2c:	8a 95       	dec	r24
     a2e:	d1 f7       	brne	.-12     	; 0xa24 <_Z11getCanFramev+0x20>
     a30:	4c 83       	std	Y+4, r20	; 0x04
     a32:	8a 2f       	mov	r24, r26
     a34:	81 70       	andi	r24, 0x01	; 1
     a36:	8f 83       	std	Y+7, r24	; 0x07
     a38:	ce 01       	movw	r24, r28
     a3a:	df 91       	pop	r29
     a3c:	cf 91       	pop	r28
     a3e:	08 95       	ret

00000a40 <_ZN8SPIClass5beginEv>:
     a40:	cf 93       	push	r28
     a42:	cf b7       	in	r28, 0x3f	; 63
     a44:	f8 94       	cli
     a46:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <_ZN8SPIClass11initializedE>
     a4a:	81 11       	cpse	r24, r1
     a4c:	27 c0       	rjmp	.+78     	; 0xa9c <_ZN8SPIClass5beginEv+0x5c>
     a4e:	ea e9       	ldi	r30, 0x9A	; 154
     a50:	f0 e0       	ldi	r31, 0x00	; 0
     a52:	84 91       	lpm	r24, Z
     a54:	e6 e8       	ldi	r30, 0x86	; 134
     a56:	f0 e0       	ldi	r31, 0x00	; 0
     a58:	94 91       	lpm	r25, Z
     a5a:	e8 2f       	mov	r30, r24
     a5c:	f0 e0       	ldi	r31, 0x00	; 0
     a5e:	ee 0f       	add	r30, r30
     a60:	ff 1f       	adc	r31, r31
     a62:	e2 55       	subi	r30, 0x52	; 82
     a64:	ff 4f       	sbci	r31, 0xFF	; 255
     a66:	a5 91       	lpm	r26, Z+
     a68:	b4 91       	lpm	r27, Z
     a6a:	ec 91       	ld	r30, X
     a6c:	e9 23       	and	r30, r25
     a6e:	21 f4       	brne	.+8      	; 0xa78 <_ZN8SPIClass5beginEv+0x38>
     a70:	61 e0       	ldi	r22, 0x01	; 1
     a72:	8a e0       	ldi	r24, 0x0A	; 10
     a74:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
     a78:	61 e0       	ldi	r22, 0x01	; 1
     a7a:	8a e0       	ldi	r24, 0x0A	; 10
     a7c:	0e 94 91 10 	call	0x2122	; 0x2122 <pinMode>
     a80:	8c b5       	in	r24, 0x2c	; 44
     a82:	80 61       	ori	r24, 0x10	; 16
     a84:	8c bd       	out	0x2c, r24	; 44
     a86:	8c b5       	in	r24, 0x2c	; 44
     a88:	80 64       	ori	r24, 0x40	; 64
     a8a:	8c bd       	out	0x2c, r24	; 44
     a8c:	61 e0       	ldi	r22, 0x01	; 1
     a8e:	8d e0       	ldi	r24, 0x0D	; 13
     a90:	0e 94 91 10 	call	0x2122	; 0x2122 <pinMode>
     a94:	61 e0       	ldi	r22, 0x01	; 1
     a96:	8b e0       	ldi	r24, 0x0B	; 11
     a98:	0e 94 91 10 	call	0x2122	; 0x2122 <pinMode>
     a9c:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <_ZN8SPIClass11initializedE>
     aa0:	8f 5f       	subi	r24, 0xFF	; 255
     aa2:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <_ZN8SPIClass11initializedE>
     aa6:	cf bf       	out	0x3f, r28	; 63
     aa8:	cf 91       	pop	r28
     aaa:	08 95       	ret

00000aac <_ZN8SPIClass3endEv>:
     aac:	9f b7       	in	r25, 0x3f	; 63
     aae:	f8 94       	cli
     ab0:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <_ZN8SPIClass11initializedE>
     ab4:	88 23       	and	r24, r24
     ab6:	19 f0       	breq	.+6      	; 0xabe <_ZN8SPIClass3endEv+0x12>
     ab8:	81 50       	subi	r24, 0x01	; 1
     aba:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <_ZN8SPIClass11initializedE>
     abe:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <_ZN8SPIClass11initializedE>
     ac2:	81 11       	cpse	r24, r1
     ac4:	05 c0       	rjmp	.+10     	; 0xad0 <_ZN8SPIClass3endEv+0x24>
     ac6:	8c b5       	in	r24, 0x2c	; 44
     ac8:	8f 7b       	andi	r24, 0xBF	; 191
     aca:	8c bd       	out	0x2c, r24	; 44
     acc:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <_ZN8SPIClass13interruptModeE>
     ad0:	9f bf       	out	0x3f, r25	; 63
     ad2:	08 95       	ret

00000ad4 <_Z11processInt1v>:
     ad4:	81 e0       	ldi	r24, 0x01	; 1
     ad6:	80 93 0f 02 	sts	0x020F, r24	; 0x80020f <gotInput>
     ada:	0c 94 26 0f 	jmp	0x1e4c	; 0x1e4c <detachInterrupt>

00000ade <_Z17send_sensor_eventhh>:
     ade:	91 e1       	ldi	r25, 0x11	; 17
     ae0:	90 93 4e 01 	sts	0x014E, r25	; 0x80014e <__data_end+0x10>
     ae4:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <__data_end+0x1c>
     ae8:	90 91 0e 02 	lds	r25, 0x020E	; 0x80020e <offset>
     aec:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <__data_end+0x1d>
     af0:	28 2f       	mov	r18, r24
     af2:	30 e0       	ldi	r19, 0x00	; 0
     af4:	40 e1       	ldi	r20, 0x10	; 16
     af6:	94 9f       	mul	r25, r20
     af8:	20 0d       	add	r18, r0
     afa:	31 1d       	adc	r19, r1
     afc:	11 24       	eor	r1, r1
     afe:	30 93 5c 01 	sts	0x015C, r19	; 0x80015c <__data_end+0x1e>
     b02:	20 e1       	ldi	r18, 0x10	; 16
     b04:	92 9f       	mul	r25, r18
     b06:	80 0d       	add	r24, r0
     b08:	11 24       	eor	r1, r1
     b0a:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <__data_end+0x1f>
     b0e:	61 30       	cpi	r22, 0x01	; 1
     b10:	29 f4       	brne	.+10     	; 0xb1c <_Z17send_sensor_eventhh+0x3e>
     b12:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <__data_end+0x20>
     b16:	60 93 5f 01 	sts	0x015F, r22	; 0x80015f <__data_end+0x21>
     b1a:	05 c0       	rjmp	.+10     	; 0xb26 <_Z17send_sensor_eventhh+0x48>
     b1c:	81 e0       	ldi	r24, 0x01	; 1
     b1e:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <__data_end+0x20>
     b22:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <__data_end+0x21>
     b26:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <__data_end+0x22>
     b2a:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <__data_end+0x23>
     b2e:	68 e0       	ldi	r22, 0x08	; 8
     b30:	8e e3       	ldi	r24, 0x3E	; 62
     b32:	91 e0       	ldi	r25, 0x01	; 1
     b34:	0c 94 f7 03 	jmp	0x7ee	; 0x7ee <_ZN15CAN_MCP2515plus10can_answerEh>

00000b38 <_Z14boardnumAnswerv>:
     b38:	ee e3       	ldi	r30, 0x3E	; 62
     b3a:	f1 e0       	ldi	r31, 0x01	; 1
     b3c:	81 e0       	ldi	r24, 0x01	; 1
     b3e:	84 8f       	std	Z+28, r24	; 0x1c
     b40:	85 81       	ldd	r24, Z+5	; 0x05
     b42:	85 8f       	std	Z+29, r24	; 0x1d
     b44:	86 81       	ldd	r24, Z+6	; 0x06
     b46:	86 8f       	std	Z+30, r24	; 0x1e
     b48:	4a e4       	ldi	r20, 0x4A	; 74
     b4a:	51 e0       	ldi	r21, 0x01	; 1
     b4c:	63 e0       	ldi	r22, 0x03	; 3
     b4e:	8a e2       	ldi	r24, 0x2A	; 42
     b50:	91 e0       	ldi	r25, 0x01	; 1
     b52:	0e 94 5e 04 	call	0x8bc	; 0x8bc <_Z17what_is_your_namePKhhP9CAN_Frame>
     b56:	66 e0       	ldi	r22, 0x06	; 6
     b58:	8e e3       	ldi	r24, 0x3E	; 62
     b5a:	91 e0       	ldi	r25, 0x01	; 1
     b5c:	0c 94 f7 03 	jmp	0x7ee	; 0x7ee <_ZN15CAN_MCP2515plus10can_answerEh>

00000b60 <_Z10sendConfigi>:
     b60:	6f 92       	push	r6
     b62:	7f 92       	push	r7
     b64:	8f 92       	push	r8
     b66:	9f 92       	push	r9
     b68:	af 92       	push	r10
     b6a:	bf 92       	push	r11
     b6c:	cf 92       	push	r12
     b6e:	df 92       	push	r13
     b70:	ef 92       	push	r14
     b72:	ff 92       	push	r15
     b74:	0f 93       	push	r16
     b76:	1f 93       	push	r17
     b78:	cf 93       	push	r28
     b7a:	df 93       	push	r29
     b7c:	cd b7       	in	r28, 0x3d	; 61
     b7e:	de b7       	in	r29, 0x3e	; 62
     b80:	cd 5c       	subi	r28, 0xCD	; 205
     b82:	d1 09       	sbc	r29, r1
     b84:	0f b6       	in	r0, 0x3f	; 63
     b86:	f8 94       	cli
     b88:	de bf       	out	0x3e, r29	; 62
     b8a:	0f be       	out	0x3f, r0	; 63
     b8c:	cd bf       	out	0x3d, r28	; 61
     b8e:	7c 01       	movw	r14, r24
     b90:	85 e0       	ldi	r24, 0x05	; 5
     b92:	e5 e0       	ldi	r30, 0x05	; 5
     b94:	f1 e0       	ldi	r31, 0x01	; 1
     b96:	de 01       	movw	r26, r28
     b98:	a7 53       	subi	r26, 0x37	; 55
     b9a:	bf 4f       	sbci	r27, 0xFF	; 255
     b9c:	01 90       	ld	r0, Z+
     b9e:	0d 92       	st	X+, r0
     ba0:	8a 95       	dec	r24
     ba2:	e1 f7       	brne	.-8      	; 0xb9c <_Z10sendConfigi+0x3c>
     ba4:	8e 01       	movw	r16, r28
     ba6:	0f 5f       	subi	r16, 0xFF	; 255
     ba8:	1f 4f       	sbci	r17, 0xFF	; 255
     baa:	88 ec       	ldi	r24, 0xC8	; 200
     bac:	f8 01       	movw	r30, r16
     bae:	11 92       	st	Z+, r1
     bb0:	8a 95       	dec	r24
     bb2:	e9 f7       	brne	.-6      	; 0xbae <_Z10sendConfigi+0x4e>
     bb4:	84 e0       	ldi	r24, 0x04	; 4
     bb6:	d8 2e       	mov	r13, r24
     bb8:	da 82       	std	Y+2, r13	; 0x02
     bba:	83 e4       	ldi	r24, 0x43	; 67
     bbc:	89 8b       	std	Y+17, r24	; 0x11
     bbe:	91 e4       	ldi	r25, 0x41	; 65
     bc0:	c9 2e       	mov	r12, r25
     bc2:	ca 8a       	std	Y+18, r12	; 0x12
     bc4:	6e e4       	ldi	r22, 0x4E	; 78
     bc6:	6b 8b       	std	Y+19, r22	; 0x13
     bc8:	87 e6       	ldi	r24, 0x67	; 103
     bca:	8c 8b       	std	Y+20, r24	; 0x14
     bcc:	55 e7       	ldi	r21, 0x75	; 117
     bce:	5d 8b       	std	Y+21, r21	; 0x15
     bd0:	22 e7       	ldi	r18, 0x72	; 114
     bd2:	2e 8b       	std	Y+22, r18	; 0x16
     bd4:	5f 8b       	std	Y+23, r21	; 0x17
     bd6:	30 e2       	ldi	r19, 0x20	; 32
     bd8:	a3 2e       	mov	r10, r19
     bda:	a8 8e       	std	Y+24, r10	; 0x18
     bdc:	42 e5       	ldi	r20, 0x52	; 82
     bde:	64 2e       	mov	r6, r20
     be0:	69 8e       	std	Y+25, r6	; 0x19
     be2:	73 ec       	ldi	r23, 0xC3	; 195
     be4:	77 2e       	mov	r7, r23
     be6:	7a 8e       	std	Y+26, r7	; 0x1a
     be8:	ec eb       	ldi	r30, 0xBC	; 188
     bea:	8e 2e       	mov	r8, r30
     bec:	8b 8e       	std	Y+27, r8	; 0x1b
     bee:	f3 e6       	ldi	r31, 0x63	; 99
     bf0:	9f 2e       	mov	r9, r31
     bf2:	9c 8e       	std	Y+28, r9	; 0x1c
     bf4:	ab e6       	ldi	r26, 0x6B	; 107
     bf6:	ba 2e       	mov	r11, r26
     bf8:	bd 8e       	std	Y+29, r11	; 0x1d
     bfa:	4d e6       	ldi	r20, 0x6D	; 109
     bfc:	4e 8f       	std	Y+30, r20	; 0x1e
     bfe:	95 e6       	ldi	r25, 0x65	; 101
     c00:	9f 8f       	std	Y+31, r25	; 0x1f
     c02:	8c e6       	ldi	r24, 0x6C	; 108
     c04:	88 a3       	std	Y+32, r24	; 0x20
     c06:	74 e6       	ldi	r23, 0x64	; 100
     c08:	79 a3       	std	Y+33, r23	; 0x21
     c0a:	9a a3       	std	Y+34, r25	; 0x22
     c0c:	2b a3       	std	Y+35, r18	; 0x23
     c0e:	b1 e0       	ldi	r27, 0x01	; 1
     c10:	b9 a7       	std	Y+41, r27	; 0x29
     c12:	f2 e0       	ldi	r31, 0x02	; 2
     c14:	fa a7       	std	Y+42, r31	; 0x2a
     c16:	bc a7       	std	Y+44, r27	; 0x2c
     c18:	38 e0       	ldi	r19, 0x08	; 8
     c1a:	3e a7       	std	Y+46, r19	; 0x2e
     c1c:	c9 aa       	std	Y+49, r12	; 0x31
     c1e:	ae e6       	ldi	r26, 0x6E	; 110
     c20:	aa ab       	std	Y+50, r26	; 0x32
     c22:	3a e7       	ldi	r19, 0x7A	; 122
     c24:	3b ab       	std	Y+51, r19	; 0x33
     c26:	31 e6       	ldi	r19, 0x61	; 97
     c28:	3c ab       	std	Y+52, r19	; 0x34
     c2a:	e8 e6       	ldi	r30, 0x68	; 104
     c2c:	ed ab       	std	Y+53, r30	; 0x35
     c2e:	8e ab       	std	Y+54, r24	; 0x36
     c30:	af aa       	std	Y+55, r10	; 0x37
     c32:	e5 e4       	ldi	r30, 0x45	; 69
     c34:	e8 af       	std	Y+56, r30	; 0x38
     c36:	e8 e7       	ldi	r30, 0x78	; 120
     c38:	e9 af       	std	Y+57, r30	; 0x39
     c3a:	e0 e7       	ldi	r30, 0x70	; 112
     c3c:	ea af       	std	Y+58, r30	; 0x3a
     c3e:	3b af       	std	Y+59, r19	; 0x3b
     c40:	ac af       	std	Y+60, r26	; 0x3c
     c42:	7d af       	std	Y+61, r23	; 0x3d
     c44:	9e af       	std	Y+62, r25	; 0x3e
     c46:	2f af       	std	Y+63, r18	; 0x3f
     c48:	e1 e3       	ldi	r30, 0x31	; 49
     c4a:	22 96       	adiw	r28, 0x02	; 2
     c4c:	ef af       	std	Y+63, r30	; 0x3f
     c4e:	22 97       	sbiw	r28, 0x02	; 2
     c50:	e8 e3       	ldi	r30, 0x38	; 56
     c52:	24 96       	adiw	r28, 0x04	; 4
     c54:	ef af       	std	Y+63, r30	; 0x3f
     c56:	24 97       	sbiw	r28, 0x04	; 4
     c58:	e3 e5       	ldi	r30, 0x53	; 83
     c5a:	26 96       	adiw	r28, 0x06	; 6
     c5c:	ef af       	std	Y+63, r30	; 0x3f
     c5e:	26 97       	sbiw	r28, 0x06	; 6
     c60:	e4 e7       	ldi	r30, 0x74	; 116
     c62:	27 96       	adiw	r28, 0x07	; 7
     c64:	ef af       	std	Y+63, r30	; 0x3f
     c66:	27 97       	sbiw	r28, 0x07	; 7
     c68:	28 96       	adiw	r28, 0x08	; 8
     c6a:	bf ae       	std	Y+63, r11	; 0x3f
     c6c:	28 97       	sbiw	r28, 0x08	; 8
     c6e:	62 96       	adiw	r28, 0x12	; 18
     c70:	ff af       	std	Y+63, r31	; 0x3f
     c72:	62 97       	sbiw	r28, 0x12	; 18
     c74:	63 96       	adiw	r28, 0x13	; 19
     c76:	ff af       	std	Y+63, r31	; 0x3f
     c78:	63 97       	sbiw	r28, 0x13	; 19
     c7a:	67 96       	adiw	r28, 0x17	; 23
     c7c:	df ae       	std	Y+63, r13	; 0x3f
     c7e:	67 97       	sbiw	r28, 0x17	; 23
     c80:	6a 96       	adiw	r28, 0x1a	; 26
     c82:	6f af       	std	Y+63, r22	; 0x3f
     c84:	6a 97       	sbiw	r28, 0x1a	; 26
     c86:	6b 96       	adiw	r28, 0x1b	; 27
     c88:	5f af       	std	Y+63, r21	; 0x3f
     c8a:	6b 97       	sbiw	r28, 0x1b	; 27
     c8c:	6c 96       	adiw	r28, 0x1c	; 28
     c8e:	4f af       	std	Y+63, r20	; 0x3f
     c90:	6c 97       	sbiw	r28, 0x1c	; 28
     c92:	6d 96       	adiw	r28, 0x1d	; 29
     c94:	4f af       	std	Y+63, r20	; 0x3f
     c96:	6d 97       	sbiw	r28, 0x1d	; 29
     c98:	6e 96       	adiw	r28, 0x1e	; 30
     c9a:	9f af       	std	Y+63, r25	; 0x3f
     c9c:	6e 97       	sbiw	r28, 0x1e	; 30
     c9e:	6f 96       	adiw	r28, 0x1f	; 31
     ca0:	2f af       	std	Y+63, r18	; 0x3f
     ca2:	6f 97       	sbiw	r28, 0x1f	; 31
     ca4:	a0 96       	adiw	r28, 0x20	; 32
     ca6:	af ae       	std	Y+63, r10	; 0x3f
     ca8:	a0 97       	sbiw	r28, 0x20	; 32
     caa:	a1 96       	adiw	r28, 0x21	; 33
     cac:	6f ae       	std	Y+63, r6	; 0x3f
     cae:	a1 97       	sbiw	r28, 0x21	; 33
     cb0:	a2 96       	adiw	r28, 0x22	; 34
     cb2:	7f ae       	std	Y+63, r7	; 0x3f
     cb4:	a2 97       	sbiw	r28, 0x22	; 34
     cb6:	a3 96       	adiw	r28, 0x23	; 35
     cb8:	8f ae       	std	Y+63, r8	; 0x3f
     cba:	a3 97       	sbiw	r28, 0x23	; 35
     cbc:	a4 96       	adiw	r28, 0x24	; 36
     cbe:	9f ae       	std	Y+63, r9	; 0x3f
     cc0:	a4 97       	sbiw	r28, 0x24	; 36
     cc2:	a5 96       	adiw	r28, 0x25	; 37
     cc4:	bf ae       	std	Y+63, r11	; 0x3f
     cc6:	a5 97       	sbiw	r28, 0x25	; 37
     cc8:	a6 96       	adiw	r28, 0x26	; 38
     cca:	4f af       	std	Y+63, r20	; 0x3f
     ccc:	a6 97       	sbiw	r28, 0x26	; 38
     cce:	a7 96       	adiw	r28, 0x27	; 39
     cd0:	9f af       	std	Y+63, r25	; 0x3f
     cd2:	a7 97       	sbiw	r28, 0x27	; 39
     cd4:	a8 96       	adiw	r28, 0x28	; 40
     cd6:	8f af       	std	Y+63, r24	; 0x3f
     cd8:	a8 97       	sbiw	r28, 0x28	; 40
     cda:	a9 96       	adiw	r28, 0x29	; 41
     cdc:	7f af       	std	Y+63, r23	; 0x3f
     cde:	a9 97       	sbiw	r28, 0x29	; 41
     ce0:	aa 96       	adiw	r28, 0x2a	; 42
     ce2:	9f af       	std	Y+63, r25	; 0x3f
     ce4:	aa 97       	sbiw	r28, 0x2a	; 42
     ce6:	ab 96       	adiw	r28, 0x2b	; 43
     ce8:	2f af       	std	Y+63, r18	; 0x3f
     cea:	ab 97       	sbiw	r28, 0x2b	; 43
     cec:	0f 2e       	mov	r0, r31
     cee:	f0 e3       	ldi	r31, 0x30	; 48
     cf0:	bf 2e       	mov	r11, r31
     cf2:	f0 2d       	mov	r31, r0
     cf4:	ad 96       	adiw	r28, 0x2d	; 45
     cf6:	bf ae       	std	Y+63, r11	; 0x3f
     cf8:	ad 97       	sbiw	r28, 0x2d	; 45
     cfa:	0f 2e       	mov	r0, r31
     cfc:	f4 e3       	ldi	r31, 0x34	; 52
     cfe:	af 2e       	mov	r10, r31
     d00:	f0 2d       	mov	r31, r0
     d02:	af 96       	adiw	r28, 0x2f	; 47
     d04:	af ae       	std	Y+63, r10	; 0x3f
     d06:	af 97       	sbiw	r28, 0x2f	; 47
     d08:	e1 96       	adiw	r28, 0x31	; 49
     d0a:	6f af       	std	Y+63, r22	; 0x3f
     d0c:	e1 97       	sbiw	r28, 0x31	; 49
     d0e:	e2 96       	adiw	r28, 0x32	; 50
     d10:	5f af       	std	Y+63, r21	; 0x3f
     d12:	e2 97       	sbiw	r28, 0x32	; 50
     d14:	e3 96       	adiw	r28, 0x33	; 51
     d16:	4f af       	std	Y+63, r20	; 0x3f
     d18:	e3 97       	sbiw	r28, 0x33	; 51
     d1a:	0f 2e       	mov	r0, r31
     d1c:	f3 e0       	ldi	r31, 0x03	; 3
     d1e:	af 2e       	mov	r10, r31
     d20:	f0 2d       	mov	r31, r0
     d22:	ea 96       	adiw	r28, 0x3a	; 58
     d24:	af ae       	std	Y+63, r10	; 0x3f
     d26:	ea 97       	sbiw	r28, 0x3a	; 58
     d28:	eb 96       	adiw	r28, 0x3b	; 59
     d2a:	ff af       	std	Y+63, r31	; 0x3f
     d2c:	eb 97       	sbiw	r28, 0x3b	; 59
     d2e:	f4 e1       	ldi	r31, 0x14	; 20
     d30:	ef 96       	adiw	r28, 0x3f	; 63
     d32:	ff af       	std	Y+63, r31	; 0x3f
     d34:	ef 97       	sbiw	r28, 0x3f	; 63
     d36:	fd e4       	ldi	r31, 0x4D	; 77
     d38:	cf 57       	subi	r28, 0x7F	; 127
     d3a:	df 4f       	sbci	r29, 0xFF	; 255
     d3c:	f8 83       	st	Y, r31
     d3e:	c1 58       	subi	r28, 0x81	; 129
     d40:	d0 40       	sbci	r29, 0x00	; 0
     d42:	ff e6       	ldi	r31, 0x6F	; 111
     d44:	ce 57       	subi	r28, 0x7E	; 126
     d46:	df 4f       	sbci	r29, 0xFF	; 255
     d48:	f8 83       	st	Y, r31
     d4a:	c2 58       	subi	r28, 0x82	; 130
     d4c:	d0 40       	sbci	r29, 0x00	; 0
     d4e:	cd 57       	subi	r28, 0x7D	; 125
     d50:	df 4f       	sbci	r29, 0xFF	; 255
     d52:	78 83       	st	Y, r23
     d54:	c3 58       	subi	r28, 0x83	; 131
     d56:	d0 40       	sbci	r29, 0x00	; 0
     d58:	cc 57       	subi	r28, 0x7C	; 124
     d5a:	df 4f       	sbci	r29, 0xFF	; 255
     d5c:	58 83       	st	Y, r21
     d5e:	c4 58       	subi	r28, 0x84	; 132
     d60:	d0 40       	sbci	r29, 0x00	; 0
     d62:	cb 57       	subi	r28, 0x7B	; 123
     d64:	df 4f       	sbci	r29, 0xFF	; 255
     d66:	88 83       	st	Y, r24
     d68:	c5 58       	subi	r28, 0x85	; 133
     d6a:	d0 40       	sbci	r29, 0x00	; 0
     d6c:	ca 57       	subi	r28, 0x7A	; 122
     d6e:	df 4f       	sbci	r29, 0xFF	; 255
     d70:	38 83       	st	Y, r19
     d72:	c6 58       	subi	r28, 0x86	; 134
     d74:	d0 40       	sbci	r29, 0x00	; 0
     d76:	c9 57       	subi	r28, 0x79	; 121
     d78:	df 4f       	sbci	r29, 0xFF	; 255
     d7a:	78 83       	st	Y, r23
     d7c:	c7 58       	subi	r28, 0x87	; 135
     d7e:	d0 40       	sbci	r29, 0x00	; 0
     d80:	c8 57       	subi	r28, 0x78	; 120
     d82:	df 4f       	sbci	r29, 0xFF	; 255
     d84:	28 83       	st	Y, r18
     d86:	c8 58       	subi	r28, 0x88	; 136
     d88:	d0 40       	sbci	r29, 0x00	; 0
     d8a:	c7 57       	subi	r28, 0x77	; 119
     d8c:	df 4f       	sbci	r29, 0xFF	; 255
     d8e:	98 83       	st	Y, r25
     d90:	c9 58       	subi	r28, 0x89	; 137
     d92:	d0 40       	sbci	r29, 0x00	; 0
     d94:	f3 e7       	ldi	r31, 0x73	; 115
     d96:	c6 57       	subi	r28, 0x76	; 118
     d98:	df 4f       	sbci	r29, 0xFF	; 255
     d9a:	f8 83       	st	Y, r31
     d9c:	ca 58       	subi	r28, 0x8A	; 138
     d9e:	d0 40       	sbci	r29, 0x00	; 0
     da0:	c5 57       	subi	r28, 0x75	; 117
     da2:	df 4f       	sbci	r29, 0xFF	; 255
     da4:	f8 83       	st	Y, r31
     da6:	cb 58       	subi	r28, 0x8B	; 139
     da8:	d0 40       	sbci	r29, 0x00	; 0
     daa:	c4 57       	subi	r28, 0x74	; 116
     dac:	df 4f       	sbci	r29, 0xFF	; 255
     dae:	98 83       	st	Y, r25
     db0:	cc 58       	subi	r28, 0x8C	; 140
     db2:	d0 40       	sbci	r29, 0x00	; 0
     db4:	c2 57       	subi	r28, 0x72	; 114
     db6:	df 4f       	sbci	r29, 0xFF	; 255
     db8:	b8 82       	st	Y, r11
     dba:	ce 58       	subi	r28, 0x8E	; 142
     dbc:	d0 40       	sbci	r29, 0x00	; 0
     dbe:	0f 2e       	mov	r0, r31
     dc0:	f2 e3       	ldi	r31, 0x32	; 50
     dc2:	9f 2e       	mov	r9, r31
     dc4:	f0 2d       	mov	r31, r0
     dc6:	c0 57       	subi	r28, 0x70	; 112
     dc8:	df 4f       	sbci	r29, 0xFF	; 255
     dca:	98 82       	st	Y, r9
     dcc:	c0 59       	subi	r28, 0x90	; 144
     dce:	d0 40       	sbci	r29, 0x00	; 0
     dd0:	cf 56       	subi	r28, 0x6F	; 111
     dd2:	df 4f       	sbci	r29, 0xFF	; 255
     dd4:	b8 82       	st	Y, r11
     dd6:	c1 59       	subi	r28, 0x91	; 145
     dd8:	d0 40       	sbci	r29, 0x00	; 0
     dda:	cd 56       	subi	r28, 0x6D	; 109
     ddc:	df 4f       	sbci	r29, 0xFF	; 255
     dde:	c8 82       	st	Y, r12
     de0:	c3 59       	subi	r28, 0x93	; 147
     de2:	d0 40       	sbci	r29, 0x00	; 0
     de4:	cc 56       	subi	r28, 0x6C	; 108
     de6:	df 4f       	sbci	r29, 0xFF	; 255
     de8:	78 83       	st	Y, r23
     dea:	c4 59       	subi	r28, 0x94	; 148
     dec:	d0 40       	sbci	r29, 0x00	; 0
     dee:	cb 56       	subi	r28, 0x6B	; 107
     df0:	df 4f       	sbci	r29, 0xFF	; 255
     df2:	28 83       	st	Y, r18
     df4:	c5 59       	subi	r28, 0x95	; 149
     df6:	d0 40       	sbci	r29, 0x00	; 0
     df8:	cf 55       	subi	r28, 0x5F	; 95
     dfa:	df 4f       	sbci	r29, 0xFF	; 255
     dfc:	d8 82       	st	Y, r13
     dfe:	c1 5a       	subi	r28, 0xA1	; 161
     e00:	d0 40       	sbci	r29, 0x00	; 0
     e02:	ce 55       	subi	r28, 0x5E	; 94
     e04:	df 4f       	sbci	r29, 0xFF	; 255
     e06:	b8 83       	st	Y, r27
     e08:	c2 5a       	subi	r28, 0xA2	; 162
     e0a:	d0 40       	sbci	r29, 0x00	; 0
     e0c:	cd 55       	subi	r28, 0x5D	; 93
     e0e:	df 4f       	sbci	r29, 0xFF	; 255
     e10:	a8 82       	st	Y, r10
     e12:	c3 5a       	subi	r28, 0xA3	; 163
     e14:	d0 40       	sbci	r29, 0x00	; 0
     e16:	c7 55       	subi	r28, 0x57	; 87
     e18:	df 4f       	sbci	r29, 0xFF	; 255
     e1a:	68 83       	st	Y, r22
     e1c:	c9 5a       	subi	r28, 0xA9	; 169
     e1e:	d0 40       	sbci	r29, 0x00	; 0
     e20:	c6 55       	subi	r28, 0x56	; 86
     e22:	df 4f       	sbci	r29, 0xFF	; 255
     e24:	98 83       	st	Y, r25
     e26:	ca 5a       	subi	r28, 0xAA	; 170
     e28:	d0 40       	sbci	r29, 0x00	; 0
     e2a:	c5 55       	subi	r28, 0x55	; 85
     e2c:	df 4f       	sbci	r29, 0xFF	; 255
     e2e:	58 83       	st	Y, r21
     e30:	cb 5a       	subi	r28, 0xAB	; 171
     e32:	d0 40       	sbci	r29, 0x00	; 0
     e34:	c4 55       	subi	r28, 0x54	; 84
     e36:	df 4f       	sbci	r29, 0xFF	; 255
     e38:	f8 83       	st	Y, r31
     e3a:	cc 5a       	subi	r28, 0xAC	; 172
     e3c:	d0 40       	sbci	r29, 0x00	; 0
     e3e:	c3 55       	subi	r28, 0x53	; 83
     e40:	df 4f       	sbci	r29, 0xFF	; 255
     e42:	e8 83       	st	Y, r30
     e44:	cd 5a       	subi	r28, 0xAD	; 173
     e46:	d0 40       	sbci	r29, 0x00	; 0
     e48:	c2 55       	subi	r28, 0x52	; 82
     e4a:	df 4f       	sbci	r29, 0xFF	; 255
     e4c:	38 83       	st	Y, r19
     e4e:	ce 5a       	subi	r28, 0xAE	; 174
     e50:	d0 40       	sbci	r29, 0x00	; 0
     e52:	c1 55       	subi	r28, 0x51	; 81
     e54:	df 4f       	sbci	r29, 0xFF	; 255
     e56:	28 83       	st	Y, r18
     e58:	cf 5a       	subi	r28, 0xAF	; 175
     e5a:	d0 40       	sbci	r29, 0x00	; 0
     e5c:	c0 55       	subi	r28, 0x50	; 80
     e5e:	df 4f       	sbci	r29, 0xFF	; 255
     e60:	e8 83       	st	Y, r30
     e62:	c0 5b       	subi	r28, 0xB0	; 176
     e64:	d0 40       	sbci	r29, 0x00	; 0
     e66:	ce 54       	subi	r28, 0x4E	; 78
     e68:	df 4f       	sbci	r29, 0xFF	; 255
     e6a:	68 83       	st	Y, r22
     e6c:	c2 5b       	subi	r28, 0xB2	; 178
     e6e:	d0 40       	sbci	r29, 0x00	; 0
     e70:	cd 54       	subi	r28, 0x4D	; 77
     e72:	df 4f       	sbci	r29, 0xFF	; 255
     e74:	98 83       	st	Y, r25
     e76:	c3 5b       	subi	r28, 0xB3	; 179
     e78:	d0 40       	sbci	r29, 0x00	; 0
     e7a:	99 e6       	ldi	r25, 0x69	; 105
     e7c:	cc 54       	subi	r28, 0x4C	; 76
     e7e:	df 4f       	sbci	r29, 0xFF	; 255
     e80:	98 83       	st	Y, r25
     e82:	c4 5b       	subi	r28, 0xB4	; 180
     e84:	d0 40       	sbci	r29, 0x00	; 0
     e86:	cb 54       	subi	r28, 0x4B	; 75
     e88:	df 4f       	sbci	r29, 0xFF	; 255
     e8a:	a8 83       	st	Y, r26
     e8c:	c5 5b       	subi	r28, 0xB5	; 181
     e8e:	d0 40       	sbci	r29, 0x00	; 0
     e90:	97 e5       	ldi	r25, 0x57	; 87
     e92:	c9 54       	subi	r28, 0x49	; 73
     e94:	df 4f       	sbci	r29, 0xFF	; 255
     e96:	98 83       	st	Y, r25
     e98:	c7 5b       	subi	r28, 0xB7	; 183
     e9a:	d0 40       	sbci	r29, 0x00	; 0
     e9c:	c8 54       	subi	r28, 0x48	; 72
     e9e:	df 4f       	sbci	r29, 0xFF	; 255
     ea0:	38 83       	st	Y, r19
     ea2:	c8 5b       	subi	r28, 0xB8	; 184
     ea4:	d0 40       	sbci	r29, 0x00	; 0
     ea6:	c7 54       	subi	r28, 0x47	; 71
     ea8:	df 4f       	sbci	r29, 0xFF	; 255
     eaa:	28 83       	st	Y, r18
     eac:	c9 5b       	subi	r28, 0xB9	; 185
     eae:	d0 40       	sbci	r29, 0x00	; 0
     eb0:	c6 54       	subi	r28, 0x46	; 70
     eb2:	df 4f       	sbci	r29, 0xFF	; 255
     eb4:	48 83       	st	Y, r20
     eb6:	ca 5b       	subi	r28, 0xBA	; 186
     eb8:	d0 40       	sbci	r29, 0x00	; 0
     eba:	9b e4       	ldi	r25, 0x4B	; 75
     ebc:	c4 54       	subi	r28, 0x44	; 68
     ebe:	df 4f       	sbci	r29, 0xFF	; 255
     ec0:	98 83       	st	Y, r25
     ec2:	cc 5b       	subi	r28, 0xBC	; 188
     ec4:	d0 40       	sbci	r29, 0x00	; 0
     ec6:	c3 54       	subi	r28, 0x43	; 67
     ec8:	df 4f       	sbci	r29, 0xFF	; 255
     eca:	38 83       	st	Y, r19
     ecc:	cd 5b       	subi	r28, 0xBD	; 189
     ece:	d0 40       	sbci	r29, 0x00	; 0
     ed0:	c2 54       	subi	r28, 0x42	; 66
     ed2:	df 4f       	sbci	r29, 0xFF	; 255
     ed4:	88 83       	st	Y, r24
     ed6:	ce 5b       	subi	r28, 0xBE	; 190
     ed8:	d0 40       	sbci	r29, 0x00	; 0
     eda:	c1 54       	subi	r28, 0x41	; 65
     edc:	df 4f       	sbci	r29, 0xFF	; 255
     ede:	e8 83       	st	Y, r30
     ee0:	cf 5b       	subi	r28, 0xBF	; 191
     ee2:	d0 40       	sbci	r29, 0x00	; 0
     ee4:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <__data_end+0x7>
     ee8:	88 87       	std	Y+8, r24	; 0x08
     eea:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <__data_end+0x8>
     eee:	0e 94 6f 04 	call	0x8de	; 0x8de <_Z7hex2dech>
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	0e 94 51 04 	call	0x8a2	; 0x8a2 <_Z13highbyte2chari>
     ef8:	89 87       	std	Y+9, r24	; 0x09
     efa:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <__data_end+0x8>
     efe:	0e 94 6f 04 	call	0x8de	; 0x8de <_Z7hex2dech>
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	0e 94 58 04 	call	0x8b0	; 0x8b0 <_Z12lowbyte2chari>
     f08:	8a 87       	std	Y+10, r24	; 0x0a
     f0a:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <__data_end+0x9>
     f0e:	0e 94 6f 04 	call	0x8de	; 0x8de <_Z7hex2dech>
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	0e 94 51 04 	call	0x8a2	; 0x8a2 <_Z13highbyte2chari>
     f18:	8b 87       	std	Y+11, r24	; 0x0b
     f1a:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <__data_end+0x9>
     f1e:	0e 94 6f 04 	call	0x8de	; 0x8de <_Z7hex2dech>
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	0e 94 58 04 	call	0x8b0	; 0x8b0 <_Z12lowbyte2chari>
     f28:	8c 87       	std	Y+12, r24	; 0x0c
     f2a:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <__data_end+0xa>
     f2e:	0e 94 6f 04 	call	0x8de	; 0x8de <_Z7hex2dech>
     f32:	90 e0       	ldi	r25, 0x00	; 0
     f34:	0e 94 51 04 	call	0x8a2	; 0x8a2 <_Z13highbyte2chari>
     f38:	8d 87       	std	Y+13, r24	; 0x0d
     f3a:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <__data_end+0xa>
     f3e:	0e 94 6f 04 	call	0x8de	; 0x8de <_Z7hex2dech>
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	0e 94 58 04 	call	0x8b0	; 0x8b0 <_Z12lowbyte2chari>
     f48:	8e 87       	std	Y+14, r24	; 0x0e
     f4a:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <__data_end+0xb>
     f4e:	0e 94 6f 04 	call	0x8de	; 0x8de <_Z7hex2dech>
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	0e 94 51 04 	call	0x8a2	; 0x8a2 <_Z13highbyte2chari>
     f58:	8f 87       	std	Y+15, r24	; 0x0f
     f5a:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <__data_end+0xb>
     f5e:	0e 94 6f 04 	call	0x8de	; 0x8de <_Z7hex2dech>
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	0e 94 58 04 	call	0x8b0	; 0x8b0 <_Z12lowbyte2chari>
     f68:	88 8b       	std	Y+16, r24	; 0x10
     f6a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     f6e:	88 ab       	std	Y+48, r24	; 0x30
     f70:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <offset>
     f74:	69 96       	adiw	r28, 0x19	; 25
     f76:	8f af       	std	Y+63, r24	; 0x3f
     f78:	69 97       	sbiw	r28, 0x19	; 25
     f7a:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <__data_end+0x7>
     f7e:	c0 58       	subi	r28, 0x80	; 128
     f80:	df 4f       	sbci	r29, 0xFF	; 255
     f82:	88 83       	st	Y, r24
     f84:	c0 58       	subi	r28, 0x80	; 128
     f86:	d0 40       	sbci	r29, 0x00	; 0
     f88:	88 e2       	ldi	r24, 0x28	; 40
     f8a:	8e 9d       	mul	r24, r14
     f8c:	30 01       	movw	r6, r0
     f8e:	8f 9d       	mul	r24, r15
     f90:	70 0c       	add	r7, r0
     f92:	11 24       	eor	r1, r1
     f94:	81 2c       	mov	r8, r1
     f96:	91 2c       	mov	r9, r1
     f98:	c1 2c       	mov	r12, r1
     f9a:	d1 2c       	mov	r13, r1
     f9c:	89 ec       	ldi	r24, 0xC9	; 201
     f9e:	a8 2e       	mov	r10, r24
     fa0:	b1 2c       	mov	r11, r1
     fa2:	ac 0e       	add	r10, r28
     fa4:	bd 1e       	adc	r11, r29
     fa6:	ae 0c       	add	r10, r14
     fa8:	bf 1c       	adc	r11, r15
     faa:	f5 01       	movw	r30, r10
     fac:	40 81       	ld	r20, Z
     fae:	50 e0       	ldi	r21, 0x00	; 0
     fb0:	c4 16       	cp	r12, r20
     fb2:	d5 06       	cpc	r13, r21
     fb4:	8c f4       	brge	.+34     	; 0xfd8 <_Z10sendConfigi+0x478>
     fb6:	b4 01       	movw	r22, r8
     fb8:	66 0d       	add	r22, r6
     fba:	77 1d       	adc	r23, r7
     fbc:	60 0f       	add	r22, r16
     fbe:	71 1f       	adc	r23, r17
     fc0:	a6 01       	movw	r20, r12
     fc2:	8e e3       	ldi	r24, 0x3E	; 62
     fc4:	91 e0       	ldi	r25, 0x01	; 1
     fc6:	0e 94 0b 04 	call	0x816	; 0x816 <_ZN15CAN_MCP2515plus15configDataFrameEPhi>
     fca:	ff ef       	ldi	r31, 0xFF	; 255
     fcc:	cf 1a       	sub	r12, r31
     fce:	df 0a       	sbc	r13, r31
     fd0:	88 e0       	ldi	r24, 0x08	; 8
     fd2:	88 0e       	add	r8, r24
     fd4:	91 1c       	adc	r9, r1
     fd6:	e9 cf       	rjmp	.-46     	; 0xfaa <_Z10sendConfigi+0x44a>
     fd8:	b7 01       	movw	r22, r14
     fda:	8e e3       	ldi	r24, 0x3E	; 62
     fdc:	91 e0       	ldi	r25, 0x01	; 1
     fde:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <_ZN15CAN_MCP2515plus16configTerminatorEii>
     fe2:	c3 53       	subi	r28, 0x33	; 51
     fe4:	df 4f       	sbci	r29, 0xFF	; 255
     fe6:	0f b6       	in	r0, 0x3f	; 63
     fe8:	f8 94       	cli
     fea:	de bf       	out	0x3e, r29	; 62
     fec:	0f be       	out	0x3f, r0	; 63
     fee:	cd bf       	out	0x3d, r28	; 61
     ff0:	df 91       	pop	r29
     ff2:	cf 91       	pop	r28
     ff4:	1f 91       	pop	r17
     ff6:	0f 91       	pop	r16
     ff8:	ff 90       	pop	r15
     ffa:	ef 90       	pop	r14
     ffc:	df 90       	pop	r13
     ffe:	cf 90       	pop	r12
    1000:	bf 90       	pop	r11
    1002:	af 90       	pop	r10
    1004:	9f 90       	pop	r9
    1006:	8f 90       	pop	r8
    1008:	7f 90       	pop	r7
    100a:	6f 90       	pop	r6
    100c:	08 95       	ret

0000100e <_Z11processInt0v>:
    100e:	1f 93       	push	r17
    1010:	cf 93       	push	r28
    1012:	df 93       	push	r29
    1014:	cd b7       	in	r28, 0x3d	; 61
    1016:	de b7       	in	r29, 0x3e	; 62
    1018:	68 97       	sbiw	r28, 0x18	; 24
    101a:	0f b6       	in	r0, 0x3f	; 63
    101c:	f8 94       	cli
    101e:	de bf       	out	0x3e, r29	; 62
    1020:	0f be       	out	0x3f, r0	; 63
    1022:	cd bf       	out	0x3d, r28	; 61
    1024:	ce 01       	movw	r24, r28
    1026:	01 96       	adiw	r24, 0x01	; 1
    1028:	0e 94 02 05 	call	0xa04	; 0xa04 <_Z11getCanFramev>
    102c:	88 e1       	ldi	r24, 0x18	; 24
    102e:	fe 01       	movw	r30, r28
    1030:	31 96       	adiw	r30, 0x01	; 1
    1032:	a2 e6       	ldi	r26, 0x62	; 98
    1034:	b1 e0       	ldi	r27, 0x01	; 1
    1036:	01 90       	ld	r0, Z+
    1038:	0d 92       	st	X+, r0
    103a:	8a 95       	dec	r24
    103c:	e1 f7       	brne	.-8      	; 0x1036 <_Z11processInt0v+0x28>
    103e:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <__data_end+0x2b>
    1042:	81 11       	cpse	r24, r1
    1044:	a7 c1       	rjmp	.+846    	; 0x1394 <_Z11processInt0v+0x386>
    1046:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <__data_end+0x28>
    104a:	81 31       	cpi	r24, 0x11	; 17
    104c:	09 f4       	brne	.+2      	; 0x1050 <_Z11processInt0v+0x42>
    104e:	e0 c0       	rjmp	.+448    	; 0x1210 <_Z11processInt0v+0x202>
    1050:	48 f4       	brcc	.+18     	; 0x1064 <_Z11processInt0v+0x56>
    1052:	88 23       	and	r24, r24
    1054:	69 f1       	breq	.+90     	; 0x10b0 <_Z11processInt0v+0xa2>
    1056:	80 31       	cpi	r24, 0x10	; 16
    1058:	09 f0       	breq	.+2      	; 0x105c <_Z11processInt0v+0x4e>
    105a:	9c c1       	rjmp	.+824    	; 0x1394 <_Z11processInt0v+0x386>
    105c:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <__data_end+0x10>
    1060:	11 e0       	ldi	r17, 0x01	; 1
    1062:	27 c1       	rjmp	.+590    	; 0x12b2 <_Z11processInt0v+0x2a4>
    1064:	8d 31       	cpi	r24, 0x1D	; 29
    1066:	09 f4       	brne	.+2      	; 0x106a <_Z11processInt0v+0x5c>
    1068:	fb c0       	rjmp	.+502    	; 0x1260 <_Z11processInt0v+0x252>
    106a:	82 35       	cpi	r24, 0x52	; 82
    106c:	09 f4       	brne	.+2      	; 0x1070 <_Z11processInt0v+0x62>
    106e:	29 c1       	rjmp	.+594    	; 0x12c2 <_Z11processInt0v+0x2b4>
    1070:	88 31       	cpi	r24, 0x18	; 24
    1072:	09 f0       	breq	.+2      	; 0x1076 <_Z11processInt0v+0x68>
    1074:	8f c1       	rjmp	.+798    	; 0x1394 <_Z11processInt0v+0x386>
    1076:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <__data_end+0x10>
    107a:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <__data_end+0x8>
    107e:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <__data_end+0x1c>
    1082:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <__data_end+0x9>
    1086:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <__data_end+0x1d>
    108a:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <__data_end+0xa>
    108e:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <__data_end+0x1e>
    1092:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <__data_end+0xb>
    1096:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <__data_end+0x1f>
    109a:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <__data_end+0x20>
    109e:	85 e0       	ldi	r24, 0x05	; 5
    10a0:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <__data_end+0x21>
    10a4:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <__data_end+0x22>
    10a8:	84 e5       	ldi	r24, 0x54	; 84
    10aa:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <__data_end+0x23>
    10ae:	ca c0       	rjmp	.+404    	; 0x1244 <_Z11processInt0v+0x236>
    10b0:	20 e0       	ldi	r18, 0x00	; 0
    10b2:	30 e0       	ldi	r19, 0x00	; 0
    10b4:	81 e0       	ldi	r24, 0x01	; 1
    10b6:	88 23       	and	r24, r24
    10b8:	41 f0       	breq	.+16     	; 0x10ca <_Z11processInt0v+0xbc>
    10ba:	81 e0       	ldi	r24, 0x01	; 1
    10bc:	f9 01       	movw	r30, r18
    10be:	e2 5c       	subi	r30, 0xC2	; 194
    10c0:	fe 4f       	sbci	r31, 0xFE	; 254
    10c2:	40 85       	ldd	r20, Z+8	; 0x08
    10c4:	94 a9       	ldd	r25, Z+52	; 0x34
    10c6:	49 13       	cpse	r20, r25
    10c8:	80 e0       	ldi	r24, 0x00	; 0
    10ca:	2f 5f       	subi	r18, 0xFF	; 255
    10cc:	3f 4f       	sbci	r19, 0xFF	; 255
    10ce:	24 30       	cpi	r18, 0x04	; 4
    10d0:	31 05       	cpc	r19, r1
    10d2:	89 f7       	brne	.-30     	; 0x10b6 <_Z11processInt0v+0xa8>
    10d4:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <uid_request>
    10d8:	88 23       	and	r24, r24
    10da:	09 f4       	brne	.+2      	; 0x10de <_Z11processInt0v+0xd0>
    10dc:	5b c1       	rjmp	.+694    	; 0x1394 <_Z11processInt0v+0x386>
    10de:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <__data_end+0x38>
    10e2:	8b 30       	cpi	r24, 0x0B	; 11
    10e4:	09 f0       	breq	.+2      	; 0x10e8 <_Z11processInt0v+0xda>
    10e6:	56 c1       	rjmp	.+684    	; 0x1394 <_Z11processInt0v+0x386>
    10e8:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <__data_end+0x39>
    10ec:	82 30       	cpi	r24, 0x02	; 2
    10ee:	b1 f0       	breq	.+44     	; 0x111c <_Z11processInt0v+0x10e>
    10f0:	80 f4       	brcc	.+32     	; 0x1112 <_Z11processInt0v+0x104>
    10f2:	81 30       	cpi	r24, 0x01	; 1
    10f4:	09 f0       	breq	.+2      	; 0x10f8 <_Z11processInt0v+0xea>
    10f6:	7e c0       	rjmp	.+252    	; 0x11f4 <_Z11processInt0v+0x1e6>
    10f8:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end+0x3a>
    10fc:	60 91 79 01 	lds	r22, 0x0179	; 0x800179 <__data_end+0x3b>
    1100:	20 e1       	ldi	r18, 0x10	; 16
    1102:	82 9f       	mul	r24, r18
    1104:	60 0d       	add	r22, r0
    1106:	11 24       	eor	r1, r1
    1108:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
    110c:	84 e0       	ldi	r24, 0x04	; 4
    110e:	90 e0       	ldi	r25, 0x00	; 0
    1110:	11 c0       	rjmp	.+34     	; 0x1134 <_Z11processInt0v+0x126>
    1112:	83 30       	cpi	r24, 0x03	; 3
    1114:	91 f0       	breq	.+36     	; 0x113a <_Z11processInt0v+0x12c>
    1116:	84 30       	cpi	r24, 0x04	; 4
    1118:	59 f1       	breq	.+86     	; 0x1170 <_Z11processInt0v+0x162>
    111a:	6c c0       	rjmp	.+216    	; 0x11f4 <_Z11processInt0v+0x1e6>
    111c:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end+0x3a>
    1120:	60 91 79 01 	lds	r22, 0x0179	; 0x800179 <__data_end+0x3b>
    1124:	90 e1       	ldi	r25, 0x10	; 16
    1126:	89 9f       	mul	r24, r25
    1128:	60 0d       	add	r22, r0
    112a:	11 24       	eor	r1, r1
    112c:	60 93 0e 02 	sts	0x020E, r22	; 0x80020e <offset>
    1130:	83 e0       	ldi	r24, 0x03	; 3
    1132:	90 e0       	ldi	r25, 0x00	; 0
    1134:	0e 94 47 11 	call	0x228e	; 0x228e <eeprom_update_byte>
    1138:	5d c0       	rjmp	.+186    	; 0x11f4 <_Z11processInt0v+0x1e6>
    113a:	60 91 78 01 	lds	r22, 0x0178	; 0x800178 <__data_end+0x3a>
    113e:	80 91 79 01 	lds	r24, 0x0179	; 0x800179 <__data_end+0x3b>
    1142:	98 2f       	mov	r25, r24
    1144:	20 e1       	ldi	r18, 0x10	; 16
    1146:	62 9f       	mul	r22, r18
    1148:	90 0d       	add	r25, r0
    114a:	11 24       	eor	r1, r1
    114c:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <__data_end+0x7>
    1150:	80 5d       	subi	r24, 0xD0	; 208
    1152:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <__data_end+0x6>
    1156:	60 5d       	subi	r22, 0xD0	; 208
    1158:	60 93 43 01 	sts	0x0143, r22	; 0x800143 <__data_end+0x5>
    115c:	81 e0       	ldi	r24, 0x01	; 1
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	0e 94 47 11 	call	0x228e	; 0x228e <eeprom_update_byte>
    1164:	60 91 44 01 	lds	r22, 0x0144	; 0x800144 <__data_end+0x6>
    1168:	82 e0       	ldi	r24, 0x02	; 2
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	0e 94 47 11 	call	0x228e	; 0x228e <eeprom_update_byte>
    1170:	80 91 79 01 	lds	r24, 0x0179	; 0x800179 <__data_end+0x3b>
    1174:	81 30       	cpi	r24, 0x01	; 1
    1176:	19 f1       	breq	.+70     	; 0x11be <_Z11processInt0v+0x1b0>
    1178:	82 30       	cpi	r24, 0x02	; 2
    117a:	e1 f5       	brne	.+120    	; 0x11f4 <_Z11processInt0v+0x1e6>
    117c:	88 e1       	ldi	r24, 0x18	; 24
    117e:	e2 e6       	ldi	r30, 0x62	; 98
    1180:	f1 e0       	ldi	r31, 0x01	; 1
    1182:	aa e4       	ldi	r26, 0x4A	; 74
    1184:	b1 e0       	ldi	r27, 0x01	; 1
    1186:	01 90       	ld	r0, Z+
    1188:	0d 92       	st	X+, r0
    118a:	8a 95       	dec	r24
    118c:	e1 f7       	brne	.-8      	; 0x1186 <_Z11processInt0v+0x178>
    118e:	81 e0       	ldi	r24, 0x01	; 1
    1190:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__data_end+0x22>
    1194:	67 e0       	ldi	r22, 0x07	; 7
    1196:	8e e3       	ldi	r24, 0x3E	; 62
    1198:	91 e0       	ldi	r25, 0x01	; 1
    119a:	0e 94 f7 03 	call	0x7ee	; 0x7ee <_ZN15CAN_MCP2515plus10can_answerEh>
    119e:	8f e7       	ldi	r24, 0x7F	; 127
    11a0:	9f e4       	ldi	r25, 0x4F	; 79
    11a2:	22 e1       	ldi	r18, 0x12	; 18
    11a4:	81 50       	subi	r24, 0x01	; 1
    11a6:	90 40       	sbci	r25, 0x00	; 0
    11a8:	20 40       	sbci	r18, 0x00	; 0
    11aa:	e1 f7       	brne	.-8      	; 0x11a4 <_Z11processInt0v+0x196>
    11ac:	00 c0       	rjmp	.+0      	; 0x11ae <_Z11processInt0v+0x1a0>
    11ae:	00 00       	nop
    11b0:	6f ef       	ldi	r22, 0xFF	; 255
    11b2:	80 e0       	ldi	r24, 0x00	; 0
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	0e 94 47 11 	call	0x228e	; 0x228e <eeprom_update_byte>
    11ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    11be:	98 e1       	ldi	r25, 0x18	; 24
    11c0:	e2 e6       	ldi	r30, 0x62	; 98
    11c2:	f1 e0       	ldi	r31, 0x01	; 1
    11c4:	aa e4       	ldi	r26, 0x4A	; 74
    11c6:	b1 e0       	ldi	r27, 0x01	; 1
    11c8:	01 90       	ld	r0, Z+
    11ca:	0d 92       	st	X+, r0
    11cc:	9a 95       	dec	r25
    11ce:	e1 f7       	brne	.-8      	; 0x11c8 <_Z11processInt0v+0x1ba>
    11d0:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__data_end+0x22>
    11d4:	67 e0       	ldi	r22, 0x07	; 7
    11d6:	8e e3       	ldi	r24, 0x3E	; 62
    11d8:	91 e0       	ldi	r25, 0x01	; 1
    11da:	0e 94 f7 03 	call	0x7ee	; 0x7ee <_ZN15CAN_MCP2515plus10can_answerEh>
    11de:	8f e7       	ldi	r24, 0x7F	; 127
    11e0:	9f e4       	ldi	r25, 0x4F	; 79
    11e2:	22 e1       	ldi	r18, 0x12	; 18
    11e4:	81 50       	subi	r24, 0x01	; 1
    11e6:	90 40       	sbci	r25, 0x00	; 0
    11e8:	20 40       	sbci	r18, 0x00	; 0
    11ea:	e1 f7       	brne	.-8      	; 0x11e4 <_Z11processInt0v+0x1d6>
    11ec:	00 c0       	rjmp	.+0      	; 0x11ee <_Z11processInt0v+0x1e0>
    11ee:	00 00       	nop
    11f0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    11f4:	88 e1       	ldi	r24, 0x18	; 24
    11f6:	e2 e6       	ldi	r30, 0x62	; 98
    11f8:	f1 e0       	ldi	r31, 0x01	; 1
    11fa:	aa e4       	ldi	r26, 0x4A	; 74
    11fc:	b1 e0       	ldi	r27, 0x01	; 1
    11fe:	01 90       	ld	r0, Z+
    1200:	0d 92       	st	X+, r0
    1202:	8a 95       	dec	r24
    1204:	e1 f7       	brne	.-8      	; 0x11fe <_Z11processInt0v+0x1f0>
    1206:	81 e0       	ldi	r24, 0x01	; 1
    1208:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__data_end+0x22>
    120c:	67 e0       	ldi	r22, 0x07	; 7
    120e:	1b c0       	rjmp	.+54     	; 0x1246 <_Z11processInt0v+0x238>
    1210:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <__data_end+0x10>
    1214:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <__data_end+0x34>
    1218:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <__data_end+0x1c>
    121c:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <__data_end+0x35>
    1220:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <__data_end+0x1d>
    1224:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <__data_end+0x36>
    1228:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <__data_end+0x1e>
    122c:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <__data_end+0x37>
    1230:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <__data_end+0x1f>
    1234:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <__data_end+0x20>
    1238:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <__data_end+0x21>
    123c:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <__data_end+0x22>
    1240:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <__data_end+0x23>
    1244:	68 e0       	ldi	r22, 0x08	; 8
    1246:	8e e3       	ldi	r24, 0x3E	; 62
    1248:	91 e0       	ldi	r25, 0x01	; 1
    124a:	68 96       	adiw	r28, 0x18	; 24
    124c:	0f b6       	in	r0, 0x3f	; 63
    124e:	f8 94       	cli
    1250:	de bf       	out	0x3e, r29	; 62
    1252:	0f be       	out	0x3f, r0	; 63
    1254:	cd bf       	out	0x3d, r28	; 61
    1256:	df 91       	pop	r29
    1258:	cf 91       	pop	r28
    125a:	1f 91       	pop	r17
    125c:	0c 94 f7 03 	jmp	0x7ee	; 0x7ee <_ZN15CAN_MCP2515plus10can_answerEh>
    1260:	20 e0       	ldi	r18, 0x00	; 0
    1262:	30 e0       	ldi	r19, 0x00	; 0
    1264:	81 e0       	ldi	r24, 0x01	; 1
    1266:	88 23       	and	r24, r24
    1268:	41 f0       	breq	.+16     	; 0x127a <_Z11processInt0v+0x26c>
    126a:	81 e0       	ldi	r24, 0x01	; 1
    126c:	f9 01       	movw	r30, r18
    126e:	e2 5c       	subi	r30, 0xC2	; 194
    1270:	fe 4f       	sbci	r31, 0xFE	; 254
    1272:	40 85       	ldd	r20, Z+8	; 0x08
    1274:	94 a9       	ldd	r25, Z+52	; 0x34
    1276:	49 13       	cpse	r20, r25
    1278:	80 e0       	ldi	r24, 0x00	; 0
    127a:	2f 5f       	subi	r18, 0xFF	; 255
    127c:	3f 4f       	sbci	r19, 0xFF	; 255
    127e:	24 30       	cpi	r18, 0x04	; 4
    1280:	31 05       	cpc	r19, r1
    1282:	89 f7       	brne	.-30     	; 0x1266 <_Z11processInt0v+0x258>
    1284:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <uid_request>
    1288:	88 23       	and	r24, r24
    128a:	09 f4       	brne	.+2      	; 0x128e <_Z11processInt0v+0x280>
    128c:	83 c0       	rjmp	.+262    	; 0x1394 <_Z11processInt0v+0x386>
    128e:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <__data_end+0x38>
    1292:	90 e0       	ldi	r25, 0x00	; 0
    1294:	90 93 85 01 	sts	0x0185, r25	; 0x800185 <config_index+0x1>
    1298:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <config_index>
    129c:	68 96       	adiw	r28, 0x18	; 24
    129e:	0f b6       	in	r0, 0x3f	; 63
    12a0:	f8 94       	cli
    12a2:	de bf       	out	0x3e, r29	; 62
    12a4:	0f be       	out	0x3f, r0	; 63
    12a6:	cd bf       	out	0x3d, r28	; 61
    12a8:	df 91       	pop	r29
    12aa:	cf 91       	pop	r28
    12ac:	1f 91       	pop	r17
    12ae:	0c 94 b0 05 	jmp	0xb60	; 0xb60 <_Z10sendConfigi>
    12b2:	60 e0       	ldi	r22, 0x00	; 0
    12b4:	81 2f       	mov	r24, r17
    12b6:	0e 94 6f 05 	call	0xade	; 0xade <_Z17send_sensor_eventhh>
    12ba:	1f 5f       	subi	r17, 0xFF	; 255
    12bc:	19 30       	cpi	r17, 0x09	; 9
    12be:	c9 f7       	brne	.-14     	; 0x12b2 <_Z11processInt0v+0x2a4>
    12c0:	69 c0       	rjmp	.+210    	; 0x1394 <_Z11processInt0v+0x386>
    12c2:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <__data_end+0x35>
    12c6:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <__data_end+0x5>
    12ca:	98 13       	cpse	r25, r24
    12cc:	63 c0       	rjmp	.+198    	; 0x1394 <_Z11processInt0v+0x386>
    12ce:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <__data_end+0x36>
    12d2:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <__data_end+0x6>
    12d6:	98 13       	cpse	r25, r24
    12d8:	5d c0       	rjmp	.+186    	; 0x1394 <_Z11processInt0v+0x386>
    12da:	83 e5       	ldi	r24, 0x53	; 83
    12dc:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <__data_end+0x10>
    12e0:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <__data_end+0x34>
    12e4:	82 30       	cpi	r24, 0x02	; 2
    12e6:	f9 f0       	breq	.+62     	; 0x1326 <_Z11processInt0v+0x318>
    12e8:	83 30       	cpi	r24, 0x03	; 3
    12ea:	69 f0       	breq	.+26     	; 0x1306 <_Z11processInt0v+0x2f8>
    12ec:	81 11       	cpse	r24, r1
    12ee:	52 c0       	rjmp	.+164    	; 0x1394 <_Z11processInt0v+0x386>
    12f0:	68 96       	adiw	r28, 0x18	; 24
    12f2:	0f b6       	in	r0, 0x3f	; 63
    12f4:	f8 94       	cli
    12f6:	de bf       	out	0x3e, r29	; 62
    12f8:	0f be       	out	0x3f, r0	; 63
    12fa:	cd bf       	out	0x3d, r28	; 61
    12fc:	df 91       	pop	r29
    12fe:	cf 91       	pop	r28
    1300:	1f 91       	pop	r17
    1302:	0c 94 9c 05 	jmp	0xb38	; 0xb38 <_Z14boardnumAnswerv>
    1306:	6f ef       	ldi	r22, 0xFF	; 255
    1308:	80 e0       	ldi	r24, 0x00	; 0
    130a:	90 e0       	ldi	r25, 0x00	; 0
    130c:	0e 94 47 11 	call	0x228e	; 0x228e <eeprom_update_byte>
    1310:	68 96       	adiw	r28, 0x18	; 24
    1312:	0f b6       	in	r0, 0x3f	; 63
    1314:	f8 94       	cli
    1316:	de bf       	out	0x3e, r29	; 62
    1318:	0f be       	out	0x3f, r0	; 63
    131a:	cd bf       	out	0x3d, r28	; 61
    131c:	df 91       	pop	r29
    131e:	cf 91       	pop	r28
    1320:	1f 91       	pop	r17
    1322:	0c 94 ab 04 	jmp	0x956	; 0x956 <_Z16goIntoBootloaderv>
    1326:	0e 94 9c 05 	call	0xb38	; 0xb38 <_Z14boardnumAnswerv>
    132a:	60 91 75 01 	lds	r22, 0x0175	; 0x800175 <__data_end+0x37>
    132e:	81 e0       	ldi	r24, 0x01	; 1
    1330:	90 e0       	ldi	r25, 0x00	; 0
    1332:	0e 94 47 11 	call	0x228e	; 0x228e <eeprom_update_byte>
    1336:	60 91 76 01 	lds	r22, 0x0176	; 0x800176 <__data_end+0x38>
    133a:	82 e0       	ldi	r24, 0x02	; 2
    133c:	90 e0       	ldi	r25, 0x00	; 0
    133e:	0e 94 47 11 	call	0x228e	; 0x228e <eeprom_update_byte>
    1342:	81 e0       	ldi	r24, 0x01	; 1
    1344:	90 e0       	ldi	r25, 0x00	; 0
    1346:	0e 94 3f 11 	call	0x227e	; 0x227e <eeprom_read_byte>
    134a:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <__data_end+0x5>
    134e:	82 e0       	ldi	r24, 0x02	; 2
    1350:	90 e0       	ldi	r25, 0x00	; 0
    1352:	0e 94 3f 11 	call	0x227e	; 0x227e <eeprom_read_byte>
    1356:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <__data_end+0x6>
    135a:	60 91 7f 01 	lds	r22, 0x017F	; 0x80017f <UID>
    135e:	70 91 80 01 	lds	r23, 0x0180	; 0x800180 <UID+0x1>
    1362:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <UID+0x2>
    1366:	90 91 82 01 	lds	r25, 0x0182	; 0x800182 <UID+0x3>
    136a:	0e 94 9e 04 	call	0x93c	; 0x93c <_Z12generateHashm>
    136e:	90 93 42 01 	sts	0x0142, r25	; 0x800142 <__data_end+0x4>
    1372:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <__data_end+0x3>
    1376:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <__data_end+0x6>
    137a:	20 ed       	ldi	r18, 0xD0	; 208
    137c:	28 0f       	add	r18, r24
    137e:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <__data_end+0x5>
    1382:	88 0f       	add	r24, r24
    1384:	80 56       	subi	r24, 0x60	; 96
    1386:	98 2f       	mov	r25, r24
    1388:	99 0f       	add	r25, r25
    138a:	99 0f       	add	r25, r25
    138c:	89 0f       	add	r24, r25
    138e:	82 0f       	add	r24, r18
    1390:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <__data_end+0x7>
    1394:	68 96       	adiw	r28, 0x18	; 24
    1396:	0f b6       	in	r0, 0x3f	; 63
    1398:	f8 94       	cli
    139a:	de bf       	out	0x3e, r29	; 62
    139c:	0f be       	out	0x3f, r0	; 63
    139e:	cd bf       	out	0x3d, r28	; 61
    13a0:	df 91       	pop	r29
    13a2:	cf 91       	pop	r28
    13a4:	1f 91       	pop	r17
    13a6:	08 95       	ret

000013a8 <_Z8PCF_Readi>:
    13a8:	cf 93       	push	r28
    13aa:	41 e0       	ldi	r20, 0x01	; 1
    13ac:	50 e0       	ldi	r21, 0x00	; 0
    13ae:	bc 01       	movw	r22, r24
    13b0:	8e e7       	ldi	r24, 0x7E	; 126
    13b2:	92 e0       	ldi	r25, 0x02	; 2
    13b4:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <_ZN7TwoWire11requestFromEii>
    13b8:	8e e7       	ldi	r24, 0x7E	; 126
    13ba:	92 e0       	ldi	r25, 0x02	; 2
    13bc:	0e 94 d5 0d 	call	0x1baa	; 0x1baa <_ZN7TwoWire9availableEv>
    13c0:	89 2b       	or	r24, r25
    13c2:	d1 f3       	breq	.-12     	; 0x13b8 <_Z8PCF_Readi+0x10>
    13c4:	8e e7       	ldi	r24, 0x7E	; 126
    13c6:	92 e0       	ldi	r25, 0x02	; 2
    13c8:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <_ZN7TwoWire4readEv>
    13cc:	c8 2f       	mov	r28, r24
    13ce:	8e e7       	ldi	r24, 0x7E	; 126
    13d0:	92 e0       	ldi	r25, 0x02	; 2
    13d2:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <_ZN7TwoWire15endTransmissionEv>
    13d6:	8c 2f       	mov	r24, r28
    13d8:	cf 91       	pop	r28
    13da:	08 95       	ret

000013dc <_Z8PCF_Initv>:
    13dc:	af 92       	push	r10
    13de:	bf 92       	push	r11
    13e0:	cf 92       	push	r12
    13e2:	df 92       	push	r13
    13e4:	ef 92       	push	r14
    13e6:	ff 92       	push	r15
    13e8:	0f 93       	push	r16
    13ea:	1f 93       	push	r17
    13ec:	cf 93       	push	r28
    13ee:	df 93       	push	r29
    13f0:	62 e0       	ldi	r22, 0x02	; 2
    13f2:	83 e0       	ldi	r24, 0x03	; 3
    13f4:	0e 94 91 10 	call	0x2122	; 0x2122 <pinMode>
    13f8:	41 e0       	ldi	r20, 0x01	; 1
    13fa:	50 e0       	ldi	r21, 0x00	; 0
    13fc:	6a e6       	ldi	r22, 0x6A	; 106
    13fe:	75 e0       	ldi	r23, 0x05	; 5
    1400:	81 e0       	ldi	r24, 0x01	; 1
    1402:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <attachInterrupt>
    1406:	8e e7       	ldi	r24, 0x7E	; 126
    1408:	92 e0       	ldi	r25, 0x02	; 2
    140a:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <_ZN7TwoWire5beginEv>
    140e:	d0 e0       	ldi	r29, 0x00	; 0
    1410:	c0 e0       	ldi	r28, 0x00	; 0
    1412:	89 e0       	ldi	r24, 0x09	; 9
    1414:	f8 2e       	mov	r15, r24
    1416:	ee 24       	eor	r14, r14
    1418:	e3 94       	inc	r14
    141a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    141e:	c8 17       	cp	r28, r24
    1420:	08 f0       	brcs	.+2      	; 0x1424 <_Z8PCF_Initv+0x48>
    1422:	47 c0       	rjmp	.+142    	; 0x14b2 <_Z8PCF_Initv+0xd6>
    1424:	cc 2e       	mov	r12, r28
    1426:	d1 2c       	mov	r13, r1
    1428:	fc 9c       	mul	r15, r12
    142a:	f0 01       	movw	r30, r0
    142c:	fd 9c       	mul	r15, r13
    142e:	f0 0d       	add	r31, r0
    1430:	11 24       	eor	r1, r1
    1432:	ea 53       	subi	r30, 0x3A	; 58
    1434:	fe 4f       	sbci	r31, 0xFE	; 254
    1436:	88 e3       	ldi	r24, 0x38	; 56
    1438:	8c 0f       	add	r24, r28
    143a:	80 83       	st	Z, r24
    143c:	29 e0       	ldi	r18, 0x09	; 9
    143e:	c2 9f       	mul	r28, r18
    1440:	50 01       	movw	r10, r0
    1442:	11 24       	eor	r1, r1
    1444:	00 e0       	ldi	r16, 0x00	; 0
    1446:	10 e0       	ldi	r17, 0x00	; 0
    1448:	f8 01       	movw	r30, r16
    144a:	ea 0d       	add	r30, r10
    144c:	fb 1d       	adc	r31, r11
    144e:	ea 53       	subi	r30, 0x3A	; 58
    1450:	fe 4f       	sbci	r31, 0xFE	; 254
    1452:	e1 82       	std	Z+1, r14	; 0x01
    1454:	8d 2f       	mov	r24, r29
    1456:	80 0f       	add	r24, r16
    1458:	e8 2f       	mov	r30, r24
    145a:	f0 e0       	ldi	r31, 0x00	; 0
    145c:	ea 57       	subi	r30, 0x7A	; 122
    145e:	fe 4f       	sbci	r31, 0xFE	; 254
    1460:	60 81       	ld	r22, Z
    1462:	0e 94 6f 05 	call	0xade	; 0xade <_Z17send_sensor_eventhh>
    1466:	8f e7       	ldi	r24, 0x7F	; 127
    1468:	9a e1       	ldi	r25, 0x1A	; 26
    146a:	26 e0       	ldi	r18, 0x06	; 6
    146c:	81 50       	subi	r24, 0x01	; 1
    146e:	90 40       	sbci	r25, 0x00	; 0
    1470:	20 40       	sbci	r18, 0x00	; 0
    1472:	e1 f7       	brne	.-8      	; 0x146c <_Z8PCF_Initv+0x90>
    1474:	00 c0       	rjmp	.+0      	; 0x1476 <_Z8PCF_Initv+0x9a>
    1476:	00 00       	nop
    1478:	0f 5f       	subi	r16, 0xFF	; 255
    147a:	1f 4f       	sbci	r17, 0xFF	; 255
    147c:	08 30       	cpi	r16, 0x08	; 8
    147e:	11 05       	cpc	r17, r1
    1480:	19 f7       	brne	.-58     	; 0x1448 <_Z8PCF_Initv+0x6c>
    1482:	fc 9c       	mul	r15, r12
    1484:	f0 01       	movw	r30, r0
    1486:	fd 9c       	mul	r15, r13
    1488:	f0 0d       	add	r31, r0
    148a:	11 24       	eor	r1, r1
    148c:	ea 53       	subi	r30, 0x3A	; 58
    148e:	fe 4f       	sbci	r31, 0xFE	; 254
    1490:	60 81       	ld	r22, Z
    1492:	8e e7       	ldi	r24, 0x7E	; 126
    1494:	92 e0       	ldi	r25, 0x02	; 2
    1496:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <_ZN7TwoWire17beginTransmissionEh>
    149a:	6f ef       	ldi	r22, 0xFF	; 255
    149c:	8e e7       	ldi	r24, 0x7E	; 126
    149e:	92 e0       	ldi	r25, 0x02	; 2
    14a0:	0e 94 31 0e 	call	0x1c62	; 0x1c62 <_ZN7TwoWire5writeEh>
    14a4:	8e e7       	ldi	r24, 0x7E	; 126
    14a6:	92 e0       	ldi	r25, 0x02	; 2
    14a8:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <_ZN7TwoWire15endTransmissionEv>
    14ac:	cf 5f       	subi	r28, 0xFF	; 255
    14ae:	d8 5f       	subi	r29, 0xF8	; 248
    14b0:	b4 cf       	rjmp	.-152    	; 0x141a <_Z8PCF_Initv+0x3e>
    14b2:	df 91       	pop	r29
    14b4:	cf 91       	pop	r28
    14b6:	1f 91       	pop	r17
    14b8:	0f 91       	pop	r16
    14ba:	ff 90       	pop	r15
    14bc:	ef 90       	pop	r14
    14be:	df 90       	pop	r13
    14c0:	cf 90       	pop	r12
    14c2:	bf 90       	pop	r11
    14c4:	af 90       	pop	r10
    14c6:	0c 94 6a 05 	jmp	0xad4	; 0xad4 <_Z11processInt1v>

000014ca <setup>:
    14ca:	ff 92       	push	r15
    14cc:	0f 93       	push	r16
    14ce:	1f 93       	push	r17
    14d0:	cf 93       	push	r28
    14d2:	df 93       	push	r29
    14d4:	80 e0       	ldi	r24, 0x00	; 0
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	0e 94 3f 11 	call	0x227e	; 0x227e <eeprom_read_byte>
    14dc:	87 34       	cpi	r24, 0x47	; 71
    14de:	89 f1       	breq	.+98     	; 0x1542 <setup+0x78>
    14e0:	60 e3       	ldi	r22, 0x30	; 48
    14e2:	81 e0       	ldi	r24, 0x01	; 1
    14e4:	90 e0       	ldi	r25, 0x00	; 0
    14e6:	0e 94 47 11 	call	0x228e	; 0x228e <eeprom_update_byte>
    14ea:	60 e3       	ldi	r22, 0x30	; 48
    14ec:	82 e0       	ldi	r24, 0x02	; 2
    14ee:	90 e0       	ldi	r25, 0x00	; 0
    14f0:	0e 94 47 11 	call	0x228e	; 0x228e <eeprom_update_byte>
    14f4:	60 e0       	ldi	r22, 0x00	; 0
    14f6:	83 e0       	ldi	r24, 0x03	; 3
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	0e 94 47 11 	call	0x228e	; 0x228e <eeprom_update_byte>
    14fe:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
    1502:	84 e0       	ldi	r24, 0x04	; 4
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	0e 94 47 11 	call	0x228e	; 0x228e <eeprom_update_byte>
    150a:	c0 e0       	ldi	r28, 0x00	; 0
    150c:	8c 2f       	mov	r24, r28
    150e:	90 e0       	ldi	r25, 0x00	; 0
    1510:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    1514:	48 e0       	ldi	r20, 0x08	; 8
    1516:	24 9f       	mul	r18, r20
    1518:	90 01       	movw	r18, r0
    151a:	11 24       	eor	r1, r1
    151c:	82 17       	cp	r24, r18
    151e:	93 07       	cpc	r25, r19
    1520:	54 f4       	brge	.+20     	; 0x1536 <setup+0x6c>
    1522:	fc 01       	movw	r30, r24
    1524:	ea 57       	subi	r30, 0x7A	; 122
    1526:	fe 4f       	sbci	r31, 0xFE	; 254
    1528:	10 82       	st	Z, r1
    152a:	60 e0       	ldi	r22, 0x00	; 0
    152c:	05 96       	adiw	r24, 0x05	; 5
    152e:	0e 94 47 11 	call	0x228e	; 0x228e <eeprom_update_byte>
    1532:	cf 5f       	subi	r28, 0xFF	; 255
    1534:	eb cf       	rjmp	.-42     	; 0x150c <setup+0x42>
    1536:	67 e4       	ldi	r22, 0x47	; 71
    1538:	80 e0       	ldi	r24, 0x00	; 0
    153a:	90 e0       	ldi	r25, 0x00	; 0
    153c:	0e 94 47 11 	call	0x228e	; 0x228e <eeprom_update_byte>
    1540:	19 c0       	rjmp	.+50     	; 0x1574 <setup+0xaa>
    1542:	84 e0       	ldi	r24, 0x04	; 4
    1544:	90 e0       	ldi	r25, 0x00	; 0
    1546:	0e 94 3f 11 	call	0x227e	; 0x227e <eeprom_read_byte>
    154a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    154e:	98 e0       	ldi	r25, 0x08	; 8
    1550:	89 9f       	mul	r24, r25
    1552:	80 01       	movw	r16, r0
    1554:	11 24       	eor	r1, r1
    1556:	f1 2c       	mov	r15, r1
    1558:	cf 2d       	mov	r28, r15
    155a:	d0 e0       	ldi	r29, 0x00	; 0
    155c:	c0 17       	cp	r28, r16
    155e:	d1 07       	cpc	r29, r17
    1560:	4c f4       	brge	.+18     	; 0x1574 <setup+0xaa>
    1562:	ce 01       	movw	r24, r28
    1564:	05 96       	adiw	r24, 0x05	; 5
    1566:	0e 94 3f 11 	call	0x227e	; 0x227e <eeprom_read_byte>
    156a:	ca 57       	subi	r28, 0x7A	; 122
    156c:	de 4f       	sbci	r29, 0xFE	; 254
    156e:	88 83       	st	Y, r24
    1570:	f3 94       	inc	r15
    1572:	f2 cf       	rjmp	.-28     	; 0x1558 <setup+0x8e>
    1574:	81 e0       	ldi	r24, 0x01	; 1
    1576:	90 e0       	ldi	r25, 0x00	; 0
    1578:	0e 94 3f 11 	call	0x227e	; 0x227e <eeprom_read_byte>
    157c:	c8 2f       	mov	r28, r24
    157e:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <__data_end+0x5>
    1582:	82 e0       	ldi	r24, 0x02	; 2
    1584:	90 e0       	ldi	r25, 0x00	; 0
    1586:	0e 94 3f 11 	call	0x227e	; 0x227e <eeprom_read_byte>
    158a:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <__data_end+0x6>
    158e:	80 53       	subi	r24, 0x30	; 48
    1590:	cc 0f       	add	r28, r28
    1592:	c0 56       	subi	r28, 0x60	; 96
    1594:	9c 2f       	mov	r25, r28
    1596:	99 0f       	add	r25, r25
    1598:	99 0f       	add	r25, r25
    159a:	c9 0f       	add	r28, r25
    159c:	c8 0f       	add	r28, r24
    159e:	c0 93 45 01 	sts	0x0145, r28	; 0x800145 <__data_end+0x7>
    15a2:	83 e0       	ldi	r24, 0x03	; 3
    15a4:	90 e0       	ldi	r25, 0x00	; 0
    15a6:	0e 94 3f 11 	call	0x227e	; 0x227e <eeprom_read_byte>
    15aa:	85 30       	cpi	r24, 0x05	; 5
    15ac:	18 f4       	brcc	.+6      	; 0x15b4 <setup+0xea>
    15ae:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <offset>
    15b2:	02 c0       	rjmp	.+4      	; 0x15b8 <setup+0xee>
    15b4:	10 92 0e 02 	sts	0x020E, r1	; 0x80020e <offset>
    15b8:	43 e4       	ldi	r20, 0x43	; 67
    15ba:	51 e0       	ldi	r21, 0x01	; 1
    15bc:	60 e0       	ldi	r22, 0x00	; 0
    15be:	79 e1       	ldi	r23, 0x19	; 25
    15c0:	89 e0       	ldi	r24, 0x09	; 9
    15c2:	90 e5       	ldi	r25, 0x50	; 80
    15c4:	0e 94 78 04 	call	0x8f0	; 0x8f0 <_Z11generateUIDmP12deviceparams>
    15c8:	60 93 7f 01 	sts	0x017F, r22	; 0x80017f <UID>
    15cc:	70 93 80 01 	sts	0x0180, r23	; 0x800180 <UID+0x1>
    15d0:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <UID+0x2>
    15d4:	90 93 82 01 	sts	0x0182, r25	; 0x800182 <UID+0x3>
    15d8:	20 e0       	ldi	r18, 0x00	; 0
    15da:	40 e9       	ldi	r20, 0x90	; 144
    15dc:	50 ed       	ldi	r21, 0xD0	; 208
    15de:	63 e0       	ldi	r22, 0x03	; 3
    15e0:	70 e0       	ldi	r23, 0x00	; 0
    15e2:	8e e3       	ldi	r24, 0x3E	; 62
    15e4:	91 e0       	ldi	r25, 0x01	; 1
    15e6:	0e 94 7e 03 	call	0x6fc	; 0x6fc <_ZN11CAN_MCP25155beginEmh>
    15ea:	2f ef       	ldi	r18, 0xFF	; 255
    15ec:	44 e3       	ldi	r20, 0x34	; 52
    15ee:	8c e0       	ldi	r24, 0x0C	; 12
    15f0:	21 50       	subi	r18, 0x01	; 1
    15f2:	40 40       	sbci	r20, 0x00	; 0
    15f4:	80 40       	sbci	r24, 0x00	; 0
    15f6:	e1 f7       	brne	.-8      	; 0x15f0 <setup+0x126>
    15f8:	00 c0       	rjmp	.+0      	; 0x15fa <setup+0x130>
    15fa:	00 00       	nop
    15fc:	60 91 7f 01 	lds	r22, 0x017F	; 0x80017f <UID>
    1600:	70 91 80 01 	lds	r23, 0x0180	; 0x800180 <UID+0x1>
    1604:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <UID+0x2>
    1608:	90 91 82 01 	lds	r25, 0x0182	; 0x800182 <UID+0x3>
    160c:	0e 94 9e 04 	call	0x93c	; 0x93c <_Z12generateHashm>
    1610:	90 93 42 01 	sts	0x0142, r25	; 0x800142 <__data_end+0x4>
    1614:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <__data_end+0x3>
    1618:	62 e0       	ldi	r22, 0x02	; 2
    161a:	82 e0       	ldi	r24, 0x02	; 2
    161c:	0e 94 91 10 	call	0x2122	; 0x2122 <pinMode>
    1620:	40 e0       	ldi	r20, 0x00	; 0
    1622:	50 e0       	ldi	r21, 0x00	; 0
    1624:	67 e0       	ldi	r22, 0x07	; 7
    1626:	78 e0       	ldi	r23, 0x08	; 8
    1628:	80 e0       	ldi	r24, 0x00	; 0
    162a:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <attachInterrupt>
    162e:	df 91       	pop	r29
    1630:	cf 91       	pop	r28
    1632:	1f 91       	pop	r17
    1634:	0f 91       	pop	r16
    1636:	ff 90       	pop	r15
    1638:	0c 94 ee 09 	jmp	0x13dc	; 0x13dc <_Z8PCF_Initv>

0000163c <loop>:
    163c:	5f 92       	push	r5
    163e:	6f 92       	push	r6
    1640:	7f 92       	push	r7
    1642:	8f 92       	push	r8
    1644:	9f 92       	push	r9
    1646:	af 92       	push	r10
    1648:	bf 92       	push	r11
    164a:	cf 92       	push	r12
    164c:	df 92       	push	r13
    164e:	ef 92       	push	r14
    1650:	ff 92       	push	r15
    1652:	0f 93       	push	r16
    1654:	1f 93       	push	r17
    1656:	cf 93       	push	r28
    1658:	df 93       	push	r29
    165a:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <gotInput>
    165e:	88 23       	and	r24, r24
    1660:	09 f4       	brne	.+2      	; 0x1664 <loop+0x28>
    1662:	81 c0       	rjmp	.+258    	; 0x1766 <loop+0x12a>
    1664:	00 e0       	ldi	r16, 0x00	; 0
    1666:	10 e0       	ldi	r17, 0x00	; 0
    1668:	89 e0       	ldi	r24, 0x09	; 9
    166a:	98 2e       	mov	r9, r24
    166c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1670:	18 17       	cp	r17, r24
    1672:	08 f0       	brcs	.+2      	; 0x1676 <loop+0x3a>
    1674:	57 c0       	rjmp	.+174    	; 0x1724 <loop+0xe8>
    1676:	91 9e       	mul	r9, r17
    1678:	e0 01       	movw	r28, r0
    167a:	11 24       	eor	r1, r1
    167c:	ca 53       	subi	r28, 0x3A	; 58
    167e:	de 4f       	sbci	r29, 0xFE	; 254
    1680:	88 81       	ld	r24, Y
    1682:	90 e0       	ldi	r25, 0x00	; 0
    1684:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <_Z8PCF_Readi>
    1688:	88 2e       	mov	r8, r24
    168a:	80 94       	com	r8
    168c:	29 e0       	ldi	r18, 0x09	; 9
    168e:	12 9f       	mul	r17, r18
    1690:	50 01       	movw	r10, r0
    1692:	11 24       	eor	r1, r1
    1694:	e1 2c       	mov	r14, r1
    1696:	f1 2c       	mov	r15, r1
    1698:	66 24       	eor	r6, r6
    169a:	63 94       	inc	r6
    169c:	6e 01       	movw	r12, r28
    169e:	77 24       	eor	r7, r7
    16a0:	73 94       	inc	r7
    16a2:	70 0e       	add	r7, r16
    16a4:	91 e0       	ldi	r25, 0x01	; 1
    16a6:	86 2d       	mov	r24, r6
    16a8:	88 21       	and	r24, r8
    16aa:	09 f4       	brne	.+2      	; 0x16ae <loop+0x72>
    16ac:	90 e0       	ldi	r25, 0x00	; 0
    16ae:	f7 01       	movw	r30, r14
    16b0:	ea 0d       	add	r30, r10
    16b2:	fb 1d       	adc	r31, r11
    16b4:	ea 53       	subi	r30, 0x3A	; 58
    16b6:	fe 4f       	sbci	r31, 0xFE	; 254
    16b8:	81 81       	ldd	r24, Z+1	; 0x01
    16ba:	89 17       	cp	r24, r25
    16bc:	41 f1       	breq	.+80     	; 0x170e <loop+0xd2>
    16be:	91 83       	std	Z+1, r25	; 0x01
    16c0:	91 30       	cpi	r25, 0x01	; 1
    16c2:	b1 f4       	brne	.+44     	; 0x16f0 <loop+0xb4>
    16c4:	57 2c       	mov	r5, r7
    16c6:	5e 0c       	add	r5, r14
    16c8:	25 2d       	mov	r18, r5
    16ca:	30 e0       	ldi	r19, 0x00	; 0
    16cc:	e9 01       	movw	r28, r18
    16ce:	ca 57       	subi	r28, 0x7A	; 122
    16d0:	de 4f       	sbci	r29, 0xFE	; 254
    16d2:	88 81       	ld	r24, Y
    16d4:	81 30       	cpi	r24, 0x01	; 1
    16d6:	11 f4       	brne	.+4      	; 0x16dc <loop+0xa0>
    16d8:	18 82       	st	Y, r1
    16da:	01 c0       	rjmp	.+2      	; 0x16de <loop+0xa2>
    16dc:	98 83       	st	Y, r25
    16de:	68 81       	ld	r22, Y
    16e0:	c9 01       	movw	r24, r18
    16e2:	05 96       	adiw	r24, 0x05	; 5
    16e4:	0e 94 47 11 	call	0x228e	; 0x228e <eeprom_update_byte>
    16e8:	68 81       	ld	r22, Y
    16ea:	85 2d       	mov	r24, r5
    16ec:	0e 94 6f 05 	call	0xade	; 0xade <_Z17send_sensor_eventhh>
    16f0:	f6 01       	movw	r30, r12
    16f2:	60 81       	ld	r22, Z
    16f4:	8e e7       	ldi	r24, 0x7E	; 126
    16f6:	92 e0       	ldi	r25, 0x02	; 2
    16f8:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <_ZN7TwoWire17beginTransmissionEh>
    16fc:	6f ef       	ldi	r22, 0xFF	; 255
    16fe:	8e e7       	ldi	r24, 0x7E	; 126
    1700:	92 e0       	ldi	r25, 0x02	; 2
    1702:	0e 94 31 0e 	call	0x1c62	; 0x1c62 <_ZN7TwoWire5writeEh>
    1706:	8e e7       	ldi	r24, 0x7E	; 126
    1708:	92 e0       	ldi	r25, 0x02	; 2
    170a:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <_ZN7TwoWire15endTransmissionEv>
    170e:	66 0c       	add	r6, r6
    1710:	ff ef       	ldi	r31, 0xFF	; 255
    1712:	ef 1a       	sub	r14, r31
    1714:	ff 0a       	sbc	r15, r31
    1716:	28 e0       	ldi	r18, 0x08	; 8
    1718:	e2 16       	cp	r14, r18
    171a:	f1 04       	cpc	r15, r1
    171c:	19 f6       	brne	.-122    	; 0x16a4 <loop+0x68>
    171e:	1f 5f       	subi	r17, 0xFF	; 255
    1720:	08 5f       	subi	r16, 0xF8	; 248
    1722:	a4 cf       	rjmp	.-184    	; 0x166c <loop+0x30>
    1724:	10 92 0f 02 	sts	0x020F, r1	; 0x80020f <gotInput>
    1728:	8f ef       	ldi	r24, 0xFF	; 255
    172a:	94 e3       	ldi	r25, 0x34	; 52
    172c:	ec e0       	ldi	r30, 0x0C	; 12
    172e:	81 50       	subi	r24, 0x01	; 1
    1730:	90 40       	sbci	r25, 0x00	; 0
    1732:	e0 40       	sbci	r30, 0x00	; 0
    1734:	e1 f7       	brne	.-8      	; 0x172e <loop+0xf2>
    1736:	00 c0       	rjmp	.+0      	; 0x1738 <loop+0xfc>
    1738:	00 00       	nop
    173a:	41 e0       	ldi	r20, 0x01	; 1
    173c:	50 e0       	ldi	r21, 0x00	; 0
    173e:	6a e6       	ldi	r22, 0x6A	; 106
    1740:	75 e0       	ldi	r23, 0x05	; 5
    1742:	81 e0       	ldi	r24, 0x01	; 1
    1744:	df 91       	pop	r29
    1746:	cf 91       	pop	r28
    1748:	1f 91       	pop	r17
    174a:	0f 91       	pop	r16
    174c:	ff 90       	pop	r15
    174e:	ef 90       	pop	r14
    1750:	df 90       	pop	r13
    1752:	cf 90       	pop	r12
    1754:	bf 90       	pop	r11
    1756:	af 90       	pop	r10
    1758:	9f 90       	pop	r9
    175a:	8f 90       	pop	r8
    175c:	7f 90       	pop	r7
    175e:	6f 90       	pop	r6
    1760:	5f 90       	pop	r5
    1762:	0c 94 06 0f 	jmp	0x1e0c	; 0x1e0c <attachInterrupt>
    1766:	df 91       	pop	r29
    1768:	cf 91       	pop	r28
    176a:	1f 91       	pop	r17
    176c:	0f 91       	pop	r16
    176e:	ff 90       	pop	r15
    1770:	ef 90       	pop	r14
    1772:	df 90       	pop	r13
    1774:	cf 90       	pop	r12
    1776:	bf 90       	pop	r11
    1778:	af 90       	pop	r10
    177a:	9f 90       	pop	r9
    177c:	8f 90       	pop	r8
    177e:	7f 90       	pop	r7
    1780:	6f 90       	pop	r6
    1782:	5f 90       	pop	r5
    1784:	08 95       	ret

00001786 <_Z8twi_initv>:
    1786:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <_ZL9twi_state>
    178a:	81 e0       	ldi	r24, 0x01	; 1
    178c:	80 93 7b 02 	sts	0x027B, r24	; 0x80027b <_ZL12twi_sendStop>
    1790:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <_ZL14twi_inRepStart>
    1794:	61 e0       	ldi	r22, 0x01	; 1
    1796:	82 e1       	ldi	r24, 0x12	; 18
    1798:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
    179c:	61 e0       	ldi	r22, 0x01	; 1
    179e:	83 e1       	ldi	r24, 0x13	; 19
    17a0:	0e 94 ca 10 	call	0x2194	; 0x2194 <digitalWrite>
    17a4:	e9 eb       	ldi	r30, 0xB9	; 185
    17a6:	f0 e0       	ldi	r31, 0x00	; 0
    17a8:	80 81       	ld	r24, Z
    17aa:	8e 7f       	andi	r24, 0xFE	; 254
    17ac:	80 83       	st	Z, r24
    17ae:	80 81       	ld	r24, Z
    17b0:	8d 7f       	andi	r24, 0xFD	; 253
    17b2:	80 83       	st	Z, r24
    17b4:	88 e4       	ldi	r24, 0x48	; 72
    17b6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    17ba:	85 e4       	ldi	r24, 0x45	; 69
    17bc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    17c0:	08 95       	ret

000017c2 <_Z12twi_readFromhPhhh>:
    17c2:	41 32       	cpi	r20, 0x21	; 33
    17c4:	08 f0       	brcs	.+2      	; 0x17c8 <_Z12twi_readFromhPhhh+0x6>
    17c6:	43 c0       	rjmp	.+134    	; 0x184e <_Z12twi_readFromhPhhh+0x8c>
    17c8:	90 91 7d 02 	lds	r25, 0x027D	; 0x80027d <_ZL9twi_state>
    17cc:	91 11       	cpse	r25, r1
    17ce:	fc cf       	rjmp	.-8      	; 0x17c8 <_Z12twi_readFromhPhhh+0x6>
    17d0:	91 e0       	ldi	r25, 0x01	; 1
    17d2:	90 93 7d 02 	sts	0x027D, r25	; 0x80027d <_ZL9twi_state>
    17d6:	20 93 7b 02 	sts	0x027B, r18	; 0x80027b <_ZL12twi_sendStop>
    17da:	2f ef       	ldi	r18, 0xFF	; 255
    17dc:	20 93 10 02 	sts	0x0210, r18	; 0x800210 <_ZL9twi_error>
    17e0:	10 92 55 02 	sts	0x0255, r1	; 0x800255 <_ZL21twi_masterBufferIndex>
    17e4:	24 0f       	add	r18, r20
    17e6:	20 93 54 02 	sts	0x0254, r18	; 0x800254 <_ZL22twi_masterBufferLength>
    17ea:	90 93 7c 02 	sts	0x027C, r25	; 0x80027c <_ZL9twi_slarw>
    17ee:	90 91 7c 02 	lds	r25, 0x027C	; 0x80027c <_ZL9twi_slarw>
    17f2:	88 0f       	add	r24, r24
    17f4:	89 2b       	or	r24, r25
    17f6:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <_ZL9twi_slarw>
    17fa:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <_ZL14twi_inRepStart>
    17fe:	81 30       	cpi	r24, 0x01	; 1
    1800:	61 f4       	brne	.+24     	; 0x181a <_Z12twi_readFromhPhhh+0x58>
    1802:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <_ZL14twi_inRepStart>
    1806:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <_ZL9twi_slarw>
    180a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    180e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1812:	83 fd       	sbrc	r24, 3
    1814:	f8 cf       	rjmp	.-16     	; 0x1806 <_Z12twi_readFromhPhhh+0x44>
    1816:	85 ec       	ldi	r24, 0xC5	; 197
    1818:	01 c0       	rjmp	.+2      	; 0x181c <_Z12twi_readFromhPhhh+0x5a>
    181a:	85 ee       	ldi	r24, 0xE5	; 229
    181c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1820:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <_ZL9twi_state>
    1824:	81 30       	cpi	r24, 0x01	; 1
    1826:	e1 f3       	breq	.-8      	; 0x1820 <_Z12twi_readFromhPhhh+0x5e>
    1828:	80 91 55 02 	lds	r24, 0x0255	; 0x800255 <_ZL21twi_masterBufferIndex>
    182c:	84 17       	cp	r24, r20
    182e:	10 f4       	brcc	.+4      	; 0x1834 <_Z12twi_readFromhPhhh+0x72>
    1830:	40 91 55 02 	lds	r20, 0x0255	; 0x800255 <_ZL21twi_masterBufferIndex>
    1834:	26 e5       	ldi	r18, 0x56	; 86
    1836:	32 e0       	ldi	r19, 0x02	; 2
    1838:	fb 01       	movw	r30, r22
    183a:	d9 01       	movw	r26, r18
    183c:	8a 2f       	mov	r24, r26
    183e:	82 1b       	sub	r24, r18
    1840:	84 17       	cp	r24, r20
    1842:	18 f4       	brcc	.+6      	; 0x184a <_Z12twi_readFromhPhhh+0x88>
    1844:	8d 91       	ld	r24, X+
    1846:	81 93       	st	Z+, r24
    1848:	f9 cf       	rjmp	.-14     	; 0x183c <_Z12twi_readFromhPhhh+0x7a>
    184a:	84 2f       	mov	r24, r20
    184c:	08 95       	ret
    184e:	80 e0       	ldi	r24, 0x00	; 0
    1850:	08 95       	ret

00001852 <_Z11twi_writeTohPhhhh>:
    1852:	0f 93       	push	r16
    1854:	41 32       	cpi	r20, 0x21	; 33
    1856:	e8 f5       	brcc	.+122    	; 0x18d2 <_Z11twi_writeTohPhhhh+0x80>
    1858:	90 91 7d 02 	lds	r25, 0x027D	; 0x80027d <_ZL9twi_state>
    185c:	91 11       	cpse	r25, r1
    185e:	fc cf       	rjmp	.-8      	; 0x1858 <_Z11twi_writeTohPhhhh+0x6>
    1860:	32 e0       	ldi	r19, 0x02	; 2
    1862:	30 93 7d 02 	sts	0x027D, r19	; 0x80027d <_ZL9twi_state>
    1866:	00 93 7b 02 	sts	0x027B, r16	; 0x80027b <_ZL12twi_sendStop>
    186a:	3f ef       	ldi	r19, 0xFF	; 255
    186c:	30 93 10 02 	sts	0x0210, r19	; 0x800210 <_ZL9twi_error>
    1870:	10 92 55 02 	sts	0x0255, r1	; 0x800255 <_ZL21twi_masterBufferIndex>
    1874:	40 93 54 02 	sts	0x0254, r20	; 0x800254 <_ZL22twi_masterBufferLength>
    1878:	fb 01       	movw	r30, r22
    187a:	66 e5       	ldi	r22, 0x56	; 86
    187c:	72 e0       	ldi	r23, 0x02	; 2
    187e:	db 01       	movw	r26, r22
    1880:	3a 2f       	mov	r19, r26
    1882:	36 1b       	sub	r19, r22
    1884:	34 17       	cp	r19, r20
    1886:	18 f4       	brcc	.+6      	; 0x188e <_Z11twi_writeTohPhhhh+0x3c>
    1888:	31 91       	ld	r19, Z+
    188a:	3d 93       	st	X+, r19
    188c:	f9 cf       	rjmp	.-14     	; 0x1880 <_Z11twi_writeTohPhhhh+0x2e>
    188e:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <_ZL9twi_slarw>
    1892:	30 91 7c 02 	lds	r19, 0x027C	; 0x80027c <_ZL9twi_slarw>
    1896:	88 0f       	add	r24, r24
    1898:	83 2b       	or	r24, r19
    189a:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <_ZL9twi_slarw>
    189e:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <_ZL14twi_inRepStart>
    18a2:	81 30       	cpi	r24, 0x01	; 1
    18a4:	61 f4       	brne	.+24     	; 0x18be <_Z11twi_writeTohPhhhh+0x6c>
    18a6:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <_ZL14twi_inRepStart>
    18aa:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <_ZL9twi_slarw>
    18ae:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    18b2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    18b6:	83 fd       	sbrc	r24, 3
    18b8:	f8 cf       	rjmp	.-16     	; 0x18aa <_Z11twi_writeTohPhhhh+0x58>
    18ba:	85 ec       	ldi	r24, 0xC5	; 197
    18bc:	01 c0       	rjmp	.+2      	; 0x18c0 <_Z11twi_writeTohPhhhh+0x6e>
    18be:	85 ee       	ldi	r24, 0xE5	; 229
    18c0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    18c4:	22 23       	and	r18, r18
    18c6:	39 f0       	breq	.+14     	; 0x18d6 <_Z11twi_writeTohPhhhh+0x84>
    18c8:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <_ZL9twi_state>
    18cc:	82 30       	cpi	r24, 0x02	; 2
    18ce:	19 f4       	brne	.+6      	; 0x18d6 <_Z11twi_writeTohPhhhh+0x84>
    18d0:	f9 cf       	rjmp	.-14     	; 0x18c4 <_Z11twi_writeTohPhhhh+0x72>
    18d2:	91 e0       	ldi	r25, 0x01	; 1
    18d4:	11 c0       	rjmp	.+34     	; 0x18f8 <_Z11twi_writeTohPhhhh+0xa6>
    18d6:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <_ZL9twi_error>
    18da:	8f 3f       	cpi	r24, 0xFF	; 255
    18dc:	69 f0       	breq	.+26     	; 0x18f8 <_Z11twi_writeTohPhhhh+0xa6>
    18de:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <_ZL9twi_error>
    18e2:	80 32       	cpi	r24, 0x20	; 32
    18e4:	31 f0       	breq	.+12     	; 0x18f2 <_Z11twi_writeTohPhhhh+0xa0>
    18e6:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <_ZL9twi_error>
    18ea:	80 33       	cpi	r24, 0x30	; 48
    18ec:	21 f0       	breq	.+8      	; 0x18f6 <_Z11twi_writeTohPhhhh+0xa4>
    18ee:	94 e0       	ldi	r25, 0x04	; 4
    18f0:	03 c0       	rjmp	.+6      	; 0x18f8 <_Z11twi_writeTohPhhhh+0xa6>
    18f2:	92 e0       	ldi	r25, 0x02	; 2
    18f4:	01 c0       	rjmp	.+2      	; 0x18f8 <_Z11twi_writeTohPhhhh+0xa6>
    18f6:	93 e0       	ldi	r25, 0x03	; 3
    18f8:	89 2f       	mov	r24, r25
    18fa:	0f 91       	pop	r16
    18fc:	08 95       	ret

000018fe <_Z12twi_transmitPKhh>:
    18fe:	61 32       	cpi	r22, 0x21	; 33
    1900:	98 f4       	brcc	.+38     	; 0x1928 <_Z12twi_transmitPKhh+0x2a>
    1902:	20 91 7d 02 	lds	r18, 0x027D	; 0x80027d <_ZL9twi_state>
    1906:	24 30       	cpi	r18, 0x04	; 4
    1908:	89 f4       	brne	.+34     	; 0x192c <_Z12twi_transmitPKhh+0x2e>
    190a:	60 93 32 02 	sts	0x0232, r22	; 0x800232 <_ZL18twi_txBufferLength>
    190e:	fc 01       	movw	r30, r24
    1910:	24 e3       	ldi	r18, 0x34	; 52
    1912:	32 e0       	ldi	r19, 0x02	; 2
    1914:	d9 01       	movw	r26, r18
    1916:	8a 2f       	mov	r24, r26
    1918:	82 1b       	sub	r24, r18
    191a:	86 17       	cp	r24, r22
    191c:	18 f4       	brcc	.+6      	; 0x1924 <_Z12twi_transmitPKhh+0x26>
    191e:	81 91       	ld	r24, Z+
    1920:	8d 93       	st	X+, r24
    1922:	f9 cf       	rjmp	.-14     	; 0x1916 <_Z12twi_transmitPKhh+0x18>
    1924:	80 e0       	ldi	r24, 0x00	; 0
    1926:	08 95       	ret
    1928:	81 e0       	ldi	r24, 0x01	; 1
    192a:	08 95       	ret
    192c:	82 e0       	ldi	r24, 0x02	; 2
    192e:	08 95       	ret

00001930 <_Z8twi_stopv>:
    1930:	85 ed       	ldi	r24, 0xD5	; 213
    1932:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1936:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    193a:	84 fd       	sbrc	r24, 4
    193c:	fc cf       	rjmp	.-8      	; 0x1936 <_Z8twi_stopv+0x6>
    193e:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <_ZL9twi_state>
    1942:	08 95       	ret

00001944 <_Z14twi_releaseBusv>:
    1944:	85 ec       	ldi	r24, 0xC5	; 197
    1946:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    194a:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <_ZL9twi_state>
    194e:	08 95       	ret

00001950 <__vector_24>:
    1950:	1f 92       	push	r1
    1952:	0f 92       	push	r0
    1954:	0f b6       	in	r0, 0x3f	; 63
    1956:	0f 92       	push	r0
    1958:	11 24       	eor	r1, r1
    195a:	2f 93       	push	r18
    195c:	3f 93       	push	r19
    195e:	4f 93       	push	r20
    1960:	5f 93       	push	r21
    1962:	6f 93       	push	r22
    1964:	7f 93       	push	r23
    1966:	8f 93       	push	r24
    1968:	9f 93       	push	r25
    196a:	af 93       	push	r26
    196c:	bf 93       	push	r27
    196e:	ef 93       	push	r30
    1970:	ff 93       	push	r31
    1972:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1976:	88 7f       	andi	r24, 0xF8	; 248
    1978:	80 36       	cpi	r24, 0x60	; 96
    197a:	09 f4       	brne	.+2      	; 0x197e <__vector_24+0x2e>
    197c:	9e c0       	rjmp	.+316    	; 0x1aba <__vector_24+0x16a>
    197e:	78 f5       	brcc	.+94     	; 0x19de <__vector_24+0x8e>
    1980:	88 32       	cpi	r24, 0x28	; 40
    1982:	09 f4       	brne	.+2      	; 0x1986 <__vector_24+0x36>
    1984:	5d c0       	rjmp	.+186    	; 0x1a40 <__vector_24+0xf0>
    1986:	90 f4       	brcc	.+36     	; 0x19ac <__vector_24+0x5c>
    1988:	80 31       	cpi	r24, 0x10	; 16
    198a:	09 f4       	brne	.+2      	; 0x198e <__vector_24+0x3e>
    198c:	56 c0       	rjmp	.+172    	; 0x1a3a <__vector_24+0xea>
    198e:	38 f4       	brcc	.+14     	; 0x199e <__vector_24+0x4e>
    1990:	88 23       	and	r24, r24
    1992:	09 f4       	brne	.+2      	; 0x1996 <__vector_24+0x46>
    1994:	f5 c0       	rjmp	.+490    	; 0x1b80 <__vector_24+0x230>
    1996:	88 30       	cpi	r24, 0x08	; 8
    1998:	09 f4       	brne	.+2      	; 0x199c <__vector_24+0x4c>
    199a:	4f c0       	rjmp	.+158    	; 0x1a3a <__vector_24+0xea>
    199c:	f5 c0       	rjmp	.+490    	; 0x1b88 <__vector_24+0x238>
    199e:	88 31       	cpi	r24, 0x18	; 24
    19a0:	09 f4       	brne	.+2      	; 0x19a4 <__vector_24+0x54>
    19a2:	4e c0       	rjmp	.+156    	; 0x1a40 <__vector_24+0xf0>
    19a4:	80 32       	cpi	r24, 0x20	; 32
    19a6:	09 f4       	brne	.+2      	; 0x19aa <__vector_24+0x5a>
    19a8:	5f c0       	rjmp	.+190    	; 0x1a68 <__vector_24+0x118>
    19aa:	ee c0       	rjmp	.+476    	; 0x1b88 <__vector_24+0x238>
    19ac:	80 34       	cpi	r24, 0x40	; 64
    19ae:	09 f4       	brne	.+2      	; 0x19b2 <__vector_24+0x62>
    19b0:	6a c0       	rjmp	.+212    	; 0x1a86 <__vector_24+0x136>
    19b2:	58 f4       	brcc	.+22     	; 0x19ca <__vector_24+0x7a>
    19b4:	80 33       	cpi	r24, 0x30	; 48
    19b6:	09 f4       	brne	.+2      	; 0x19ba <__vector_24+0x6a>
    19b8:	57 c0       	rjmp	.+174    	; 0x1a68 <__vector_24+0x118>
    19ba:	88 33       	cpi	r24, 0x38	; 56
    19bc:	09 f0       	breq	.+2      	; 0x19c0 <__vector_24+0x70>
    19be:	e4 c0       	rjmp	.+456    	; 0x1b88 <__vector_24+0x238>
    19c0:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <_ZL9twi_error>
    19c4:	0e 94 a2 0c 	call	0x1944	; 0x1944 <_Z14twi_releaseBusv>
    19c8:	df c0       	rjmp	.+446    	; 0x1b88 <__vector_24+0x238>
    19ca:	80 35       	cpi	r24, 0x50	; 80
    19cc:	09 f4       	brne	.+2      	; 0x19d0 <__vector_24+0x80>
    19ce:	4f c0       	rjmp	.+158    	; 0x1a6e <__vector_24+0x11e>
    19d0:	88 35       	cpi	r24, 0x58	; 88
    19d2:	09 f4       	brne	.+2      	; 0x19d6 <__vector_24+0x86>
    19d4:	5d c0       	rjmp	.+186    	; 0x1a90 <__vector_24+0x140>
    19d6:	88 34       	cpi	r24, 0x48	; 72
    19d8:	09 f0       	breq	.+2      	; 0x19dc <__vector_24+0x8c>
    19da:	d6 c0       	rjmp	.+428    	; 0x1b88 <__vector_24+0x238>
    19dc:	d3 c0       	rjmp	.+422    	; 0x1b84 <__vector_24+0x234>
    19de:	88 39       	cpi	r24, 0x98	; 152
    19e0:	09 f4       	brne	.+2      	; 0x19e4 <__vector_24+0x94>
    19e2:	c4 c0       	rjmp	.+392    	; 0x1b6c <__vector_24+0x21c>
    19e4:	a8 f4       	brcc	.+42     	; 0x1a10 <__vector_24+0xc0>
    19e6:	88 37       	cpi	r24, 0x78	; 120
    19e8:	09 f4       	brne	.+2      	; 0x19ec <__vector_24+0x9c>
    19ea:	67 c0       	rjmp	.+206    	; 0x1aba <__vector_24+0x16a>
    19ec:	38 f4       	brcc	.+14     	; 0x19fc <__vector_24+0xac>
    19ee:	88 36       	cpi	r24, 0x68	; 104
    19f0:	09 f4       	brne	.+2      	; 0x19f4 <__vector_24+0xa4>
    19f2:	63 c0       	rjmp	.+198    	; 0x1aba <__vector_24+0x16a>
    19f4:	80 37       	cpi	r24, 0x70	; 112
    19f6:	09 f4       	brne	.+2      	; 0x19fa <__vector_24+0xaa>
    19f8:	60 c0       	rjmp	.+192    	; 0x1aba <__vector_24+0x16a>
    19fa:	c6 c0       	rjmp	.+396    	; 0x1b88 <__vector_24+0x238>
    19fc:	88 38       	cpi	r24, 0x88	; 136
    19fe:	09 f4       	brne	.+2      	; 0x1a02 <__vector_24+0xb2>
    1a00:	b5 c0       	rjmp	.+362    	; 0x1b6c <__vector_24+0x21c>
    1a02:	80 39       	cpi	r24, 0x90	; 144
    1a04:	09 f4       	brne	.+2      	; 0x1a08 <__vector_24+0xb8>
    1a06:	5f c0       	rjmp	.+190    	; 0x1ac6 <__vector_24+0x176>
    1a08:	80 38       	cpi	r24, 0x80	; 128
    1a0a:	09 f0       	breq	.+2      	; 0x1a0e <__vector_24+0xbe>
    1a0c:	bd c0       	rjmp	.+378    	; 0x1b88 <__vector_24+0x238>
    1a0e:	5b c0       	rjmp	.+182    	; 0x1ac6 <__vector_24+0x176>
    1a10:	80 3b       	cpi	r24, 0xB0	; 176
    1a12:	09 f4       	brne	.+2      	; 0x1a16 <__vector_24+0xc6>
    1a14:	83 c0       	rjmp	.+262    	; 0x1b1c <__vector_24+0x1cc>
    1a16:	38 f4       	brcc	.+14     	; 0x1a26 <__vector_24+0xd6>
    1a18:	80 3a       	cpi	r24, 0xA0	; 160
    1a1a:	09 f4       	brne	.+2      	; 0x1a1e <__vector_24+0xce>
    1a1c:	66 c0       	rjmp	.+204    	; 0x1aea <__vector_24+0x19a>
    1a1e:	88 3a       	cpi	r24, 0xA8	; 168
    1a20:	09 f4       	brne	.+2      	; 0x1a24 <__vector_24+0xd4>
    1a22:	7c c0       	rjmp	.+248    	; 0x1b1c <__vector_24+0x1cc>
    1a24:	b1 c0       	rjmp	.+354    	; 0x1b88 <__vector_24+0x238>
    1a26:	80 3c       	cpi	r24, 0xC0	; 192
    1a28:	09 f4       	brne	.+2      	; 0x1a2c <__vector_24+0xdc>
    1a2a:	a4 c0       	rjmp	.+328    	; 0x1b74 <__vector_24+0x224>
    1a2c:	88 3c       	cpi	r24, 0xC8	; 200
    1a2e:	09 f4       	brne	.+2      	; 0x1a32 <__vector_24+0xe2>
    1a30:	a1 c0       	rjmp	.+322    	; 0x1b74 <__vector_24+0x224>
    1a32:	88 3b       	cpi	r24, 0xB8	; 184
    1a34:	09 f4       	brne	.+2      	; 0x1a38 <__vector_24+0xe8>
    1a36:	87 c0       	rjmp	.+270    	; 0x1b46 <__vector_24+0x1f6>
    1a38:	a7 c0       	rjmp	.+334    	; 0x1b88 <__vector_24+0x238>
    1a3a:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <_ZL9twi_slarw>
    1a3e:	10 c0       	rjmp	.+32     	; 0x1a60 <__vector_24+0x110>
    1a40:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <_ZL21twi_masterBufferIndex>
    1a44:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <_ZL22twi_masterBufferLength>
    1a48:	98 17       	cp	r25, r24
    1a4a:	70 f5       	brcc	.+92     	; 0x1aa8 <__vector_24+0x158>
    1a4c:	e0 91 55 02 	lds	r30, 0x0255	; 0x800255 <_ZL21twi_masterBufferIndex>
    1a50:	81 e0       	ldi	r24, 0x01	; 1
    1a52:	8e 0f       	add	r24, r30
    1a54:	80 93 55 02 	sts	0x0255, r24	; 0x800255 <_ZL21twi_masterBufferIndex>
    1a58:	f0 e0       	ldi	r31, 0x00	; 0
    1a5a:	ea 5a       	subi	r30, 0xAA	; 170
    1a5c:	fd 4f       	sbci	r31, 0xFD	; 253
    1a5e:	80 81       	ld	r24, Z
    1a60:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1a64:	85 ec       	ldi	r24, 0xC5	; 197
    1a66:	83 c0       	rjmp	.+262    	; 0x1b6e <__vector_24+0x21e>
    1a68:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <_ZL9twi_error>
    1a6c:	8b c0       	rjmp	.+278    	; 0x1b84 <__vector_24+0x234>
    1a6e:	e0 91 55 02 	lds	r30, 0x0255	; 0x800255 <_ZL21twi_masterBufferIndex>
    1a72:	81 e0       	ldi	r24, 0x01	; 1
    1a74:	8e 0f       	add	r24, r30
    1a76:	80 93 55 02 	sts	0x0255, r24	; 0x800255 <_ZL21twi_masterBufferIndex>
    1a7a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1a7e:	f0 e0       	ldi	r31, 0x00	; 0
    1a80:	ea 5a       	subi	r30, 0xAA	; 170
    1a82:	fd 4f       	sbci	r31, 0xFD	; 253
    1a84:	80 83       	st	Z, r24
    1a86:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <_ZL21twi_masterBufferIndex>
    1a8a:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <_ZL22twi_masterBufferLength>
    1a8e:	6b c0       	rjmp	.+214    	; 0x1b66 <__vector_24+0x216>
    1a90:	e0 91 55 02 	lds	r30, 0x0255	; 0x800255 <_ZL21twi_masterBufferIndex>
    1a94:	81 e0       	ldi	r24, 0x01	; 1
    1a96:	8e 0f       	add	r24, r30
    1a98:	80 93 55 02 	sts	0x0255, r24	; 0x800255 <_ZL21twi_masterBufferIndex>
    1a9c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1aa0:	f0 e0       	ldi	r31, 0x00	; 0
    1aa2:	ea 5a       	subi	r30, 0xAA	; 170
    1aa4:	fd 4f       	sbci	r31, 0xFD	; 253
    1aa6:	80 83       	st	Z, r24
    1aa8:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <_ZL12twi_sendStop>
    1aac:	81 11       	cpse	r24, r1
    1aae:	6a c0       	rjmp	.+212    	; 0x1b84 <__vector_24+0x234>
    1ab0:	81 e0       	ldi	r24, 0x01	; 1
    1ab2:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <_ZL14twi_inRepStart>
    1ab6:	84 ea       	ldi	r24, 0xA4	; 164
    1ab8:	5e c0       	rjmp	.+188    	; 0x1b76 <__vector_24+0x226>
    1aba:	83 e0       	ldi	r24, 0x03	; 3
    1abc:	80 93 7d 02 	sts	0x027D, r24	; 0x80027d <_ZL9twi_state>
    1ac0:	10 92 11 02 	sts	0x0211, r1	; 0x800211 <_ZL17twi_rxBufferIndex>
    1ac4:	cf cf       	rjmp	.-98     	; 0x1a64 <__vector_24+0x114>
    1ac6:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <_ZL17twi_rxBufferIndex>
    1aca:	80 32       	cpi	r24, 0x20	; 32
    1acc:	08 f0       	brcs	.+2      	; 0x1ad0 <__vector_24+0x180>
    1ace:	4e c0       	rjmp	.+156    	; 0x1b6c <__vector_24+0x21c>
    1ad0:	e0 91 11 02 	lds	r30, 0x0211	; 0x800211 <_ZL17twi_rxBufferIndex>
    1ad4:	81 e0       	ldi	r24, 0x01	; 1
    1ad6:	8e 0f       	add	r24, r30
    1ad8:	80 93 11 02 	sts	0x0211, r24	; 0x800211 <_ZL17twi_rxBufferIndex>
    1adc:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1ae0:	f0 e0       	ldi	r31, 0x00	; 0
    1ae2:	ee 5e       	subi	r30, 0xEE	; 238
    1ae4:	fd 4f       	sbci	r31, 0xFD	; 253
    1ae6:	80 83       	st	Z, r24
    1ae8:	bd cf       	rjmp	.-134    	; 0x1a64 <__vector_24+0x114>
    1aea:	0e 94 a2 0c 	call	0x1944	; 0x1944 <_Z14twi_releaseBusv>
    1aee:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <_ZL17twi_rxBufferIndex>
    1af2:	80 32       	cpi	r24, 0x20	; 32
    1af4:	30 f4       	brcc	.+12     	; 0x1b02 <__vector_24+0x1b2>
    1af6:	e0 91 11 02 	lds	r30, 0x0211	; 0x800211 <_ZL17twi_rxBufferIndex>
    1afa:	f0 e0       	ldi	r31, 0x00	; 0
    1afc:	ee 5e       	subi	r30, 0xEE	; 238
    1afe:	fd 4f       	sbci	r31, 0xFD	; 253
    1b00:	10 82       	st	Z, r1
    1b02:	60 91 11 02 	lds	r22, 0x0211	; 0x800211 <_ZL17twi_rxBufferIndex>
    1b06:	70 e0       	ldi	r23, 0x00	; 0
    1b08:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <_ZL18twi_onSlaveReceive>
    1b0c:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <_ZL18twi_onSlaveReceive+0x1>
    1b10:	82 e1       	ldi	r24, 0x12	; 18
    1b12:	92 e0       	ldi	r25, 0x02	; 2
    1b14:	09 95       	icall
    1b16:	10 92 11 02 	sts	0x0211, r1	; 0x800211 <_ZL17twi_rxBufferIndex>
    1b1a:	36 c0       	rjmp	.+108    	; 0x1b88 <__vector_24+0x238>
    1b1c:	84 e0       	ldi	r24, 0x04	; 4
    1b1e:	80 93 7d 02 	sts	0x027D, r24	; 0x80027d <_ZL9twi_state>
    1b22:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <_ZL17twi_txBufferIndex>
    1b26:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <_ZL18twi_txBufferLength>
    1b2a:	e0 91 78 02 	lds	r30, 0x0278	; 0x800278 <_ZL19twi_onSlaveTransmit>
    1b2e:	f0 91 79 02 	lds	r31, 0x0279	; 0x800279 <_ZL19twi_onSlaveTransmit+0x1>
    1b32:	09 95       	icall
    1b34:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <_ZL18twi_txBufferLength>
    1b38:	81 11       	cpse	r24, r1
    1b3a:	05 c0       	rjmp	.+10     	; 0x1b46 <__vector_24+0x1f6>
    1b3c:	81 e0       	ldi	r24, 0x01	; 1
    1b3e:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <_ZL18twi_txBufferLength>
    1b42:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <_ZL12twi_txBuffer>
    1b46:	e0 91 33 02 	lds	r30, 0x0233	; 0x800233 <_ZL17twi_txBufferIndex>
    1b4a:	81 e0       	ldi	r24, 0x01	; 1
    1b4c:	8e 0f       	add	r24, r30
    1b4e:	80 93 33 02 	sts	0x0233, r24	; 0x800233 <_ZL17twi_txBufferIndex>
    1b52:	f0 e0       	ldi	r31, 0x00	; 0
    1b54:	ec 5c       	subi	r30, 0xCC	; 204
    1b56:	fd 4f       	sbci	r31, 0xFD	; 253
    1b58:	80 81       	ld	r24, Z
    1b5a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1b5e:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <_ZL17twi_txBufferIndex>
    1b62:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <_ZL18twi_txBufferLength>
    1b66:	98 17       	cp	r25, r24
    1b68:	08 f4       	brcc	.+2      	; 0x1b6c <__vector_24+0x21c>
    1b6a:	7c cf       	rjmp	.-264    	; 0x1a64 <__vector_24+0x114>
    1b6c:	85 e8       	ldi	r24, 0x85	; 133
    1b6e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1b72:	0a c0       	rjmp	.+20     	; 0x1b88 <__vector_24+0x238>
    1b74:	85 ec       	ldi	r24, 0xC5	; 197
    1b76:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1b7a:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <_ZL9twi_state>
    1b7e:	04 c0       	rjmp	.+8      	; 0x1b88 <__vector_24+0x238>
    1b80:	10 92 10 02 	sts	0x0210, r1	; 0x800210 <_ZL9twi_error>
    1b84:	0e 94 98 0c 	call	0x1930	; 0x1930 <_Z8twi_stopv>
    1b88:	ff 91       	pop	r31
    1b8a:	ef 91       	pop	r30
    1b8c:	bf 91       	pop	r27
    1b8e:	af 91       	pop	r26
    1b90:	9f 91       	pop	r25
    1b92:	8f 91       	pop	r24
    1b94:	7f 91       	pop	r23
    1b96:	6f 91       	pop	r22
    1b98:	5f 91       	pop	r21
    1b9a:	4f 91       	pop	r20
    1b9c:	3f 91       	pop	r19
    1b9e:	2f 91       	pop	r18
    1ba0:	0f 90       	pop	r0
    1ba2:	0f be       	out	0x3f, r0	; 63
    1ba4:	0f 90       	pop	r0
    1ba6:	1f 90       	pop	r1
    1ba8:	18 95       	reti

00001baa <_ZN7TwoWire9availableEv>:
    1baa:	80 91 ae 02 	lds	r24, 0x02AE	; 0x8002ae <_ZN7TwoWire14rxBufferLengthE>
    1bae:	90 e0       	ldi	r25, 0x00	; 0
    1bb0:	20 91 af 02 	lds	r18, 0x02AF	; 0x8002af <_ZN7TwoWire13rxBufferIndexE>
    1bb4:	82 1b       	sub	r24, r18
    1bb6:	91 09       	sbc	r25, r1
    1bb8:	08 95       	ret

00001bba <_ZN7TwoWire4readEv>:
    1bba:	90 91 af 02 	lds	r25, 0x02AF	; 0x8002af <_ZN7TwoWire13rxBufferIndexE>
    1bbe:	80 91 ae 02 	lds	r24, 0x02AE	; 0x8002ae <_ZN7TwoWire14rxBufferLengthE>
    1bc2:	98 17       	cp	r25, r24
    1bc4:	50 f4       	brcc	.+20     	; 0x1bda <_ZN7TwoWire4readEv+0x20>
    1bc6:	e9 2f       	mov	r30, r25
    1bc8:	f0 e0       	ldi	r31, 0x00	; 0
    1bca:	e0 55       	subi	r30, 0x50	; 80
    1bcc:	fd 4f       	sbci	r31, 0xFD	; 253
    1bce:	20 81       	ld	r18, Z
    1bd0:	30 e0       	ldi	r19, 0x00	; 0
    1bd2:	9f 5f       	subi	r25, 0xFF	; 255
    1bd4:	90 93 af 02 	sts	0x02AF, r25	; 0x8002af <_ZN7TwoWire13rxBufferIndexE>
    1bd8:	02 c0       	rjmp	.+4      	; 0x1bde <_ZN7TwoWire4readEv+0x24>
    1bda:	2f ef       	ldi	r18, 0xFF	; 255
    1bdc:	3f ef       	ldi	r19, 0xFF	; 255
    1bde:	c9 01       	movw	r24, r18
    1be0:	08 95       	ret

00001be2 <_ZN7TwoWire4peekEv>:
    1be2:	e0 91 af 02 	lds	r30, 0x02AF	; 0x8002af <_ZN7TwoWire13rxBufferIndexE>
    1be6:	80 91 ae 02 	lds	r24, 0x02AE	; 0x8002ae <_ZN7TwoWire14rxBufferLengthE>
    1bea:	e8 17       	cp	r30, r24
    1bec:	30 f4       	brcc	.+12     	; 0x1bfa <_ZN7TwoWire4peekEv+0x18>
    1bee:	f0 e0       	ldi	r31, 0x00	; 0
    1bf0:	e0 55       	subi	r30, 0x50	; 80
    1bf2:	fd 4f       	sbci	r31, 0xFD	; 253
    1bf4:	80 81       	ld	r24, Z
    1bf6:	90 e0       	ldi	r25, 0x00	; 0
    1bf8:	08 95       	ret
    1bfa:	8f ef       	ldi	r24, 0xFF	; 255
    1bfc:	9f ef       	ldi	r25, 0xFF	; 255
    1bfe:	08 95       	ret

00001c00 <_ZN7TwoWire5flushEv>:
    1c00:	08 95       	ret

00001c02 <_ZN7TwoWire5writeEPKhj>:
    1c02:	cf 92       	push	r12
    1c04:	df 92       	push	r13
    1c06:	ef 92       	push	r14
    1c08:	ff 92       	push	r15
    1c0a:	0f 93       	push	r16
    1c0c:	1f 93       	push	r17
    1c0e:	cf 93       	push	r28
    1c10:	df 93       	push	r29
    1c12:	7c 01       	movw	r14, r24
    1c14:	26 2f       	mov	r18, r22
    1c16:	97 2f       	mov	r25, r23
    1c18:	8a 01       	movw	r16, r20
    1c1a:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <_ZN7TwoWire12transmittingE>
    1c1e:	88 23       	and	r24, r24
    1c20:	91 f0       	breq	.+36     	; 0x1c46 <_ZN7TwoWire5writeEPKhj+0x44>
    1c22:	c6 2f       	mov	r28, r22
    1c24:	d7 2f       	mov	r29, r23
    1c26:	6e 01       	movw	r12, r28
    1c28:	c4 0e       	add	r12, r20
    1c2a:	d5 1e       	adc	r13, r21
    1c2c:	cc 15       	cp	r28, r12
    1c2e:	dd 05       	cpc	r29, r13
    1c30:	71 f0       	breq	.+28     	; 0x1c4e <_ZN7TwoWire5writeEPKhj+0x4c>
    1c32:	69 91       	ld	r22, Y+
    1c34:	d7 01       	movw	r26, r14
    1c36:	ed 91       	ld	r30, X+
    1c38:	fc 91       	ld	r31, X
    1c3a:	01 90       	ld	r0, Z+
    1c3c:	f0 81       	ld	r31, Z
    1c3e:	e0 2d       	mov	r30, r0
    1c40:	c7 01       	movw	r24, r14
    1c42:	09 95       	icall
    1c44:	f3 cf       	rjmp	.-26     	; 0x1c2c <_ZN7TwoWire5writeEPKhj+0x2a>
    1c46:	64 2f       	mov	r22, r20
    1c48:	82 2f       	mov	r24, r18
    1c4a:	0e 94 7f 0c 	call	0x18fe	; 0x18fe <_Z12twi_transmitPKhh>
    1c4e:	c8 01       	movw	r24, r16
    1c50:	df 91       	pop	r29
    1c52:	cf 91       	pop	r28
    1c54:	1f 91       	pop	r17
    1c56:	0f 91       	pop	r16
    1c58:	ff 90       	pop	r15
    1c5a:	ef 90       	pop	r14
    1c5c:	df 90       	pop	r13
    1c5e:	cf 90       	pop	r12
    1c60:	08 95       	ret

00001c62 <_ZN7TwoWire5writeEh>:
    1c62:	cf 93       	push	r28
    1c64:	df 93       	push	r29
    1c66:	1f 92       	push	r1
    1c68:	cd b7       	in	r28, 0x3d	; 61
    1c6a:	de b7       	in	r29, 0x3e	; 62
    1c6c:	69 83       	std	Y+1, r22	; 0x01
    1c6e:	20 91 8a 02 	lds	r18, 0x028A	; 0x80028a <_ZN7TwoWire12transmittingE>
    1c72:	22 23       	and	r18, r18
    1c74:	d1 f0       	breq	.+52     	; 0x1caa <_ZN7TwoWire5writeEh+0x48>
    1c76:	20 91 8b 02 	lds	r18, 0x028B	; 0x80028b <_ZN7TwoWire14txBufferLengthE>
    1c7a:	20 32       	cpi	r18, 0x20	; 32
    1c7c:	40 f0       	brcs	.+16     	; 0x1c8e <_ZN7TwoWire5writeEh+0x2c>
    1c7e:	21 e0       	ldi	r18, 0x01	; 1
    1c80:	30 e0       	ldi	r19, 0x00	; 0
    1c82:	fc 01       	movw	r30, r24
    1c84:	33 83       	std	Z+3, r19	; 0x03
    1c86:	22 83       	std	Z+2, r18	; 0x02
    1c88:	80 e0       	ldi	r24, 0x00	; 0
    1c8a:	90 e0       	ldi	r25, 0x00	; 0
    1c8c:	15 c0       	rjmp	.+42     	; 0x1cb8 <_ZN7TwoWire5writeEh+0x56>
    1c8e:	80 91 8c 02 	lds	r24, 0x028C	; 0x80028c <_ZN7TwoWire13txBufferIndexE>
    1c92:	e8 2f       	mov	r30, r24
    1c94:	f0 e0       	ldi	r31, 0x00	; 0
    1c96:	e3 57       	subi	r30, 0x73	; 115
    1c98:	fd 4f       	sbci	r31, 0xFD	; 253
    1c9a:	99 81       	ldd	r25, Y+1	; 0x01
    1c9c:	90 83       	st	Z, r25
    1c9e:	8f 5f       	subi	r24, 0xFF	; 255
    1ca0:	80 93 8c 02 	sts	0x028C, r24	; 0x80028c <_ZN7TwoWire13txBufferIndexE>
    1ca4:	80 93 8b 02 	sts	0x028B, r24	; 0x80028b <_ZN7TwoWire14txBufferLengthE>
    1ca8:	05 c0       	rjmp	.+10     	; 0x1cb4 <_ZN7TwoWire5writeEh+0x52>
    1caa:	61 e0       	ldi	r22, 0x01	; 1
    1cac:	ce 01       	movw	r24, r28
    1cae:	01 96       	adiw	r24, 0x01	; 1
    1cb0:	0e 94 7f 0c 	call	0x18fe	; 0x18fe <_Z12twi_transmitPKhh>
    1cb4:	81 e0       	ldi	r24, 0x01	; 1
    1cb6:	90 e0       	ldi	r25, 0x00	; 0
    1cb8:	0f 90       	pop	r0
    1cba:	df 91       	pop	r29
    1cbc:	cf 91       	pop	r28
    1cbe:	08 95       	ret

00001cc0 <_ZN7TwoWireC1Ev>:
    1cc0:	fc 01       	movw	r30, r24
    1cc2:	13 82       	std	Z+3, r1	; 0x03
    1cc4:	12 82       	std	Z+2, r1	; 0x02
    1cc6:	88 ee       	ldi	r24, 0xE8	; 232
    1cc8:	93 e0       	ldi	r25, 0x03	; 3
    1cca:	a0 e0       	ldi	r26, 0x00	; 0
    1ccc:	b0 e0       	ldi	r27, 0x00	; 0
    1cce:	84 83       	std	Z+4, r24	; 0x04
    1cd0:	95 83       	std	Z+5, r25	; 0x05
    1cd2:	a6 83       	std	Z+6, r26	; 0x06
    1cd4:	b7 83       	std	Z+7, r27	; 0x07
    1cd6:	81 e3       	ldi	r24, 0x31	; 49
    1cd8:	91 e0       	ldi	r25, 0x01	; 1
    1cda:	91 83       	std	Z+1, r25	; 0x01
    1cdc:	80 83       	st	Z, r24
    1cde:	08 95       	ret

00001ce0 <_ZN7TwoWire5beginEv>:
    1ce0:	10 92 af 02 	sts	0x02AF, r1	; 0x8002af <_ZN7TwoWire13rxBufferIndexE>
    1ce4:	10 92 ae 02 	sts	0x02AE, r1	; 0x8002ae <_ZN7TwoWire14rxBufferLengthE>
    1ce8:	10 92 8c 02 	sts	0x028C, r1	; 0x80028c <_ZN7TwoWire13txBufferIndexE>
    1cec:	10 92 8b 02 	sts	0x028B, r1	; 0x80028b <_ZN7TwoWire14txBufferLengthE>
    1cf0:	0c 94 c3 0b 	jmp	0x1786	; 0x1786 <_Z8twi_initv>

00001cf4 <_ZN7TwoWire17beginTransmissionEh>:
    1cf4:	81 e0       	ldi	r24, 0x01	; 1
    1cf6:	80 93 8a 02 	sts	0x028A, r24	; 0x80028a <_ZN7TwoWire12transmittingE>
    1cfa:	60 93 ad 02 	sts	0x02AD, r22	; 0x8002ad <_ZN7TwoWire9txAddressE>
    1cfe:	10 92 8c 02 	sts	0x028C, r1	; 0x80028c <_ZN7TwoWire13txBufferIndexE>
    1d02:	10 92 8b 02 	sts	0x028B, r1	; 0x80028b <_ZN7TwoWire14txBufferLengthE>
    1d06:	08 95       	ret

00001d08 <_ZN7TwoWire15endTransmissionEh>:
    1d08:	0f 93       	push	r16
    1d0a:	06 2f       	mov	r16, r22
    1d0c:	21 e0       	ldi	r18, 0x01	; 1
    1d0e:	40 91 8b 02 	lds	r20, 0x028B	; 0x80028b <_ZN7TwoWire14txBufferLengthE>
    1d12:	6d e8       	ldi	r22, 0x8D	; 141
    1d14:	72 e0       	ldi	r23, 0x02	; 2
    1d16:	80 91 ad 02 	lds	r24, 0x02AD	; 0x8002ad <_ZN7TwoWire9txAddressE>
    1d1a:	0e 94 29 0c 	call	0x1852	; 0x1852 <_Z11twi_writeTohPhhhh>
    1d1e:	10 92 8c 02 	sts	0x028C, r1	; 0x80028c <_ZN7TwoWire13txBufferIndexE>
    1d22:	10 92 8b 02 	sts	0x028B, r1	; 0x80028b <_ZN7TwoWire14txBufferLengthE>
    1d26:	10 92 8a 02 	sts	0x028A, r1	; 0x80028a <_ZN7TwoWire12transmittingE>
    1d2a:	0f 91       	pop	r16
    1d2c:	08 95       	ret

00001d2e <_ZN7TwoWire11requestFromEhhmhh>:
    1d2e:	4f 92       	push	r4
    1d30:	5f 92       	push	r5
    1d32:	6f 92       	push	r6
    1d34:	7f 92       	push	r7
    1d36:	af 92       	push	r10
    1d38:	bf 92       	push	r11
    1d3a:	cf 92       	push	r12
    1d3c:	ef 92       	push	r14
    1d3e:	ff 92       	push	r15
    1d40:	0f 93       	push	r16
    1d42:	1f 93       	push	r17
    1d44:	cf 93       	push	r28
    1d46:	df 93       	push	r29
    1d48:	5c 01       	movw	r10, r24
    1d4a:	f6 2e       	mov	r15, r22
    1d4c:	d4 2f       	mov	r29, r20
    1d4e:	28 01       	movw	r4, r16
    1d50:	39 01       	movw	r6, r18
    1d52:	ee 20       	and	r14, r14
    1d54:	21 f1       	breq	.+72     	; 0x1d9e <_ZN7TwoWire11requestFromEhhmhh+0x70>
    1d56:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <_ZN7TwoWire17beginTransmissionEh>
    1d5a:	ce 2d       	mov	r28, r14
    1d5c:	c4 30       	cpi	r28, 0x04	; 4
    1d5e:	08 f0       	brcs	.+2      	; 0x1d62 <_ZN7TwoWire11requestFromEhhmhh+0x34>
    1d60:	c3 e0       	ldi	r28, 0x03	; 3
    1d62:	c1 50       	subi	r28, 0x01	; 1
    1d64:	c0 f0       	brcs	.+48     	; 0x1d96 <_ZN7TwoWire11requestFromEhhmhh+0x68>
    1d66:	d5 01       	movw	r26, r10
    1d68:	ed 91       	ld	r30, X+
    1d6a:	fc 91       	ld	r31, X
    1d6c:	b8 e0       	ldi	r27, 0x08	; 8
    1d6e:	cb 9f       	mul	r28, r27
    1d70:	c0 01       	movw	r24, r0
    1d72:	11 24       	eor	r1, r1
    1d74:	a3 01       	movw	r20, r6
    1d76:	92 01       	movw	r18, r4
    1d78:	04 c0       	rjmp	.+8      	; 0x1d82 <_ZN7TwoWire11requestFromEhhmhh+0x54>
    1d7a:	56 95       	lsr	r21
    1d7c:	47 95       	ror	r20
    1d7e:	37 95       	ror	r19
    1d80:	27 95       	ror	r18
    1d82:	8a 95       	dec	r24
    1d84:	d2 f7       	brpl	.-12     	; 0x1d7a <_ZN7TwoWire11requestFromEhhmhh+0x4c>
    1d86:	ca 01       	movw	r24, r20
    1d88:	b9 01       	movw	r22, r18
    1d8a:	01 90       	ld	r0, Z+
    1d8c:	f0 81       	ld	r31, Z
    1d8e:	e0 2d       	mov	r30, r0
    1d90:	c5 01       	movw	r24, r10
    1d92:	09 95       	icall
    1d94:	e6 cf       	rjmp	.-52     	; 0x1d62 <_ZN7TwoWire11requestFromEhhmhh+0x34>
    1d96:	60 e0       	ldi	r22, 0x00	; 0
    1d98:	c5 01       	movw	r24, r10
    1d9a:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <_ZN7TwoWire15endTransmissionEh>
    1d9e:	4d 2f       	mov	r20, r29
    1da0:	d1 32       	cpi	r29, 0x21	; 33
    1da2:	08 f0       	brcs	.+2      	; 0x1da6 <_ZN7TwoWire11requestFromEhhmhh+0x78>
    1da4:	40 e2       	ldi	r20, 0x20	; 32
    1da6:	2c 2d       	mov	r18, r12
    1da8:	60 eb       	ldi	r22, 0xB0	; 176
    1daa:	72 e0       	ldi	r23, 0x02	; 2
    1dac:	8f 2d       	mov	r24, r15
    1dae:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <_Z12twi_readFromhPhhh>
    1db2:	10 92 af 02 	sts	0x02AF, r1	; 0x8002af <_ZN7TwoWire13rxBufferIndexE>
    1db6:	80 93 ae 02 	sts	0x02AE, r24	; 0x8002ae <_ZN7TwoWire14rxBufferLengthE>
    1dba:	df 91       	pop	r29
    1dbc:	cf 91       	pop	r28
    1dbe:	1f 91       	pop	r17
    1dc0:	0f 91       	pop	r16
    1dc2:	ff 90       	pop	r15
    1dc4:	ef 90       	pop	r14
    1dc6:	cf 90       	pop	r12
    1dc8:	bf 90       	pop	r11
    1dca:	af 90       	pop	r10
    1dcc:	7f 90       	pop	r7
    1dce:	6f 90       	pop	r6
    1dd0:	5f 90       	pop	r5
    1dd2:	4f 90       	pop	r4
    1dd4:	08 95       	ret

00001dd6 <_ZN7TwoWire11requestFromEhhh>:
    1dd6:	cf 92       	push	r12
    1dd8:	ef 92       	push	r14
    1dda:	0f 93       	push	r16
    1ddc:	1f 93       	push	r17
    1dde:	c2 2e       	mov	r12, r18
    1de0:	e1 2c       	mov	r14, r1
    1de2:	00 e0       	ldi	r16, 0x00	; 0
    1de4:	10 e0       	ldi	r17, 0x00	; 0
    1de6:	98 01       	movw	r18, r16
    1de8:	0e 94 97 0e 	call	0x1d2e	; 0x1d2e <_ZN7TwoWire11requestFromEhhmhh>
    1dec:	1f 91       	pop	r17
    1dee:	0f 91       	pop	r16
    1df0:	ef 90       	pop	r14
    1df2:	cf 90       	pop	r12
    1df4:	08 95       	ret

00001df6 <_ZN7TwoWire11requestFromEii>:
    1df6:	21 e0       	ldi	r18, 0x01	; 1
    1df8:	0c 94 eb 0e 	jmp	0x1dd6	; 0x1dd6 <_ZN7TwoWire11requestFromEhhh>

00001dfc <_ZN7TwoWire15endTransmissionEv>:
    1dfc:	61 e0       	ldi	r22, 0x01	; 1
    1dfe:	0c 94 84 0e 	jmp	0x1d08	; 0x1d08 <_ZN7TwoWire15endTransmissionEh>

00001e02 <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
    1e02:	8e e7       	ldi	r24, 0x7E	; 126
    1e04:	92 e0       	ldi	r25, 0x02	; 2
    1e06:	0c 94 60 0e 	jmp	0x1cc0	; 0x1cc0 <_ZN7TwoWireC1Ev>

00001e0a <nothing>:
#include <avr/pgmspace.h>
#include <stdio.h>

#include "wiring_private.h"

static void nothing(void) {
    1e0a:	08 95       	ret

00001e0c <attachInterrupt>:
#endif
};
// volatile static voidFuncPtr twiIntFunc;

void attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode) {
  if(interruptNum < EXTERNAL_NUM_INTERRUPTS) {
    1e0c:	82 30       	cpi	r24, 0x02	; 2
    1e0e:	e8 f4       	brcc	.+58     	; 0x1e4a <attachInterrupt+0x3e>
    intFunc[interruptNum] = userFunc;
    1e10:	e8 2f       	mov	r30, r24
    1e12:	f0 e0       	ldi	r31, 0x00	; 0
    1e14:	ee 0f       	add	r30, r30
    1e16:	ff 1f       	adc	r31, r31
    1e18:	ef 5f       	subi	r30, 0xFF	; 255
    1e1a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e1c:	71 83       	std	Z+1, r23	; 0x01
    1e1e:	60 83       	st	Z, r22
    // to the configuration bits in the hardware register, so we simply shift
    // the mode into place.
      
    // Enable the interrupt.
      
    switch (interruptNum) {
    1e20:	81 30       	cpi	r24, 0x01	; 1
    1e22:	41 f0       	breq	.+16     	; 0x1e34 <attachInterrupt+0x28>
      EIMSK |= (1 << INT7);
      break;
#else		
    case 0:
    #if defined(EICRA) && defined(ISC00) && defined(EIMSK)
      EICRA = (EICRA & ~((1 << ISC00) | (1 << ISC01))) | (mode << ISC00);
    1e24:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    1e28:	8c 7f       	andi	r24, 0xFC	; 252
    1e2a:	84 2b       	or	r24, r20
    1e2c:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
      EIMSK |= (1 << INT0);
    1e30:	e8 9a       	sbi	0x1d, 0	; 29
      MCUCR = (MCUCR & ~((1 << ISC00) | (1 << ISC01))) | (mode << ISC00);
      GIMSK |= (1 << INT0);
    #else
      #error attachInterrupt not finished for this CPU (case 0)
    #endif
      break;
    1e32:	08 95       	ret

    case 1:
    #if defined(EICRA) && defined(ISC10) && defined(ISC11) && defined(EIMSK)
      EICRA = (EICRA & ~((1 << ISC10) | (1 << ISC11))) | (mode << ISC10);
    1e34:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    1e38:	44 0f       	add	r20, r20
    1e3a:	55 1f       	adc	r21, r21
    1e3c:	44 0f       	add	r20, r20
    1e3e:	55 1f       	adc	r21, r21
    1e40:	83 7f       	andi	r24, 0xF3	; 243
    1e42:	84 2b       	or	r24, r20
    1e44:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
      EIMSK |= (1 << INT1);
    1e48:	e9 9a       	sbi	0x1d, 1	; 29
    1e4a:	08 95       	ret

00001e4c <detachInterrupt>:
    }
  }
}

void detachInterrupt(uint8_t interruptNum) {
  if(interruptNum < EXTERNAL_NUM_INTERRUPTS) {
    1e4c:	82 30       	cpi	r24, 0x02	; 2
    1e4e:	78 f4       	brcc	.+30     	; 0x1e6e <detachInterrupt+0x22>
    // Disable the interrupt.  (We can't assume that interruptNum is equal
    // to the number of the EIMSK bit to clear, as this isn't true on the 
    // ATmega8.  There, INT0 is 6 and INT1 is 7.)
    switch (interruptNum) {
    1e50:	81 30       	cpi	r24, 0x01	; 1
    1e52:	11 f0       	breq	.+4      	; 0x1e58 <detachInterrupt+0xc>
      EIMSK &= ~(1 << INT7);
      break;
#else
    case 0:
    #if defined(EIMSK) && defined(INT0)
      EIMSK &= ~(1 << INT0);
    1e54:	e8 98       	cbi	0x1d, 0	; 29
    #elif defined(GIMSK) && defined(INT0)
      GIMSK &= ~(1 << INT0);
    #else
      #error detachInterrupt not finished for this cpu
    #endif
      break;
    1e56:	01 c0       	rjmp	.+2      	; 0x1e5a <detachInterrupt+0xe>

    case 1:
    #if defined(EIMSK) && defined(INT1)
      EIMSK &= ~(1 << INT1);
    1e58:	e9 98       	cbi	0x1d, 1	; 29
    #endif
      break;       
#endif
    }
      
    intFunc[interruptNum] = nothing;
    1e5a:	e8 2f       	mov	r30, r24
    1e5c:	f0 e0       	ldi	r31, 0x00	; 0
    1e5e:	ee 0f       	add	r30, r30
    1e60:	ff 1f       	adc	r31, r31
    1e62:	ef 5f       	subi	r30, 0xFF	; 255
    1e64:	fe 4f       	sbci	r31, 0xFE	; 254
    1e66:	85 e0       	ldi	r24, 0x05	; 5
    1e68:	9f e0       	ldi	r25, 0x0F	; 15
    1e6a:	91 83       	std	Z+1, r25	; 0x01
    1e6c:	80 83       	st	Z, r24
    1e6e:	08 95       	ret

00001e70 <__vector_1>:
IMPLEMENT_ISR(INT6_vect, EXTERNAL_INT_6)
IMPLEMENT_ISR(INT7_vect, EXTERNAL_INT_7)

#else

IMPLEMENT_ISR(INT0_vect, EXTERNAL_INT_0)
    1e70:	1f 92       	push	r1
    1e72:	0f 92       	push	r0
    1e74:	0f b6       	in	r0, 0x3f	; 63
    1e76:	0f 92       	push	r0
    1e78:	11 24       	eor	r1, r1
    1e7a:	2f 93       	push	r18
    1e7c:	3f 93       	push	r19
    1e7e:	4f 93       	push	r20
    1e80:	5f 93       	push	r21
    1e82:	6f 93       	push	r22
    1e84:	7f 93       	push	r23
    1e86:	8f 93       	push	r24
    1e88:	9f 93       	push	r25
    1e8a:	af 93       	push	r26
    1e8c:	bf 93       	push	r27
    1e8e:	ef 93       	push	r30
    1e90:	ff 93       	push	r31
    1e92:	e0 91 01 01 	lds	r30, 0x0101	; 0x800101 <intFunc>
    1e96:	f0 91 02 01 	lds	r31, 0x0102	; 0x800102 <intFunc+0x1>
    1e9a:	09 95       	icall
    1e9c:	ff 91       	pop	r31
    1e9e:	ef 91       	pop	r30
    1ea0:	bf 91       	pop	r27
    1ea2:	af 91       	pop	r26
    1ea4:	9f 91       	pop	r25
    1ea6:	8f 91       	pop	r24
    1ea8:	7f 91       	pop	r23
    1eaa:	6f 91       	pop	r22
    1eac:	5f 91       	pop	r21
    1eae:	4f 91       	pop	r20
    1eb0:	3f 91       	pop	r19
    1eb2:	2f 91       	pop	r18
    1eb4:	0f 90       	pop	r0
    1eb6:	0f be       	out	0x3f, r0	; 63
    1eb8:	0f 90       	pop	r0
    1eba:	1f 90       	pop	r1
    1ebc:	18 95       	reti

00001ebe <__vector_2>:
IMPLEMENT_ISR(INT1_vect, EXTERNAL_INT_1)
    1ebe:	1f 92       	push	r1
    1ec0:	0f 92       	push	r0
    1ec2:	0f b6       	in	r0, 0x3f	; 63
    1ec4:	0f 92       	push	r0
    1ec6:	11 24       	eor	r1, r1
    1ec8:	2f 93       	push	r18
    1eca:	3f 93       	push	r19
    1ecc:	4f 93       	push	r20
    1ece:	5f 93       	push	r21
    1ed0:	6f 93       	push	r22
    1ed2:	7f 93       	push	r23
    1ed4:	8f 93       	push	r24
    1ed6:	9f 93       	push	r25
    1ed8:	af 93       	push	r26
    1eda:	bf 93       	push	r27
    1edc:	ef 93       	push	r30
    1ede:	ff 93       	push	r31
    1ee0:	e0 91 03 01 	lds	r30, 0x0103	; 0x800103 <intFunc+0x2>
    1ee4:	f0 91 04 01 	lds	r31, 0x0104	; 0x800104 <intFunc+0x3>
    1ee8:	09 95       	icall
    1eea:	ff 91       	pop	r31
    1eec:	ef 91       	pop	r30
    1eee:	bf 91       	pop	r27
    1ef0:	af 91       	pop	r26
    1ef2:	9f 91       	pop	r25
    1ef4:	8f 91       	pop	r24
    1ef6:	7f 91       	pop	r23
    1ef8:	6f 91       	pop	r22
    1efa:	5f 91       	pop	r21
    1efc:	4f 91       	pop	r20
    1efe:	3f 91       	pop	r19
    1f00:	2f 91       	pop	r18
    1f02:	0f 90       	pop	r0
    1f04:	0f be       	out	0x3f, r0	; 63
    1f06:	0f 90       	pop	r0
    1f08:	1f 90       	pop	r1
    1f0a:	18 95       	reti

00001f0c <__vector_16>:
#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
    1f0c:	1f 92       	push	r1
    1f0e:	0f 92       	push	r0
    1f10:	0f b6       	in	r0, 0x3f	; 63
    1f12:	0f 92       	push	r0
    1f14:	11 24       	eor	r1, r1
    1f16:	2f 93       	push	r18
    1f18:	3f 93       	push	r19
    1f1a:	8f 93       	push	r24
    1f1c:	9f 93       	push	r25
    1f1e:	af 93       	push	r26
    1f20:	bf 93       	push	r27
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
    1f22:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <timer0_millis>
    1f26:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <timer0_millis+0x1>
    1f2a:	a0 91 d3 02 	lds	r26, 0x02D3	; 0x8002d3 <timer0_millis+0x2>
    1f2e:	b0 91 d4 02 	lds	r27, 0x02D4	; 0x8002d4 <timer0_millis+0x3>
	unsigned char f = timer0_fract;
    1f32:	30 91 d0 02 	lds	r19, 0x02D0	; 0x8002d0 <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
    1f36:	23 e0       	ldi	r18, 0x03	; 3
    1f38:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
    1f3a:	2d 37       	cpi	r18, 0x7D	; 125
    1f3c:	20 f4       	brcc	.+8      	; 0x1f46 <__vector_16+0x3a>
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
    1f3e:	01 96       	adiw	r24, 0x01	; 1
    1f40:	a1 1d       	adc	r26, r1
    1f42:	b1 1d       	adc	r27, r1
    1f44:	05 c0       	rjmp	.+10     	; 0x1f50 <__vector_16+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
    1f46:	26 e8       	ldi	r18, 0x86	; 134
    1f48:	23 0f       	add	r18, r19
		m += 1;
    1f4a:	02 96       	adiw	r24, 0x02	; 2
    1f4c:	a1 1d       	adc	r26, r1
    1f4e:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
    1f50:	20 93 d0 02 	sts	0x02D0, r18	; 0x8002d0 <timer0_fract>
	timer0_millis = m;
    1f54:	80 93 d1 02 	sts	0x02D1, r24	; 0x8002d1 <timer0_millis>
    1f58:	90 93 d2 02 	sts	0x02D2, r25	; 0x8002d2 <timer0_millis+0x1>
    1f5c:	a0 93 d3 02 	sts	0x02D3, r26	; 0x8002d3 <timer0_millis+0x2>
    1f60:	b0 93 d4 02 	sts	0x02D4, r27	; 0x8002d4 <timer0_millis+0x3>
	timer0_overflow_count++;
    1f64:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <timer0_overflow_count>
    1f68:	90 91 d6 02 	lds	r25, 0x02D6	; 0x8002d6 <timer0_overflow_count+0x1>
    1f6c:	a0 91 d7 02 	lds	r26, 0x02D7	; 0x8002d7 <timer0_overflow_count+0x2>
    1f70:	b0 91 d8 02 	lds	r27, 0x02D8	; 0x8002d8 <timer0_overflow_count+0x3>
    1f74:	01 96       	adiw	r24, 0x01	; 1
    1f76:	a1 1d       	adc	r26, r1
    1f78:	b1 1d       	adc	r27, r1
    1f7a:	80 93 d5 02 	sts	0x02D5, r24	; 0x8002d5 <timer0_overflow_count>
    1f7e:	90 93 d6 02 	sts	0x02D6, r25	; 0x8002d6 <timer0_overflow_count+0x1>
    1f82:	a0 93 d7 02 	sts	0x02D7, r26	; 0x8002d7 <timer0_overflow_count+0x2>
    1f86:	b0 93 d8 02 	sts	0x02D8, r27	; 0x8002d8 <timer0_overflow_count+0x3>
}
    1f8a:	bf 91       	pop	r27
    1f8c:	af 91       	pop	r26
    1f8e:	9f 91       	pop	r25
    1f90:	8f 91       	pop	r24
    1f92:	3f 91       	pop	r19
    1f94:	2f 91       	pop	r18
    1f96:	0f 90       	pop	r0
    1f98:	0f be       	out	0x3f, r0	; 63
    1f9a:	0f 90       	pop	r0
    1f9c:	1f 90       	pop	r1
    1f9e:	18 95       	reti

00001fa0 <micros>:
	return m;
}

unsigned long micros() {
	unsigned long m;
	uint8_t oldSREG = SREG, t;
    1fa0:	3f b7       	in	r19, 0x3f	; 63
	
	cli();
    1fa2:	f8 94       	cli
	m = timer0_overflow_count;
    1fa4:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <timer0_overflow_count>
    1fa8:	90 91 d6 02 	lds	r25, 0x02D6	; 0x8002d6 <timer0_overflow_count+0x1>
    1fac:	a0 91 d7 02 	lds	r26, 0x02D7	; 0x8002d7 <timer0_overflow_count+0x2>
    1fb0:	b0 91 d8 02 	lds	r27, 0x02D8	; 0x8002d8 <timer0_overflow_count+0x3>
#if defined(TCNT0)
	t = TCNT0;
    1fb4:	26 b5       	in	r18, 0x26	; 38
#else
	#error TIMER 0 not defined
#endif

#ifdef TIFR0
	if ((TIFR0 & _BV(TOV0)) && (t < 255))
    1fb6:	a8 9b       	sbis	0x15, 0	; 21
    1fb8:	05 c0       	rjmp	.+10     	; 0x1fc4 <micros+0x24>
    1fba:	2f 3f       	cpi	r18, 0xFF	; 255
    1fbc:	19 f0       	breq	.+6      	; 0x1fc4 <micros+0x24>
		m++;
    1fbe:	01 96       	adiw	r24, 0x01	; 1
    1fc0:	a1 1d       	adc	r26, r1
    1fc2:	b1 1d       	adc	r27, r1
#else
	if ((TIFR & _BV(TOV0)) && (t < 255))
		m++;
#endif

	SREG = oldSREG;
    1fc4:	3f bf       	out	0x3f, r19	; 63
	
	return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
    1fc6:	66 27       	eor	r22, r22
    1fc8:	78 2f       	mov	r23, r24
    1fca:	89 2f       	mov	r24, r25
    1fcc:	9a 2f       	mov	r25, r26
    1fce:	62 0f       	add	r22, r18
    1fd0:	71 1d       	adc	r23, r1
    1fd2:	81 1d       	adc	r24, r1
    1fd4:	91 1d       	adc	r25, r1
    1fd6:	42 e0       	ldi	r20, 0x02	; 2
    1fd8:	66 0f       	add	r22, r22
    1fda:	77 1f       	adc	r23, r23
    1fdc:	88 1f       	adc	r24, r24
    1fde:	99 1f       	adc	r25, r25
    1fe0:	4a 95       	dec	r20
    1fe2:	d1 f7       	brne	.-12     	; 0x1fd8 <micros+0x38>
}
    1fe4:	08 95       	ret

00001fe6 <delay>:

void delay(unsigned long ms)
{
    1fe6:	8f 92       	push	r8
    1fe8:	9f 92       	push	r9
    1fea:	af 92       	push	r10
    1fec:	bf 92       	push	r11
    1fee:	cf 92       	push	r12
    1ff0:	df 92       	push	r13
    1ff2:	ef 92       	push	r14
    1ff4:	ff 92       	push	r15
    1ff6:	6b 01       	movw	r12, r22
    1ff8:	7c 01       	movw	r14, r24
	uint32_t start = micros();
    1ffa:	0e 94 d0 0f 	call	0x1fa0	; 0x1fa0 <micros>
    1ffe:	4b 01       	movw	r8, r22
    2000:	5c 01       	movw	r10, r24

	while (ms > 0) {
    2002:	c1 14       	cp	r12, r1
    2004:	d1 04       	cpc	r13, r1
    2006:	e1 04       	cpc	r14, r1
    2008:	f1 04       	cpc	r15, r1
    200a:	f1 f0       	breq	.+60     	; 0x2048 <delay+0x62>
		yield();
    200c:	0e 94 10 11 	call	0x2220	; 0x2220 <yield>
		while ( ms > 0 && (micros() - start) >= 1000) {
    2010:	0e 94 d0 0f 	call	0x1fa0	; 0x1fa0 <micros>
    2014:	68 19       	sub	r22, r8
    2016:	79 09       	sbc	r23, r9
    2018:	8a 09       	sbc	r24, r10
    201a:	9b 09       	sbc	r25, r11
    201c:	68 3e       	cpi	r22, 0xE8	; 232
    201e:	73 40       	sbci	r23, 0x03	; 3
    2020:	81 05       	cpc	r24, r1
    2022:	91 05       	cpc	r25, r1
    2024:	70 f3       	brcs	.-36     	; 0x2002 <delay+0x1c>
			ms--;
    2026:	21 e0       	ldi	r18, 0x01	; 1
    2028:	c2 1a       	sub	r12, r18
    202a:	d1 08       	sbc	r13, r1
    202c:	e1 08       	sbc	r14, r1
    202e:	f1 08       	sbc	r15, r1
			start += 1000;
    2030:	88 ee       	ldi	r24, 0xE8	; 232
    2032:	88 0e       	add	r8, r24
    2034:	83 e0       	ldi	r24, 0x03	; 3
    2036:	98 1e       	adc	r9, r24
    2038:	a1 1c       	adc	r10, r1
    203a:	b1 1c       	adc	r11, r1
{
	uint32_t start = micros();

	while (ms > 0) {
		yield();
		while ( ms > 0 && (micros() - start) >= 1000) {
    203c:	c1 14       	cp	r12, r1
    203e:	d1 04       	cpc	r13, r1
    2040:	e1 04       	cpc	r14, r1
    2042:	f1 04       	cpc	r15, r1
    2044:	29 f7       	brne	.-54     	; 0x2010 <delay+0x2a>
    2046:	dd cf       	rjmp	.-70     	; 0x2002 <delay+0x1c>
			ms--;
			start += 1000;
		}
	}
}
    2048:	ff 90       	pop	r15
    204a:	ef 90       	pop	r14
    204c:	df 90       	pop	r13
    204e:	cf 90       	pop	r12
    2050:	bf 90       	pop	r11
    2052:	af 90       	pop	r10
    2054:	9f 90       	pop	r9
    2056:	8f 90       	pop	r8
    2058:	08 95       	ret

0000205a <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    205a:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    205c:	84 b5       	in	r24, 0x24	; 36
    205e:	82 60       	ori	r24, 0x02	; 2
    2060:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    2062:	84 b5       	in	r24, 0x24	; 36
    2064:	81 60       	ori	r24, 0x01	; 1
    2066:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    2068:	85 b5       	in	r24, 0x25	; 37
    206a:	82 60       	ori	r24, 0x02	; 2
    206c:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    206e:	85 b5       	in	r24, 0x25	; 37
    2070:	81 60       	ori	r24, 0x01	; 1
    2072:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    2074:	ee e6       	ldi	r30, 0x6E	; 110
    2076:	f0 e0       	ldi	r31, 0x00	; 0
    2078:	80 81       	ld	r24, Z
    207a:	81 60       	ori	r24, 0x01	; 1
    207c:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    207e:	e1 e8       	ldi	r30, 0x81	; 129
    2080:	f0 e0       	ldi	r31, 0x00	; 0
    2082:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    2084:	80 81       	ld	r24, Z
    2086:	82 60       	ori	r24, 0x02	; 2
    2088:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    208a:	80 81       	ld	r24, Z
    208c:	81 60       	ori	r24, 0x01	; 1
    208e:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    2090:	e0 e8       	ldi	r30, 0x80	; 128
    2092:	f0 e0       	ldi	r31, 0x00	; 0
    2094:	80 81       	ld	r24, Z
    2096:	81 60       	ori	r24, 0x01	; 1
    2098:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    209a:	e1 eb       	ldi	r30, 0xB1	; 177
    209c:	f0 e0       	ldi	r31, 0x00	; 0
    209e:	80 81       	ld	r24, Z
    20a0:	84 60       	ori	r24, 0x04	; 4
    20a2:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    20a4:	e0 eb       	ldi	r30, 0xB0	; 176
    20a6:	f0 e0       	ldi	r31, 0x00	; 0
    20a8:	80 81       	ld	r24, Z
    20aa:	81 60       	ori	r24, 0x01	; 1
    20ac:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    20ae:	ea e7       	ldi	r30, 0x7A	; 122
    20b0:	f0 e0       	ldi	r31, 0x00	; 0
    20b2:	80 81       	ld	r24, Z
    20b4:	84 60       	ori	r24, 0x04	; 4
    20b6:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    20b8:	80 81       	ld	r24, Z
    20ba:	82 60       	ori	r24, 0x02	; 2
    20bc:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    20be:	80 81       	ld	r24, Z
    20c0:	81 60       	ori	r24, 0x01	; 1
    20c2:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    20c4:	80 81       	ld	r24, Z
    20c6:	80 68       	ori	r24, 0x80	; 128
    20c8:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    20ca:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    20ce:	08 95       	ret

000020d0 <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
    20d0:	83 30       	cpi	r24, 0x03	; 3
    20d2:	81 f0       	breq	.+32     	; 0x20f4 <turnOffPWM+0x24>
    20d4:	28 f4       	brcc	.+10     	; 0x20e0 <turnOffPWM+0x10>
    20d6:	81 30       	cpi	r24, 0x01	; 1
    20d8:	99 f0       	breq	.+38     	; 0x2100 <turnOffPWM+0x30>
    20da:	82 30       	cpi	r24, 0x02	; 2
    20dc:	a1 f0       	breq	.+40     	; 0x2106 <turnOffPWM+0x36>
    20de:	08 95       	ret
    20e0:	87 30       	cpi	r24, 0x07	; 7
    20e2:	a9 f0       	breq	.+42     	; 0x210e <turnOffPWM+0x3e>
    20e4:	88 30       	cpi	r24, 0x08	; 8
    20e6:	b9 f0       	breq	.+46     	; 0x2116 <turnOffPWM+0x46>
    20e8:	84 30       	cpi	r24, 0x04	; 4
    20ea:	d1 f4       	brne	.+52     	; 0x2120 <turnOffPWM+0x50>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    20ec:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    20f0:	8f 7d       	andi	r24, 0xDF	; 223
    20f2:	03 c0       	rjmp	.+6      	; 0x20fa <turnOffPWM+0x2a>
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
    20f4:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    20f8:	8f 77       	andi	r24, 0x7F	; 127
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    20fa:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    20fe:	08 95       	ret
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
    2100:	84 b5       	in	r24, 0x24	; 36
    2102:	8f 77       	andi	r24, 0x7F	; 127
    2104:	02 c0       	rjmp	.+4      	; 0x210a <turnOffPWM+0x3a>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
    2106:	84 b5       	in	r24, 0x24	; 36
    2108:	8f 7d       	andi	r24, 0xDF	; 223
    210a:	84 bd       	out	0x24, r24	; 36
    210c:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
    210e:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    2112:	8f 77       	andi	r24, 0x7F	; 127
    2114:	03 c0       	rjmp	.+6      	; 0x211c <turnOffPWM+0x4c>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
    2116:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    211a:	8f 7d       	andi	r24, 0xDF	; 223
    211c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    2120:	08 95       	ret

00002122 <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    2122:	cf 93       	push	r28
    2124:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    2126:	90 e0       	ldi	r25, 0x00	; 0
    2128:	fc 01       	movw	r30, r24
    212a:	e4 58       	subi	r30, 0x84	; 132
    212c:	ff 4f       	sbci	r31, 0xFF	; 255
    212e:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    2130:	fc 01       	movw	r30, r24
    2132:	e0 57       	subi	r30, 0x70	; 112
    2134:	ff 4f       	sbci	r31, 0xFF	; 255
    2136:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    2138:	88 23       	and	r24, r24
    213a:	49 f1       	breq	.+82     	; 0x218e <pinMode+0x6c>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    213c:	90 e0       	ldi	r25, 0x00	; 0
    213e:	88 0f       	add	r24, r24
    2140:	99 1f       	adc	r25, r25
    2142:	fc 01       	movw	r30, r24
    2144:	e2 55       	subi	r30, 0x52	; 82
    2146:	ff 4f       	sbci	r31, 0xFF	; 255
    2148:	a5 91       	lpm	r26, Z+
    214a:	b4 91       	lpm	r27, Z
	out = portOutputRegister(port);
    214c:	8c 55       	subi	r24, 0x5C	; 92
    214e:	9f 4f       	sbci	r25, 0xFF	; 255
    2150:	fc 01       	movw	r30, r24
    2152:	c5 91       	lpm	r28, Z+
    2154:	d4 91       	lpm	r29, Z

	if (mode == INPUT) { 
		uint8_t oldSREG = SREG;
    2156:	9f b7       	in	r25, 0x3f	; 63

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
	out = portOutputRegister(port);

	if (mode == INPUT) { 
    2158:	61 11       	cpse	r22, r1
    215a:	08 c0       	rjmp	.+16     	; 0x216c <pinMode+0x4a>
		uint8_t oldSREG = SREG;
                cli();
    215c:	f8 94       	cli
		*reg &= ~bit;
    215e:	8c 91       	ld	r24, X
    2160:	20 95       	com	r18
    2162:	82 23       	and	r24, r18
    2164:	8c 93       	st	X, r24
		*out &= ~bit;
    2166:	88 81       	ld	r24, Y
    2168:	82 23       	and	r24, r18
    216a:	0a c0       	rjmp	.+20     	; 0x2180 <pinMode+0x5e>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    216c:	62 30       	cpi	r22, 0x02	; 2
    216e:	51 f4       	brne	.+20     	; 0x2184 <pinMode+0x62>
		uint8_t oldSREG = SREG;
                cli();
    2170:	f8 94       	cli
		*reg &= ~bit;
    2172:	8c 91       	ld	r24, X
    2174:	32 2f       	mov	r19, r18
    2176:	30 95       	com	r19
    2178:	83 23       	and	r24, r19
    217a:	8c 93       	st	X, r24
		*out |= bit;
    217c:	88 81       	ld	r24, Y
    217e:	82 2b       	or	r24, r18
    2180:	88 83       	st	Y, r24
    2182:	04 c0       	rjmp	.+8      	; 0x218c <pinMode+0x6a>
		SREG = oldSREG;
	} else {
		uint8_t oldSREG = SREG;
                cli();
    2184:	f8 94       	cli
		*reg |= bit;
    2186:	8c 91       	ld	r24, X
    2188:	82 2b       	or	r24, r18
    218a:	8c 93       	st	X, r24
		SREG = oldSREG;
    218c:	9f bf       	out	0x3f, r25	; 63
	}
}
    218e:	df 91       	pop	r29
    2190:	cf 91       	pop	r28
    2192:	08 95       	ret

00002194 <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    2194:	0f 93       	push	r16
    2196:	1f 93       	push	r17
    2198:	cf 93       	push	r28
    219a:	df 93       	push	r29
    219c:	1f 92       	push	r1
    219e:	cd b7       	in	r28, 0x3d	; 61
    21a0:	de b7       	in	r29, 0x3e	; 62
	uint8_t timer = digitalPinToTimer(pin);
    21a2:	28 2f       	mov	r18, r24
    21a4:	30 e0       	ldi	r19, 0x00	; 0
    21a6:	f9 01       	movw	r30, r18
    21a8:	e8 59       	subi	r30, 0x98	; 152
    21aa:	ff 4f       	sbci	r31, 0xFF	; 255
    21ac:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    21ae:	f9 01       	movw	r30, r18
    21b0:	e4 58       	subi	r30, 0x84	; 132
    21b2:	ff 4f       	sbci	r31, 0xFF	; 255
    21b4:	14 91       	lpm	r17, Z
	uint8_t port = digitalPinToPort(pin);
    21b6:	f9 01       	movw	r30, r18
    21b8:	e0 57       	subi	r30, 0x70	; 112
    21ba:	ff 4f       	sbci	r31, 0xFF	; 255
    21bc:	04 91       	lpm	r16, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
    21be:	00 23       	and	r16, r16
    21c0:	c9 f0       	breq	.+50     	; 0x21f4 <digitalWrite+0x60>

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    21c2:	88 23       	and	r24, r24
    21c4:	21 f0       	breq	.+8      	; 0x21ce <digitalWrite+0x3a>
    21c6:	69 83       	std	Y+1, r22	; 0x01
    21c8:	0e 94 68 10 	call	0x20d0	; 0x20d0 <turnOffPWM>
    21cc:	69 81       	ldd	r22, Y+1	; 0x01

	out = portOutputRegister(port);
    21ce:	e0 2f       	mov	r30, r16
    21d0:	f0 e0       	ldi	r31, 0x00	; 0
    21d2:	ee 0f       	add	r30, r30
    21d4:	ff 1f       	adc	r31, r31
    21d6:	ec 55       	subi	r30, 0x5C	; 92
    21d8:	ff 4f       	sbci	r31, 0xFF	; 255
    21da:	a5 91       	lpm	r26, Z+
    21dc:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
    21de:	9f b7       	in	r25, 0x3f	; 63
	cli();
    21e0:	f8 94       	cli

	if (val == LOW) {
		*out &= ~bit;
    21e2:	8c 91       	ld	r24, X
	out = portOutputRegister(port);

	uint8_t oldSREG = SREG;
	cli();

	if (val == LOW) {
    21e4:	61 11       	cpse	r22, r1
    21e6:	03 c0       	rjmp	.+6      	; 0x21ee <digitalWrite+0x5a>
		*out &= ~bit;
    21e8:	10 95       	com	r17
    21ea:	81 23       	and	r24, r17
    21ec:	01 c0       	rjmp	.+2      	; 0x21f0 <digitalWrite+0x5c>
	} else {
		*out |= bit;
    21ee:	81 2b       	or	r24, r17
    21f0:	8c 93       	st	X, r24
	}

	SREG = oldSREG;
    21f2:	9f bf       	out	0x3f, r25	; 63
}
    21f4:	0f 90       	pop	r0
    21f6:	df 91       	pop	r29
    21f8:	cf 91       	pop	r28
    21fa:	1f 91       	pop	r17
    21fc:	0f 91       	pop	r16
    21fe:	08 95       	ret

00002200 <initVariant>:
int atexit(void (* /*func*/ )()) { return 0; }

// Weak empty variant initialization function.
// May be redefined by variant files.
void initVariant() __attribute__((weak));
void initVariant() { }
    2200:	08 95       	ret

00002202 <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
    2202:	0e 94 2d 10 	call	0x205a	; 0x205a <init>

	initVariant();
    2206:	0e 94 00 11 	call	0x2200	; 0x2200 <initVariant>

#if defined(USBCON)
	USBDevice.attach();
#endif
	
	setup();
    220a:	0e 94 65 0a 	call	0x14ca	; 0x14ca <setup>
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
    220e:	c0 e0       	ldi	r28, 0x00	; 0
    2210:	d0 e0       	ldi	r29, 0x00	; 0
#endif
	
	setup();
    
	for (;;) {
		loop();
    2212:	0e 94 1e 0b 	call	0x163c	; 0x163c <loop>
		if (serialEventRun) serialEventRun();
    2216:	20 97       	sbiw	r28, 0x00	; 0
    2218:	e1 f3       	breq	.-8      	; 0x2212 <main+0x10>
    221a:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    221e:	f9 cf       	rjmp	.-14     	; 0x2212 <main+0x10>

00002220 <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
    2220:	08 95       	ret

00002222 <__divmodhi4>:
    2222:	97 fb       	bst	r25, 7
    2224:	07 2e       	mov	r0, r23
    2226:	16 f4       	brtc	.+4      	; 0x222c <__divmodhi4+0xa>
    2228:	00 94       	com	r0
    222a:	07 d0       	rcall	.+14     	; 0x223a <__divmodhi4_neg1>
    222c:	77 fd       	sbrc	r23, 7
    222e:	09 d0       	rcall	.+18     	; 0x2242 <__divmodhi4_neg2>
    2230:	0e 94 25 11 	call	0x224a	; 0x224a <__udivmodhi4>
    2234:	07 fc       	sbrc	r0, 7
    2236:	05 d0       	rcall	.+10     	; 0x2242 <__divmodhi4_neg2>
    2238:	3e f4       	brtc	.+14     	; 0x2248 <__divmodhi4_exit>

0000223a <__divmodhi4_neg1>:
    223a:	90 95       	com	r25
    223c:	81 95       	neg	r24
    223e:	9f 4f       	sbci	r25, 0xFF	; 255
    2240:	08 95       	ret

00002242 <__divmodhi4_neg2>:
    2242:	70 95       	com	r23
    2244:	61 95       	neg	r22
    2246:	7f 4f       	sbci	r23, 0xFF	; 255

00002248 <__divmodhi4_exit>:
    2248:	08 95       	ret

0000224a <__udivmodhi4>:
    224a:	aa 1b       	sub	r26, r26
    224c:	bb 1b       	sub	r27, r27
    224e:	51 e1       	ldi	r21, 0x11	; 17
    2250:	07 c0       	rjmp	.+14     	; 0x2260 <__udivmodhi4_ep>

00002252 <__udivmodhi4_loop>:
    2252:	aa 1f       	adc	r26, r26
    2254:	bb 1f       	adc	r27, r27
    2256:	a6 17       	cp	r26, r22
    2258:	b7 07       	cpc	r27, r23
    225a:	10 f0       	brcs	.+4      	; 0x2260 <__udivmodhi4_ep>
    225c:	a6 1b       	sub	r26, r22
    225e:	b7 0b       	sbc	r27, r23

00002260 <__udivmodhi4_ep>:
    2260:	88 1f       	adc	r24, r24
    2262:	99 1f       	adc	r25, r25
    2264:	5a 95       	dec	r21
    2266:	a9 f7       	brne	.-22     	; 0x2252 <__udivmodhi4_loop>
    2268:	80 95       	com	r24
    226a:	90 95       	com	r25
    226c:	bc 01       	movw	r22, r24
    226e:	cd 01       	movw	r24, r26
    2270:	08 95       	ret

00002272 <__tablejump2__>:
    2272:	ee 0f       	add	r30, r30
    2274:	ff 1f       	adc	r31, r31
    2276:	05 90       	lpm	r0, Z+
    2278:	f4 91       	lpm	r31, Z
    227a:	e0 2d       	mov	r30, r0
    227c:	09 94       	ijmp

0000227e <eeprom_read_byte>:
    227e:	f9 99       	sbic	0x1f, 1	; 31
    2280:	fe cf       	rjmp	.-4      	; 0x227e <eeprom_read_byte>
    2282:	92 bd       	out	0x22, r25	; 34
    2284:	81 bd       	out	0x21, r24	; 33
    2286:	f8 9a       	sbi	0x1f, 0	; 31
    2288:	99 27       	eor	r25, r25
    228a:	80 b5       	in	r24, 0x20	; 32
    228c:	08 95       	ret

0000228e <eeprom_update_byte>:
    228e:	26 2f       	mov	r18, r22

00002290 <eeprom_update_r18>:
    2290:	f9 99       	sbic	0x1f, 1	; 31
    2292:	fe cf       	rjmp	.-4      	; 0x2290 <eeprom_update_r18>
    2294:	92 bd       	out	0x22, r25	; 34
    2296:	81 bd       	out	0x21, r24	; 33
    2298:	f8 9a       	sbi	0x1f, 0	; 31
    229a:	01 97       	sbiw	r24, 0x01	; 1
    229c:	00 b4       	in	r0, 0x20	; 32
    229e:	02 16       	cp	r0, r18
    22a0:	39 f0       	breq	.+14     	; 0x22b0 <eeprom_update_r18+0x20>
    22a2:	1f ba       	out	0x1f, r1	; 31
    22a4:	20 bd       	out	0x20, r18	; 32
    22a6:	0f b6       	in	r0, 0x3f	; 63
    22a8:	f8 94       	cli
    22aa:	fa 9a       	sbi	0x1f, 2	; 31
    22ac:	f9 9a       	sbi	0x1f, 1	; 31
    22ae:	0f be       	out	0x3f, r0	; 63
    22b0:	08 95       	ret

000022b2 <_exit>:
    22b2:	f8 94       	cli

000022b4 <__stop_program>:
    22b4:	ff cf       	rjmp	.-2      	; 0x22b4 <__stop_program>
